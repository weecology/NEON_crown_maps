# Chunk 8
height_summary %>% mutate(error=abs(mean_field - predicted_height)) %>% group_by(Site) %>% filter(error==max(error)) %>% arrange(desc(error)) %>% as.data.frame()
#   ylim(min(c(min(height_summary$min_field,height_summary$predicted_height))),max(c(height_summary$predicted_height,height_summary$max_field))) + xlim(min(c(min(height_summary$min_field,height_summary$predicted_height))),max(c(height_summary$predicted_height,height_summary$max_field)))
# Chunk 9
#order by mean
order_site<-results %>% group_by(siteID) %>% summarize(mean=mean(stem_recall)) %>% arrange(desc(mean)) %>% .$siteID
recall_data<-results %>% group_by(plot_name,crown_id) %>% arrange(desc(eventID)) %>% slice(1) %>% group_by(siteID,plot_name)  %>% distinct(stem_recall, single_recall) %>% ungroup() %>% mutate(siteID=factor(siteID,order_site))
recall_data_melt<-reshape2::melt(recall_data,id.vars=c("siteID","plot_name"))
levels(recall_data_melt$variable)<-c("All Matches","Unique Matches")
recall_data_melt%>% ggplot(.,aes(x=siteID,y=value,fill=variable)) + geom_boxplot(alpha=0.6) + theme_bw() + scale_y_continuous("Field Stem Recall (%)", label=scales::percent,limits = c(0,1)) + coord_flip() + labs(x="Site")
ggsave("SiteStemRecall.svg",height=5,width=6)
ggsave("SiteStemRecall.png",height=5,width=6)
recall_data%>% ggplot(.,aes(x=siteID,y=single_recall)) + geom_boxplot(alpha=0.6) + theme_bw() + scale_y_continuous("Field Stem Recall (%)", label=scales::percent,limits = c(0,1)) + coord_flip() + labs(x="Site")
ggsave("SiteStemRecall_unique.png",height=5,width=6)
ggsave("SiteStemRecall_unique.svg",height=5,width=6)
results %>% group_by(plot_name,crown_id) %>% arrange(desc(eventID)) %>% slice(1) %>% group_by(siteID)%>% summarize(stem_recall=mean(stem_recall))
results %>% group_by(plot_name,crown_id) %>% arrange(desc(eventID)) %>% slice(1) %>% ungroup() %>% summarize(stem_recall=mean(stem_recall),single_recall=mean(single_recall))
# Chunk 1: setup
library(ggplot2)
library(scales)
library(dplyr)
library(rstanarm)
library(tidybayes)
library(tidyr)
library(stringr)
library(broom)
# Chunk 2
df<-read.csv("tile_averages.csv",row.names = 1)
colnames(df)[colnames(df) %in% "X0"]<-"count"
#mean across year
df<-df %>% group_by(Site,geo_index) %>% summarize(count=mean(count))
ggplot(df) + geom_density(aes(x=count)) + facet_wrap(~Site)
# Chunk 3
sample_data<-function(df, n=10){
df[sample(nrow(df),n),]
}
results<-list()
for(y in 1:200){
subtotal<-list()
for(x in seq(0.01,1,0.1)){
subtotal[[as.character(x)]]<-df %>% group_by(Site) %>% sample_frac(x) %>% summarize(total=sum(count)) %>% mutate(frac=x)
}
results[[y]]<-bind_rows(subtotal)
}
results<-bind_rows(results)
#Get sq km
sqkm<-df %>% group_by(Site) %>% summarize(n=n())
results<-merge(results,sqkm)
results<-results %>% mutate(sqkm=floor(frac*n))
#Summarize by fraction
results<-results %>% group_by(Site,sqkm) %>% summarize(mean=mean(total),lower=quantile(total,0.05),upper=quantile(total,0.95))
ggplot(results,aes(x=sqkm,y=mean)) +facet_wrap(~Site,scales="free") + geom_line() + geom_ribbon(aes(ymin=lower,ymax=upper)) + scale_y_continuous(label=comma) + labs(x="Extent (km^2)",y="Tree Count")
# Chunk 4
field<-read.csv("/Users/ben/Documents/NEON_crown_maps/Figures/vst_field_data.csv")
field$area<-field$maxCrownDiameter*field$ninetyCrownDiameter
field<-field %>%  filter(!is.na(itcEasting),!str_detect(eventID,"2014"),growthForm %in% c("single bole tree","multi-bole tree","small tree","sapling"),stemDiameter>15) %>% droplevels() %>% filter(height>3|is.na(height))
field<-field %>% group_by(individualID) %>% arrange(desc(eventID)) %>% slice(1)
# Chunk 5
#field %>% filter(siteID %in% results$Site) %>% filter(!is.na(easting)) %>% filter(stemDiameter < 8) %>% ggplot(.,aes(x=height,fill=siteID)) + geom_density(alpha=0.5)
# Chunk 6
#Scaling factor from a 40m plot to 1km tile
scaling=(1000 * 1000) /((20*20)*2)
#TODO plot type? Individual ID for multi-bole?
# plot_totals<-field %>% filter(siteID %in% results$Site) %>% filter(!is.na(itcEasting)) %>% filter(stemDiameter > 7.5) %>% filter(is.na(height)|height>3) %>% group_by(Site=siteID,plotID,eventID) %>% summarize(n=n()) %>% summarize(n=round(mean(n)))
stan_glm <- stan_glm(n~0 + Site,data = plot_totals,family = poisson,cores=4, iter=20000)
# Chunk 7
newdata <- results %>% group_by(Site,sqkm) %>% distinct() %>% dplyr::select(Site,sqkm) %>% filter(Site %in% plot_totals$Site)
estimated <- fitted_draws(stan_glm, newdata,draws=2000) %>% mutate(total=(sqkm * .value)*scaling)  %>% group_by(Site,sqkm,.draw) %>% summarize(total=sum(total)) %>% summarize(mean=mean(total),lower=quantile(total,0.05),upper=quantile(total,0.95))
ggplot(estimated,aes(x=sqkm,y=mean)) +facet_wrap(~Site,scales="free") + geom_line() + geom_ribbon(aes(ymin=lower,ymax=upper)) + scale_y_continuous(label=comma) + labs(x="Extent (km^2)",y="Tree Count")
#Combined
results$Data<-c("Remote Sensing")
estimated$Data<-c("Field")
combined<-bind_rows(list(results,estimated))
ggplot(combined,aes(x=sqkm,y=mean,fill=Data)) +facet_wrap(~Site,scales="free") + geom_line(col="black") + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.5) + scale_y_continuous(label=comma) + labs(x="Extent (km^2)",y="Tree Count")  + theme_bw()
ggsave("Scaling_all.png",height=10,width=12)
combined %>% filter(Site %in% c("DSNY","TEAK","OSBS","BART","BLAN","SJER","MLBS","HARV","LENO")) %>% ggplot(. ,aes(x=sqkm,y=mean,fill=Data)) +facet_wrap(~Site,scales="free") + geom_line(col="black") + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.5) + scale_y_continuous(label=comma) + labs(x="Extent (km^2)",y="Tree Count")  + theme_bw()
ggsave("Scaling_subset.png",height=7,width=10)
# Chunk 8
combined %>% group_by(Data,Site) %>% filter(sqkm == max(sqkm)) %>% ungroup() %>% pivot_wider(names_from=Data,values_from=c(mean,lower,upper)) %>% ggplot(., aes(x=mean_Field,y=`mean_Remote Sensing`)) + geom_point()  + labs(x="Field",y="Remote Sensing") + ggtitle("Tree Count") + geom_abline(linetype="dashed") + coord_fixed()    + geom_text(aes(label=Site),size=2,hjust=1.1,vjust=1.2) + theme_bw()  + scale_x_continuous(limits=c(0e7,1.74e7),labels=comma) + scale_y_continuous(limits=c(0e7,1.2e7),labels=comma) + geom_errorbarh(aes(xmin=lower_Field,xmax=upper_Field))
ggsave("FullSiteScale.png",height=6,width=9)
# Chunk 9
#Load data from HPC
f<-list.files(pattern="sampling")
f<-f[str_detect(f,"nlcd")]
fn<-lapply(f,read.csv)
#rename as character
fn<-lapply(fn, function(x){
x$nlcd<-as.character(x$nlcd)
return(x)
})
sampling<-bind_rows(fn)
#remove nlcd classes
to_remove<- sampling %>% filter(nlcd %in% c(11,12,21,22,23,31,32,33,81,82,83,84,85))
ggplot(to_remove,aes(x=nlcd, y=tree_density)) + geom_boxplot()
ggplot(sampling,aes(x=nlcd, y=tree_density)) + geom_boxplot()
ggplot()
sampling<- sampling %>% filter(!nlcd %in% c(11,12,21,22,23,31,32,33,81,82,83,84,85))
#Plot sampling curves
p <- ggplot() + geom_density(data=sampling,aes(x=tree_density,fill=as.factor(year)),alpha=0.4) + facet_wrap(~site,scales="free") + labs(fill="year")
#Get site curve
field_density<-field %>% filter(siteID %in% results$Site) %>% group_by(site=siteID,plotID,eventID) %>% summarize(n=n()) %>% summarize(tree_density=round(mean(n)))
rects<-field_density %>% group_by(site) %>% summarize(mean=mean(tree_density),lower=quantile(tree_density,0.05), upper=quantile(tree_density,0.95))
p +geom_rect(data=rects,aes(xmin=lower,xmax=upper,ymin=0,ymax=Inf),fill="black",alpha=0.2) + geom_vline(data=rects,aes(xintercept=mean),linetype="dashed") + theme_bw() + labs(x="Trees per plot",fill="Year")
ggsave("sampling3.png",height=4,width=7)
rect_subset <- rects %>% filter(site %in% c("DSNY","TEAK","OSBS","BART","DELA","SJER","JERC","HARV","LENO"))
sampling %>% filter(site %in% c("DSNY","TEAK","OSBS","BART","DELA","SJER","JERC","HARV","LENO")) %>% group_by(site) %>% filter(year==max(year)) %>% ggplot(.) +
geom_density(aes(x=tree_density),fill="black",alpha=0.4) + facet_wrap(~site,scales="free") +geom_rect(data=rect_subset,aes(xmin=lower,xmax=upper,ymin=0,ymax=Inf),fill="black",alpha=0.2) + geom_vline(aes(xintercept=mean(tree_density))) + geom_vline(data=rect_subset,aes(xintercept=mean),linetype="dashed") + theme_bw() + labs(x="Trees per plot")
ggsave("Sampling_subset.png",height=4,width=7)
#as a pair of distributions
field_density$data<-c("NEON Field Plots")
sampling$data<-c("Simulated RS Plots")
combined<-bind_rows(field_density,sampling) %>% filter(site %in% c("DSNY","TEAK","OSBS","BART","DELA","SJER","JERC","SOAP","LENO")) %>% filter(!tree_density==0) %>%
ggplot(.,aes(x=tree_density,fill=data)) + geom_density(alpha=0.3) + facet_wrap(~site,scales="free") + labs(x="Trees per plot")
combined
ggsave("Sampling_distributions.png",height=4,width=7)
combined<-bind_rows(field_density,sampling) %>% filter(site %in% c("DSNY","TEAK","OSBS","BART","DELA","SJER","JERC","SOAP","LENO")) %>% filter(!tree_density==0)
#Level and organize by Domain
levels(combined$site)
#Level and organize by Domain
factor(combined$site)
combined<-bind_rows(field_density,sampling) %>% filter(site %in% c("SOAP","TEAK","SJER","OSBS","JERC","DSNY","LENO","DELA","TALL")) %>% filter(!tree_density==0)
#Level and organize by Domain
factor(combined$site,levels = c("SOAP","TEAK","SJER","OSBS","JERC","DSNY","LENO","DELA","TALL"))
#Level and organize by Domain
combined$site<-factor(combined$site,levels = c("SOAP","TEAK","SJER","OSBS","JERC","DSNY","LENO","DELA","TALL"))
ggplot(.,aes(x=tree_density,fill=data)) + geom_density(alpha=0.3) + facet_wrap(~site,scales="free") + labs(x="Trees per plot")
ggplot(combined,aes(x=tree_density,fill=data)) + geom_density(alpha=0.3) + facet_wrap(~site,scales="free") + labs(x="Trees per plot")
ggsave("Sampling_distributions.png",height=4,width=7)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(lme4)
library(dplyr)
library(NeonTreeEvaluation)
library(stringr)
library(sf)
library(raster)
# Chunk 2
#Read submission and turn into geospatial objects
submission<-read.csv("plot_predictions.csv")
#UNDE should be dropped from the height dataset, LIDAR isn't trustworthy.
submission<-submission %>% filter(!str_detect(plot_name,"UNDE"))
RGB_DIR<-"/Users/Ben/Documents/NeonTreeEvaluation/evaluation/RGB/"
rgb_images<-list.files(RGB_DIR,".tif",full.names = T)
rgb_images<-rgb_images[!str_detect(rgb_images,".xml")]
CHM_DIR<-"/Users/Ben/Documents/NeonTreeEvaluation/evaluation/CHM/"
CHM_images<-list.files(CHM_DIR,".tif",full.names = T)
CHM_images<-CHM_images[!str_detect(CHM_images,".xml")]
# Chunk 3
field<-read.csv("/Users/ben/Documents/NEON_crown_maps/Figures/vst_field_data.csv")
field$area<-field$maxCrownDiameter*field$ninetyCrownDiameter
field<-field %>%  filter(!is.na(itcEasting),!str_detect(eventID,"2014"),growthForm %in% c("single bole tree","multi-bole tree","small tree","sapling"),stemDiameter>15) %>% droplevels() %>% filter(height>3|is.na(height))
#field<-field %>% group_by(individualID) %>% arrange(desc(eventID)) %>% slice(1)
#Limit difference in heights
to_remove<-field %>% group_by(individualID) %>% summarize(mean=mean(height),sum_difference = abs(sum(diff(height)))) %>% filter(sum_difference > 8)
field<-field %>% filter(!individualID %in% to_remove$individualID)
# Chunk 4
matched_pairs<-function(spatial_boxes,field_points){
#Spatial join
possible_matches<-st_join(spatial_boxes,field_points,left=FALSE)
#If there are heights, take the tallest height
tallest_points<-possible_matches %>% group_by(crown_id) %>% mutate(height_diff=height.x - height.y) %>%arrange(height_diff) %>% slice(1)  %>% as.data.frame()%>% dplyr::select(crown_id, individualID)
matched_height<-possible_matches %>% inner_join(tallest_points)
return(matched_height)
}
# Chunk 5
site_plots<-field %>% group_by(plotID,individualID)  %>% summarize(samples=length(unique(eventID))) %>% filter(samples>1) %>% ungroup() %>% mutate(plotID=as.character(plotID))
results<-list()
for(x in unique(site_plots$plotID)){
print(x)
#x<-"OSBS_022"
#matching RGB tile
rgb_path<-rgb_images[str_detect(rgb_images,x)]
if(length(rgb_path)==0){next}
r<-raster::stack(rgb_path)
#Field data, min height threshold is 3.
field_points<-field %>% filter(plotID==x) %>% st_as_sf(.,coords=c("itcEasting","itcNorthing")) %>% filter(height>3)
st_crs(field_points)<-crs(r)
predictions<-submission %>% filter(plot_name==x)
if(nrow(predictions)==0){next}
spatial_boxes<- predictions %>% NeonTreeEvaluation::boxes_to_spatial_polygons(.,r) %>% st_as_sf() %>% mutate(height=predictions$height, score=predictions$score)
#Filter the field data for erroneous temporal connections, the CHM must have positive heights, see OSBS_022, can use as an example of all sorts of challenges.
CHM_path<-CHM_images[str_detect(CHM_images,x)]
chm<-raster(CHM_path)
#Thresholds
field_points$CHM_height<-extract(chm,field_points)
#Could it be seen?
field_points<-field_points %>% filter(abs(CHM_height-height)<4)
#Min height based on the predictions
#field_points<-field_points[field_points$height > quantile(spatial_boxes$height,0.01),]
plotRGB(r)
plot(st_geometry(spatial_boxes),add=T)
plot(st_geometry(field_points),add=T,col="red",pch=20)
#Missing
missing<-field_points[!lengths(st_intersects(field_points, spatial_boxes)), ]
plot(st_geometry(missing),add=T,col="blue",pch=20)
#Stem recall rate
unique_locations<-field_points %>% distinct(individualID,.keep_all = T)
tree_in_prediction <-unique_locations  %>% sf::st_intersects(x=.,y=spatial_boxes)
#Which match, do not allow multiples to double count.
matches<-lengths(tree_in_prediction)
matches[matches>1]<-1
stem_recall<-sum(matches)/nrow(unique_locations)
#unique matches
joined_df<-st_join(spatial_boxes,unique_locations)
single_matches<-joined_df %>% group_by(crown_id) %>% filter(height.y == max(height.y))
single_recall<-nrow(single_matches)/nrow(unique_locations)
#Create point matches between data and predictions
matched_df<-matched_pairs(spatial_boxes, field_points) %>% mutate(plot_name=x)
if(nrow(matched_df)>0){
results[[x]]<-data.frame(matched_df,stem_recall,single_recall)
}
}
results<-bind_rows(results)
# Chunk 6
#Show difference
# CLBJ has 3 data points.drop
height_summary<-results  %>% filter(!siteID %in% "CLBJ") %>% mutate(Site=str_match(plot_name,"(\\w+)_")[,2]) %>% group_by(Site,plot_name,individualID,crown_id) %>%  summarize(predicted_height=unique(height.x)[1],mean_field=mean(height.y),min_field=min(height.y),max_field=max(height.y)) %>% mutate(field_range=max_field - min_field)
ggplot(height_summary,aes(x=predicted_height,y=mean_field,ymin=min_field,ymax=max_field)) + geom_pointrange(size=0.1,alpha=0.5) + geom_abline(linetype="dashed") + coord_flip() + labs(y="Field Height (m)",x="Predicted Height (m)")  + stat_smooth(method="lm")  + facet_wrap(~Site,scales="free")
ggsave("Height_Comparison.png",height=7,width=10)
ggplot(height_summary,aes(x=field_range)) + geom_density(fill="black") + facet_wrap(~Site,scales="free") + labs(x="Height difference (m) among years for the same ID")
ggplot(height_summary,aes(x=mean_field,y=field_range)) + geom_point() + labs(x="Mean Field Height",y="Range of Heights")
# Chunk 7
mod<-lmer(data=height_summary,mean_field~predicted_height|Site)
sqrt(mean(residuals(mod)^2))
# Chunk 8
height_summary %>% mutate(error=abs(mean_field - predicted_height)) %>% group_by(Site) %>% filter(error==max(error)) %>% arrange(desc(error)) %>% as.data.frame()
#   ylim(min(c(min(height_summary$min_field,height_summary$predicted_height))),max(c(height_summary$predicted_height,height_summary$max_field))) + xlim(min(c(min(height_summary$min_field,height_summary$predicted_height))),max(c(height_summary$predicted_height,height_summary$max_field)))
# Chunk 9
#order by mean
order_site<-results %>% group_by(siteID) %>% summarize(mean=mean(stem_recall)) %>% arrange(desc(mean)) %>% .$siteID
recall_data<-results %>% group_by(plot_name,crown_id) %>% arrange(desc(eventID)) %>% slice(1) %>% group_by(siteID,plot_name)  %>% distinct(stem_recall, single_recall) %>% ungroup() %>% mutate(siteID=factor(siteID,order_site))
recall_data_melt<-reshape2::melt(recall_data,id.vars=c("siteID","plot_name"))
levels(recall_data_melt$variable)<-c("All Matches","Unique Matches")
recall_data_melt%>% ggplot(.,aes(x=siteID,y=value,fill=variable)) + geom_boxplot(alpha=0.6) + theme_bw() + scale_y_continuous("Field Stem Recall (%)", label=scales::percent,limits = c(0,1)) + coord_flip() + labs(x="Site")
ggsave("SiteStemRecall.svg",height=5,width=6)
ggsave("SiteStemRecall.png",height=5,width=6)
recall_data%>% ggplot(.,aes(x=siteID,y=single_recall)) + geom_boxplot(alpha=0.6) + theme_bw() + scale_y_continuous("Field Stem Recall (%)", label=scales::percent,limits = c(0,1)) + coord_flip() + labs(x="Site")
ggsave("SiteStemRecall_unique.png",height=5,width=6)
ggsave("SiteStemRecall_unique.svg",height=5,width=6)
results %>% group_by(plot_name,crown_id) %>% arrange(desc(eventID)) %>% slice(1) %>% group_by(siteID)%>% summarize(stem_recall=mean(stem_recall))
results %>% group_by(plot_name,crown_id) %>% arrange(desc(eventID)) %>% slice(1) %>% ungroup() %>% summarize(stem_recall=mean(stem_recall),single_recall=mean(single_recall))
ggplot(height_summary,aes(x=mean_field,y=field_range)) + geom_point() + labs(x="Mean Field Height",y="Range of Heights")
ggplot(height_summary,aes(x=field_range)) + geom_density(fill="black") + facet_wrap(~Site,scales="free") + labs(x="Height difference (m) among years for the same ID")
ggplot(height_summary,aes(x=predicted_height,y=mean_field,ymin=min_field,ymax=max_field)) + geom_pointrange(size=0.1,alpha=0.5) + geom_abline(linetype="dashed") + coord_flip() + labs(y="Field Height (m)",x="Predicted Height (m)")  + stat_smooth(method="lm")  + facet_wrap(~Site,scales="free")
sqrt(mean(residuals(mod)^2))
mode
mod
sqrt(mean(residuals(mod)^2))
mod
sqrt(mean(residuals(mod)^2))
mod
residuals(mod)
height_summary
height_summary %>% mutate(error=residuals(mod)) %>% group_by(Site) %>% summarize(sqrt(mean(residuals(error)^2)))
height_summary %>% mutate(error=residuals(mod)) %>% group_by(Site) %>% summarize(sqrt(mean(error^2)))
error
residuals(mod)
residuals(mod)
len(residuals(mod))
length(residuals(mod))
height_summary %>% mutate(error=residuals(mod)) %>% group_by(Site) %>% summarize(sqrt(mean(error^2)))
height_summary %>% mutate(error=residuals(mod)) %>% group_by(Site) %>% summarize(mean(error^2))
height_summary %>% mutate(mod_error=residuals(mod)) %>% group_by(Site) %>% summarize(sqrt(mean(mod_error^2)))
height_summary %>% mutate(mod_error=residuals(mod)) %>% group_by(Site) %>% summarize(rmse=mod_error^2)
height_summary %>% mutate(mod_error=residuals(mod)) %>% group_by(Site) %>% summarize(rmse=mod_error)
height_summary %>% mutate(mod_error=residuals(mod)) %>% head()
height_summary %>% mutate(mod_error=residuals(mod)) %>% head()
residuals(mod)
as.numeric(residuals(mod))
height_summary %>% mutate(mod_error=as.numeric(residuals(mod))) %>% group_by(Site) %>% summarize(rmse=sqrt(mean(mod_error^2)))
height_summary %>% mutate(mod_error=as.numeric(residuals(mod)))
height_summary %>% ungroup() %>% mutate(mod_error=as.numeric(residuals(mod)))%>% group_by(Site) %>% summarize(rmse=sqrt(mean(mod_error^2)))
height_summary %>% ungroup() %>% mutate(mod_error=as.numeric(residuals(mod)))%>% group_by(Site) %>% summarize(RMSE=sqrt(mean(mod_error^2)))
rmse_site<-height_summary %>% ungroup() %>% mutate(mod_error=as.numeric(residuals(mod)))%>% group_by(Site) %>% summarize(RMSE=sqrt(mean(mod_error^2)))
ggplot(height_summary,aes(x=mean_field,y=field_range)) + geom_point() + labs(x="Mean Field Height",y="Range of Heights")
ggplot(height_summary,aes(x=predicted_height,y=mean_field,ymin=min_field,ymax=max_field)) + geom_pointrange(size=0.1,alpha=0.5) + geom_abline(linetype="dashed") + coord_flip() + labs(y="Field Height (m)",x="Predicted Height (m)")  + stat_smooth(method="lm")  + facet_wrap(~Site,scales="free")
ggsave("Height_Comparison.svg",height=7,width=10)
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
# Chunk 3
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf,c("Site"="siteID"))
merged_df$label<-sapply(merged_df$Dominant.NLCD.Classes,function(x) {str_split(x,",")[[1]][1]})
ggplot(merged_df,aes(x=height_mean,y=area_mean,size=n,col=Domain.Name)) + geom_point(alpha=0.5) + labs(x="Crown Height (m)",y="Crown Area (m^2)",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8)
ggsave("Attributes.png",height=3.5,width=6)
ggsave("Attributes.svg", height=3.5,width=6)
# Chunk 4
counts %>% spread(Year,n) %>% ggplot(.,aes(x=`2019`,y=`2018`)) + geom_point(aes(col=Site),alpha=0.5) + geom_abline(linetype="dashed") + coord_equal() + stat_smooth(method="lm")  + theme_bw() + theme(legend.position = "none") + scale_x_continuous(labels=comma, n.breaks=7  ) + scale_y_continuous(labels=comma,n.breaks=7 ) + ggtitle("Tree Count Across Years")
ggsave("CrossYears.png",height=4,width=7)
# Chunk 5
field<-read.csv("/Users/Ben/Documents/NeonTreeEvaluation/field_data.csv")
field$area<-field$maxCrownDiameter*field$ninetyCrownDiameter
#mean height from the field
field_means<-field_data %>% group_by(Site) %>% summarize(height=mean(height),area=mean(area))
ggplot(field_data) + geom_density(aes(x=height),fill="blue",alpha=0.5) + facet_wrap(~Site,scales="free") + geom_vline(data=df,aes(xintercept=height_mean),col="red") + geom_vline(data=field_means,aes(xintercept=height),col="blue") + theme_bw()
ggplot(field_data) + geom_density(aes(x=area),fill="blue",alpha=0.7) + facet_wrap(~Site,scales="free") + geom_vline(data=df,aes(xintercept=area_mean),col="red")+ geom_vline(data=field_means,aes(xintercept=area),col="blue") + theme_bw()
# Chunk 6
field_area<-field %>% filter(!is.na(easting)) %>% filter(stemDiameter > 7.5) %>% filter(is.na(height)|height>3) %>% group_by(site=siteID,plotID,eventID) %>% summarize(area=mean(area,na.rm=T)) %>% group_by(site) %>% summarize(field_area=mean(area,na.rm=T)) %>% arrange(desc(field_area))
df %>% dplyr::select(site=Site,Remote_area=area_mean) %>% inner_join(field_area) %>%
ggplot(.,aes(x=field_area,y=Remote_area)) + geom_point()  + geom_abline(linetype="dashed") + xlim(0,125)+ ylim(0,125) + coord_equal() + geom_text(aes(label=site),size=2,vjust=1)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
envdf
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf,c("Site"="siteID"))
head(df)
head(envdf)
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/area_mean,size=n,col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Denisity (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),size=n,col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Denisity (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Denisity (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=3,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size3) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes.png",height=3.5,width=6)
ggsave("Attributes.svg", height=3.5,width=6)
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(pal="Set1")
ggsave("Attributes.png",height=3.5,width=6)
ggsave("Attributes.svg", height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(pal="Set1")
?scale_color_brewer
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Set1")
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggsave("Attributes.png",height=3.5,width=6)
3465 + 3040
3739 + 2233
sitedf<-read.csv("field-sites.csv")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,"Site == siteID")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,"Site = siteID")
head(sitedf)
colnames(sitedf)
head(df)
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by="Site = siteID")
?inner_join
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by="Site" = "siteID")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" = "siteID")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" ="siteID"))
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
colnames(merged_df)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
merged_df$Domain.Name
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width")
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes_domain.png",height=3.5,width=6)
15.87 * 31
15.87 * 20
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
sitedf<-read.csv("field-sites.csv")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" ="siteID")) %>% filter(!Site %in% c("PUUM","GUIL","GRSM") )
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggsave("Attributes.png",height=3.5,width=6)
ggsave("Attributes.svg", height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes_domain.png",height=3.5,width=6)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
sitedf<-read.csv("field-sites.csv")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" ="siteID")) %>% filter(!Site %in% c("PUUM","GUIL","GRSM") )
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggsave("Attributes.png",height=4,width=7)
ggsave("Attributes.svg", height=4,width=7)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes_domain.png",height=3.5,width=6)
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% filter(Site %in% c("GUIL","GRSM","PUUM")) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% filter(!Site %in% c("GUIL","GRSM","PUUM")) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
library(lidR)
library(raster)
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task1/RemoteSensing/LAS/OSBS_114.las")
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_114.las")
plot(r)
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_115.las")
plot(r)
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_116.las")
plot(r)
library(NeonTreeEvaluation)
plot(canopy_model(r))
plot(canopy_model(r)>3)
plot(canopy_model(r))
plot(canopy_model(r))/
?canopy_model
plot(canopy_model(r))
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_117.las")
plot(r)
plot(canopy_model(r))
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_118.las")
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task1/RemoteSensing/LAS/OSBS_118.las")
plot(r)
plot(r)
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task1/RemoteSensing/LAS/OSBS_123.las")
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_123.las")
plot(r)
plot(canopy_model(r))
25 * 200 * 3 * 15000
a<-raster("/Users/Ben/Downloads/prediction.tif")
a
table(a)
sum(a[]==1)
sum(a[]==20)
sum(a[]==19)
sum(a[]==1)
sum(a[]==0)
unique(a[])
sort(unique(a[]))
plot(a==1)
plot(a==2)
plot(a==3)
plot(a==7)
plot(a==19)
a<-raster("/Users/Ben/Downloads/prediction.tif")
sort(unique(a[]))
a<-raster("/Users/Ben/Downloads/prediction_resampled.tif")
sort(unique(a[]))
plot(a==19)
dev.off()
plot(a==19)
