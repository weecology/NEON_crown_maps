}
plots
#Check annotatiosn height
library(NeonTreeEvaluation)
library(raster)
plots<-list_annotations()
for(plotname in plots[149:length(plots)]){
print(plotname)
#get data
df<-xml_parse(get_data(plotname,"annotations"))
rgb_path<-get_data(plotname,type="rgb")
if(!file.exists(rgb_path)){
next
}
rgb<-stack(rgb_path)
chm<-raster(get_data(plotname,type="chm"))
#project
sdf<-boxes_to_spatial_polygons(df,rgb)
heights<-raster::extract(x=chm,y=sdf)
heights<-sapply(heights,function(x){
height<-quantile(x,0.99,na.rm=T)
})
if(sum(!is.na(heights))==0){next}
if(sum(heights<3)>0){
plotRGB(rgb,axes=T,main=plotname)
plot(sdf,col=heights<3,add=T)
print(paste(plotname,"has polygons of height less than 3"))
}
}
results_chm$plot_level
results_chm$by_site
mresults %in% filter(siteID=="BART")
mresults %in% filter(Site=="BART")
mresults %>% filter(Site=="BART")
#which are different in BART, strange result?
chm %>% filter(stringr::str_detect(plot_name,"BART"))
filter
chm
no_chm<-read.csv("all_images_submission_NOCHM.csv")
chm<-read.csv("all_images_submission_CHM.csv")
#which are different in BART, strange result?
chm %>% filter(stringr::str_detect(plot_name,"BART"))
#which are different in BART, strange result?
BART_chm<-chm %>% filter(plot_name %in% c("BART_036","BART_050"))
BART_chm
BART_no_chm<-no_chm %>% filter(plot_name %in% c("BART_036","BART_050"))
BART_no_chm
dim(BART_chm)
dim(BART_no_chm)
#hard to guess at
BART_chm %>% filter(!xmin %in% BART_no_chm$xmin)
#hard to guess at
BART_chm %>% filter(xmin %in% BART_no_chm$xmin)
#hard to guess at
BART_no_chm[1,] == BART_chm[1,]
head(BART_no_chm)
head(BART_chm)
boxes_to_spatial_polygons(BART_chm)
#which are different in BART, strange result?
BART_chm<-chm %>% filter(plot_name %in% c("BART_036"))
BART_no_chm<-no_chm %>% filter(plot_name %in% c("BART_036"))
dim(BART_chm)
dim(BART_no_chm)
#which are different in BART, strange result?
BART_chm<-chm %>% filter(plot_name %in% c("BART_050"))
BART_no_chm<-no_chm %>% filter(plot_name %in% c("BART_050"))
dim(BART_chm)
dim(BART_no_chm)
#hard to guess at
BART_no_chm[1,] == BART_chm[1,]
#hard to guess at
r<-stack(get_data("BART_050","rgb"))
boxes_to_spatial_polygons(BART_chm, r)
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
plotRGB(r)
plot(st_geometry(BART_chm),col="red")
BART_chm
BART_chm<-boxes_to_spatial_polygons(BART_chm, r)
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
BART_no_chm
boxes_to_spatial_polygons
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
#hard to guess at
r<-stack(get_data("BART_050","rgb"))
BART_chm<-boxes_to_spatial_polygons(BART_chm, r)
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
no_chm<-read.csv("all_images_submission_NOCHM.csv")
chm<-read.csv("all_images_submission_CHM.csv")
#which are different in BART, strange result?
BART_chm<-chm %>% filter(plot_name %in% c("BART_050"))
BART_no_chm<-no_chm %>% filter(plot_name %in% c("BART_050"))
dim(BART_chm)
dim(BART_no_chm)
#hard to guess at
r<-stack(get_data("BART_050","rgb"))
BART_chm<-boxes_to_spatial_polygons(BART_chm, r)
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
plotRGB(r)
plot(st_geometry(BART_chm),col="red",add=T)
plot(st_geometry(BART_chm),border="red",add=T)
plotRGB(r)
plot(st_geometry(BART_chm),border="red",add=T)
plot(st_geometry(BART_no_chm),border="blue",add=T)
plot(st_geometry(BART_no_chm),border="blue",add=T)
plot(st_geometry(BART_chm),border="red",add=T)
plot(BART_chm$crown_id,border="red",add=T)
plot(BART_chm,border="red",add=T)
plotRGB(r)
plot(st_geometry(BART_no_chm),border="blue",add=T)
plot(BART_chm,border="red",add=T)
r<-stack(get_data("BART_050","chm"))
chm<-stack(get_data("BART_050","chm"))
plot)chm
plot(chm)
plotname
plotname="BART_050"
print(plotname)
#get data
df<-xml_parse(get_data(plotname,"annotations"))
rgb_path<-get_data(plotname,type="rgb")
if(!file.exists(rgb_path)){
next
}
rgb<-stack(rgb_path)
chm<-raster(get_data(plotname,type="chm"))
#project
sdf<-boxes_to_spatial_polygons(df,rgb)
heights<-raster::extract(x=chm,y=sdf)
heights<-sapply(heights,function(x){
height<-quantile(x,0.99,na.rm=T)
})
heights
plotRGB(rgb,axes=T,main=plotname)
plot(sdf,col=heights<3,add=T)
sdf
height<-quantile(x,0.99,na.rm=T)
heights
plot(sdf,col=heights)
plot(sdf[1,])
plot(sdf)
plot(sdf[1:10,])
plot(sdf[1:20,])
plot(chm)
plot(sdf[1:20,])
plot(sdf)
plot(sdf[1:20,])
plot(sdf[1:10,])
plot(sdf[10:20,])
plot(sdf[10:15,])
plot(sdf[10:12,])
plot(sdf[11:12,])
plot(sdf[12,])
plot(sdf[11,])
sdf[11,]
plot(sdf,color=sdf$crown_id==11)
plot(sdf,col=sdf$crown_id==11)
heights<-raster::extract(x=chm,y=sdf[11,])
heights
quantile(heights)
quantile(heights)
quantile(heights)
quantile(heights[[1]])
quantile(heights[[1]],99)
quantile(heights[[1]],.99)
quantile(heights[[1]],.99)
a<-heights[[1]]
a
a[a>0]
quantile(a[a>0],11)
quantile(a[a>0],0.99)
x[x>0.5]
rgb_path
#Check annotatiosn height
library(NeonTreeEvaluation)
library(raster)
plots<-list_annotations()
for(plotname in plots[1:length(plots)]){
print(plotname)
#get data
df<-xml_parse(get_data(plotname,"annotations"))
rgb_path<-get_data(plotname,type="rgb")
if(!file.exists(rgb_path)){
next
}
rgb<-stack(rgb_path)
chm<-raster(get_data(plotname,type="chm"))
#project
sdf<-boxes_to_spatial_polygons(df,rgb)
heights<-raster::extract(x=chm,y=sdf)
heights<-sapply(heights,function(x){
x<-x[x>0.5]
height<-quantile(x,0.99,na.rm=T)
})
if(sum(!is.na(heights))==0){next}
if(sum(heights<3)>0){
plotRGB(rgb,axes=T,main=plotname)
plot(sdf,col=heights<3,add=T)
print(paste(plotname,"has polygons of height less than 3"))
}
}
if(sum(!is.na(heights))==0){next}
heights
heights
is.na(height)
is.na(heights)
heights[is.na(heights)]<-0
if(sum(heights<3)>0){
plotRGB(rgb,axes=T,main=plotname)
plot(sdf,col=heights<3,add=T)
print(paste(plotname,"has polygons of height less than 3"))
}
print(plotname)
plots
#Check annotatiosn height
library(NeonTreeEvaluation)
library(raster)
plots<-list_annotations()
for(plotname in plots[124:length(plots)]){
print(plotname)
#get data
df<-xml_parse(get_data(plotname,"annotations"))
rgb_path<-get_data(plotname,type="rgb")
if(!file.exists(rgb_path)){
next
}
rgb<-stack(rgb_path)
chm<-raster(get_data(plotname,type="chm"))
#project
sdf<-boxes_to_spatial_polygons(df,rgb)
heights<-raster::extract(x=chm,y=sdf)
heights<-sapply(heights,function(x){
x<-x[x>0.5]
height<-quantile(x,0.99,na.rm=T)
})
if(sum(!is.na(heights))==0){next}
heights[is.na(heights)]<-0
if(sum(heights<3)>0){
plotRGB(rgb,axes=T,main=plotname)
plot(sdf,col=heights<3,add=T)
print(paste(plotname,"has polygons of height less than 3"))
}
}
print(plotname)
plots
#Check annotatiosn height
library(NeonTreeEvaluation)
library(raster)
plots<-list_annotations()
for(plotname in plots[148:length(plots)]){
print(plotname)
#get data
df<-xml_parse(get_data(plotname,"annotations"))
rgb_path<-get_data(plotname,type="rgb")
if(!file.exists(rgb_path)){
next
}
rgb<-stack(rgb_path)
chm<-raster(get_data(plotname,type="chm"))
#project
sdf<-boxes_to_spatial_polygons(df,rgb)
heights<-raster::extract(x=chm,y=sdf)
heights<-sapply(heights,function(x){
x<-x[x>0.5]
height<-quantile(x,0.99,na.rm=T)
})
if(sum(!is.na(heights))==0){next}
heights[is.na(heights)]<-0
if(sum(heights<3)>0){
plotRGB(rgb,axes=T,main=plotname)
plot(sdf,col=heights<3,add=T)
print(paste(plotname,"has polygons of height less than 3"))
}
}
library(NeonTreeEvaluation)
library(ggplot2)
library(dplyr)
no_chm<-read.csv("all_images_submission_NOCHM.csv")
chm<-read.csv("all_images_submission_CHM.csv")
#which are different in BART, strange result?
BART_chm<-chm %>% filter(plot_name %in% c("BART_050"))
BART_no_chm<-no_chm %>% filter(plot_name %in% c("BART_050"))
dim(BART_chm)
dim(BART_no_chm)
#hard to guess at
r<-stack(get_data("BART_050","rgb"))
chm<-stack(get_data("BART_050","chm"))
BART_chm<-boxes_to_spatial_polygons(BART_chm, r)
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
plotRGB(r)
plot(chm)
library(NeonTreeEvaluation)
library(ggplot2)
library(raster)
library(dplyr)
no_chm<-read.csv("all_images_submission_NOCHM.csv")
chm<-read.csv("all_images_submission_CHM.csv")
#which are different in BART, strange result?
BART_chm<-chm %>% filter(plot_name %in% c("BART_050"))
BART_no_chm<-no_chm %>% filter(plot_name %in% c("BART_050"))
dim(BART_chm)
dim(BART_no_chm)
#hard to guess at
r<-stack(get_data("BART_050","rgb"))
chm<-stack(get_data("BART_050","chm"))
BART_chm<-boxes_to_spatial_polygons(BART_chm, r)
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
plotRGB(r)
plot(chm)
plot(st_geometry(BART_no_chm),border="blue",add=T)
plot(BART_chm,border="red",add=T)
#keep plots identical?
no_chm<-no_chm %>% filter(plot_name %in% chm$plot_name)
results_no_chm<-evaluate_image_crowns(no_chm,project=T, summarize = T)
get_data("BART_050","rgb")
library(NeonTreeEvaluation)
library(ggplot2)
library(raster)
library(dplyr)
no_chm<-read.csv("all_images_submission_NOCHM.csv")
chm<-read.csv("all_images_submission_CHM.csv")
#which are different in BART, strange result?
BART_chm<-chm %>% filter(plot_name %in% c("BART_050"))
BART_no_chm<-no_chm %>% filter(plot_name %in% c("BART_050"))
dim(BART_chm)
dim(BART_no_chm)
#hard to guess at
r<-stack(get_data("BART_050","rgb"))
chm<-stack(get_data("BART_050","chm"))
BART_chm<-boxes_to_spatial_polygons(BART_chm, r)
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
plotRGB(r)
plot(chm)
plot(st_geometry(BART_no_chm),border="blue",add=T)
plot(BART_chm,border="red",add=T)
#keep plots identical?
no_chm<-no_chm %>% filter(plot_name %in% chm$plot_name)
results_no_chm<-evaluate_image_crowns(no_chm,project=T, summarize = T)
results_no_chm$by_site$Method <- "DeepForest (Weinstein et al. 2020)"
results_chm<-evaluate_image_crowns(chm, project = T, summarize = T)
results_chm$by_site$Method <- "DeepForest + LiDAR 3m Threshold"
results<-bind_rows(list(results_chm$by_site,results_no_chm$by_site))
mresults <- reshape2::melt(results, id.vars=c("Site","Method"))
ggplot(mresults,aes(x=Site,y=value,col=Method)) + geom_point(size=3,alpha=0.6) + facet_wrap(~variable,scales="free") + coord_flip()
chm<-read.csv("all_images_submission_CHM.csv")
results_chm<-evaluate_image_crowns(chm, project = T, summarize = T)
results_chm$by_site$Method <- "DeepForest + LiDAR 3m Threshold"
results<-bind_rows(list(results_chm$by_site,results_no_chm$by_site))
mresults <- reshape2::melt(results, id.vars=c("Site","Method"))
ggplot(mresults,aes(x=Site,y=value,col=Method)) + geom_point(size=3,alpha=0.6) + facet_wrap(~variable,scales="free") + coord_flip()
#ONAQ is not the prediction set
mresults<-mresults %>% filter(!Site %in% "ONAQ")
ggplot(mresults,aes(x=Site,y=value,col=Method)) + geom_point(size=3,alpha=0.6) + facet_wrap(~variable,scales="free") + coord_flip()
chm$plot_name
unique(chm$plot_name)
sum(!no_chm$plot_name %in% chm$plot_name)
chm<-chm %>% filter(plot_name %in% no_chm$plot_name)
library(NeonTreeEvaluation)
library(ggplot2)
library(raster)
library(dplyr)
no_chm<-read.csv("all_images_submission_NOCHM.csv")
chm<-read.csv("all_images_submission_CHM.csv")
#which are different in BART, strange result?
BART_chm<-chm %>% filter(plot_name %in% c("TALL"))
BART_no_chm<-no_chm %>% filter(plot_name %in% c("BART_050"))
dim(BART_chm)
dim(BART_no_chm)
#hard to guess at
r<-stack(get_data("BART_050","rgb"))
#chm<-stack(get_data("BART_050","chm"))
BART_chm<-boxes_to_spatial_polygons(BART_chm, r)
BART_no_chm<-boxes_to_spatial_polygons(BART_no_chm, r)
plotRGB(r)
#plot(chm)
plot(st_geometry(BART_no_chm),border="blue",add=T)
plot(BART_chm,border="red",add=T)
#keep plots identical?
no_chm<-no_chm %>% filter(plot_name %in% chm$plot_name)
chm<-chm %>% filter(plot_name %in% no_chm$plot_name)
results_no_chm<-evaluate_image_crowns(no_chm,project=T, summarize = T)
results_no_chm$by_site$Method <- "DeepForest (Weinstein et al. 2020)"
results_chm<-evaluate_image_crowns(chm, project = T, summarize = T)
results_chm$by_site$Method <- "DeepForest + LiDAR 3m Threshold"
results<-bind_rows(list(results_chm$by_site,results_no_chm$by_site))
mresults <- reshape2::melt(results, id.vars=c("Site","Method"))
#ONAQ is not the prediction set
mresults<-mresults %>% filter(!Site %in% "ONAQ")
ggplot(mresults,aes(x=Site,y=value,col=Method)) + geom_point(size=3,alpha=0.6) + facet_wrap(~variable,scales="free") + coord_flip()
results_chm$overall
results_no_chm$overall
ggsave("DeepForestCompare.png",height=5,width=7)
ggsave("DeepForestCompare.png",height=3,width=7)
ggsave("DeepForestCompare.png",height=4,width=7)
ggsave("DeepForestCompare.png",height=4.5,width=8)
r<-get_data("SOAP_031")
r<-get_data("SOAP_031","lidar")
plot(r)
r
library(lidR
)
plot(r)
plot(readLAS(r))
get_data()
chm
unique(chm$plot_name)
list_annotations()
r<-stack(get_data("SOAP_031","rgb"))
plotRGB(r)
a<-xml_parse(get_data("SOAP_031","rgb"))
a<-xml_parse(get_data("SOAP_031","rgb"))
a<-xml_parse(get_data("SOAP_031","annotations"))
a<-boxes_to_spatial_polygons(a)
a<-boxes_to_spatial_polygons(a,r)
plot(a,add=T)
plot(a,add=T)
plotRGB(r)
plot(a,add=T,border="orange")
plotRGB(r)
plot(a,add=T,color=NA,border="orange")
train<-read_sf("/Users/Ben/Documents/DeepTreeAttention/data/processed/CHM_filtered_train.shp")
train %>% group_by(taxonID) %>% summarise(n=n())
train %>% group_by(taxonID) %>% summarise(n=n()) %>% arrange(desc(n))
train %>% group_by(taxonID) %>% summarise(n=n()) %>% arrange(desc(n)) %>% as.data.frame()
test<-read_sf("/Users/Ben/Documents/DeepTreeAttention/data/processed/test.shp")
#Testing data from Sergio
ids<-read.csv("/Users/ben/Downloads/latest_field_and_test/test_with_uid.csv")
ids %>% filter(individualID %in% test$individualID)
ids %>% filter(individualID %in% test$individual)
missing<-ids %>% filter(!individualID %in% test$individual)
dim(missing)
missing_taxa<-ids %>% filter(!taxonID %in% test$taxonID)
missing_taxa
dim(missing_taxa
)
missing %>% filter(plotID=="KONZ_063")
ids$plantStatus == "Removed"
sum(ids$plantStatus == "Removed")
ids %>% filter(plantStatus == "Removed")
ids %>% filter(plantStatus == "Removed") %>% select(individualID)
ids %>% filter(plantStatus == "Removed") %>% dplyr::select(individualID)
missing<-ids %>% filter(!individualID %in% test$individual, !plantStatus=="Removed")
dim(missing)
missing_taxa<-ids %>% filter(!taxonID %in% test$taxonID)
missing_taxa
missing_taxa<-ids %>% filter(!taxonID %in% test$taxonID, !plantStatus=="Removed")
missing_taxa
ids %>% filter("CODR" %in% "taxonID") %>% dplyr::select(plantStatus)
ids %>% filter("CODR" %in% taxonID) %>% dplyr::select(plantStatus)
ids %>% filter(taxonID=="CODR") %>% dplyr::select(plantStatus)
train<-read_sf("/Users/Ben/Documents/DeepTreeAttention/data/processed/CHM_filtered_train.shp")
train$plantStatus
field %>% filter(individualID %in% train$individual) %>% group_by(plantStatus) %>% summarize(n=n())
missing<-ids %>% filter(!individualID %in% test$individual, !plantStatus=="Removed")
missing
missing<-ids %>% filter(!individualID %in% test$individual, str_detect("Live",plantStatus))
missing<-ids %>% filter(!individualID %in% test$individual, stringr::str_detect("Live",plantStatus))
missing<-ids %>% filter(!individualID %in% test$individual, stringr::str_detect(plantStatus,"Live"))
missing
ids.plantStatus
ids.plantStatus
table(ids$plantStatus)
#Testing data from Sergio
ids<-read.csv("/Users/ben/Downloads/latest_field_and_test/test_with_uid.csv")
table(ids$plantStatus)
test<-read_sf("/Users/Ben/Documents/DeepTreeAttention/data/processed/test.shp")
table(test$plantStatu)
plotRGB(stack("/Users/ben/Documents/NeonTreeEvaluation/evaluation/RGB/JERC_058.tif"))
plot(raster("/Users/ben/Documents/NeonTreeEvaluation/evaluation/CHM/JERC_058.tif"))
plot(raster("/Users/ben/Documents/NeonTreeEvaluation/evaluation/CHM/JERC_058_CHM.tif"))
#Missing tree height
plotRGB(stack("/Users/ben/Documents/NeonTreeEvaluation/evaluation/RGB/JERC_058.tif"))
plot(raster("/Users/ben/Documents/NeonTreeEvaluation/evaluation/CHM/JERC_058_CHM.tif",add=T))
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% filter(!Site %in% c("GUIL","GRSM","PUUM")) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
sitedf<-read.csv("field-sites.csv")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" ="siteID")) %>% filter(!Site %in% c("PUUM","GUIL","GRSM") )
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Forest Cover Type") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggsave("Attributes.png",height=4,width=7)
ggsave("Attributes.svg", height=4,width=7)
ggplot(merged_df,aes(x=log(n),y=log(height_mean/sqrt(area_mean)),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes_domain.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=log(height_mean/sqrt(area_mean)),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Forest Cover Type") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggplot(merged_df,aes(x=n,y=log(height_mean/sqrt(area_mean)),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Forest Cover Type") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
log(2)/log(3)
2/3
log(2/3)
log(10/5)
log(10/5)
10/5
log(10)/log(5)
library(dplyr)
a<-read.csv("/Users/Ben/Downloads/predictions.csv")
head(a)
a$file
unique(a$file)
head(a)
dim(a)
