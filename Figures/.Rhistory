library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
# Chunk 3
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf,c("Site"="siteID"))
merged_df$label<-sapply(merged_df$Dominant.NLCD.Classes,function(x) {str_split(x,",")[[1]][1]})
ggplot(merged_df,aes(x=height_mean,y=area_mean,size=n,col=Domain.Name)) + geom_point(alpha=0.5) + labs(x="Crown Height (m)",y="Crown Area (m^2)",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8)
ggsave("Attributes.png",height=3.5,width=6)
ggsave("Attributes.svg", height=3.5,width=6)
# Chunk 4
counts %>% spread(Year,n) %>% ggplot(.,aes(x=`2019`,y=`2018`)) + geom_point(aes(col=Site),alpha=0.5) + geom_abline(linetype="dashed") + coord_equal() + stat_smooth(method="lm")  + theme_bw() + theme(legend.position = "none") + scale_x_continuous(labels=comma, n.breaks=7  ) + scale_y_continuous(labels=comma,n.breaks=7 ) + ggtitle("Tree Count Across Years")
ggsave("CrossYears.png",height=4,width=7)
# Chunk 5
field<-read.csv("/Users/Ben/Documents/NeonTreeEvaluation/field_data.csv")
field$area<-field$maxCrownDiameter*field$ninetyCrownDiameter
#mean height from the field
field_means<-field_data %>% group_by(Site) %>% summarize(height=mean(height),area=mean(area))
ggplot(field_data) + geom_density(aes(x=height),fill="blue",alpha=0.5) + facet_wrap(~Site,scales="free") + geom_vline(data=df,aes(xintercept=height_mean),col="red") + geom_vline(data=field_means,aes(xintercept=height),col="blue") + theme_bw()
ggplot(field_data) + geom_density(aes(x=area),fill="blue",alpha=0.7) + facet_wrap(~Site,scales="free") + geom_vline(data=df,aes(xintercept=area_mean),col="red")+ geom_vline(data=field_means,aes(xintercept=area),col="blue") + theme_bw()
# Chunk 6
field_area<-field %>% filter(!is.na(easting)) %>% filter(stemDiameter > 7.5) %>% filter(is.na(height)|height>3) %>% group_by(site=siteID,plotID,eventID) %>% summarize(area=mean(area,na.rm=T)) %>% group_by(site) %>% summarize(field_area=mean(area,na.rm=T)) %>% arrange(desc(field_area))
df %>% dplyr::select(site=Site,Remote_area=area_mean) %>% inner_join(field_area) %>%
ggplot(.,aes(x=field_area,y=Remote_area)) + geom_point()  + geom_abline(linetype="dashed") + xlim(0,125)+ ylim(0,125) + coord_equal() + geom_text(aes(label=site),size=2,vjust=1)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
envdf
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf,c("Site"="siteID"))
head(df)
head(envdf)
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/area_mean,size=n,col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Denisity (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),size=n,col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Denisity (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Denisity (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area",size="Trees per km^2") + geom_text(aes(label=Site),size=3,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size3) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height/Crown Area") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_x_continuous(n.breaks=7)+ scale_y_continuous(n.breaks=8) +
ggsave("Attributes.png",height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes.png",height=3.5,width=6)
ggsave("Attributes.svg", height=3.5,width=6)
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
merged_df<-df %>% inner_join(envdf)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(pal="Set1")
ggsave("Attributes.png",height=3.5,width=6)
ggsave("Attributes.svg", height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(pal="Set1")
?scale_color_brewer
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Set1")
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggsave("Attributes.png",height=3.5,width=6)
3465 + 3040
3739 + 2233
sitedf<-read.csv("field-sites.csv")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,"Site == siteID")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,"Site = siteID")
head(sitedf)
colnames(sitedf)
head(df)
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by="Site = siteID")
?inner_join
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by="Site" = "siteID")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" = "siteID")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" ="siteID"))
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
colnames(merged_df)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
merged_df$Domain.Name
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width")
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes_domain.png",height=3.5,width=6)
15.87 * 31
15.87 * 20
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
sitedf<-read.csv("field-sites.csv")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" ="siteID")) %>% filter(!Site %in% c("PUUM","GUIL","GRSM") )
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggsave("Attributes.png",height=3.5,width=6)
ggsave("Attributes.svg", height=3.5,width=6)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes_domain.png",height=3.5,width=6)
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
sitedf<-read.csv("field-sites.csv")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" ="siteID")) %>% filter(!Site %in% c("PUUM","GUIL","GRSM") )
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Vegetation Cover") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggsave("Attributes.png",height=4,width=7)
ggsave("Attributes.svg", height=4,width=7)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes_domain.png",height=3.5,width=6)
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% filter(Site %in% c("GUIL","GRSM","PUUM")) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% filter(!Site %in% c("GUIL","GRSM","PUUM")) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
library(lidR)
library(raster)
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task1/RemoteSensing/LAS/OSBS_114.las")
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_114.las")
plot(r)
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_115.las")
plot(r)
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_116.las")
plot(r)
library(NeonTreeEvaluation)
plot(canopy_model(r))
plot(canopy_model(r)>3)
plot(canopy_model(r))
plot(canopy_model(r))/
?canopy_model
plot(canopy_model(r))
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_117.las")
plot(r)
plot(canopy_model(r))
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_118.las")
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task1/RemoteSensing/LAS/OSBS_118.las")
plot(r)
plot(r)
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task1/RemoteSensing/LAS/OSBS_123.las")
r<-readLAS("/Users/Ben/Dropbox/Weecology/competition/IDTREES_competition_test 2/task2/RemoteSensing/LAS/OSBS_123.las")
plot(r)
plot(canopy_model(r))
25 * 200 * 3 * 15000
a<-raster("/Users/Ben/Downloads/prediction.tif")
a
table(a)
sum(a[]==1)
sum(a[]==20)
sum(a[]==19)
sum(a[]==1)
sum(a[]==0)
unique(a[])
sort(unique(a[]))
plot(a==1)
plot(a==2)
plot(a==3)
plot(a==7)
plot(a==19)
a<-raster("/Users/Ben/Downloads/prediction.tif")
sort(unique(a[]))
a<-raster("/Users/Ben/Downloads/prediction_resampled.tif")
sort(unique(a[]))
plot(a==19)
dev.off()
plot(a==19)
# Chunk 1: setup
library(ggplot2)
library(scales)
library(dplyr)
library(rstanarm)
library(tidybayes)
library(tidyr)
library(stringr)
library(broom)
# Chunk 2
df<-read.csv("tile_averages.csv",row.names = 1)
colnames(df)[colnames(df) %in% "X0"]<-"count"
#mean across year
df<-df %>% group_by(Site,geo_index) %>% summarize(count=mean(count))
ggplot(df) + geom_density(aes(x=count)) + facet_wrap(~Site)
# Chunk 3
sample_data<-function(df, n=10){
df[sample(nrow(df),n),]
}
results<-list()
for(y in 1:200){
subtotal<-list()
for(x in seq(0.01,1,0.1)){
subtotal[[as.character(x)]]<-df %>% group_by(Site) %>% sample_frac(x) %>% summarize(total=sum(count)) %>% mutate(frac=x)
}
results[[y]]<-bind_rows(subtotal)
}
results<-bind_rows(results)
#Get sq km
sqkm<-df %>% group_by(Site) %>% summarize(n=n())
results<-merge(results,sqkm)
results<-results %>% mutate(sqkm=floor(frac*n))
#Summarize by fraction
results<-results %>% group_by(Site,sqkm) %>% summarize(mean=mean(total),lower=quantile(total,0.05),upper=quantile(total,0.95))
ggplot(results,aes(x=sqkm,y=mean)) +facet_wrap(~Site,scales="free") + geom_line() + geom_ribbon(aes(ymin=lower,ymax=upper)) + scale_y_continuous(label=comma) + labs(x="Extent (km^2)",y="Tree Count")
# Chunk 4
field<-read.csv("/Users/ben/Documents/NEON_crown_maps/Figures/vst_field_data.csv")
field$area<-field$maxCrownDiameter*field$ninetyCrownDiameter
field<-field %>%  filter(!is.na(itcEasting),!str_detect(eventID,"2014"),growthForm %in% c("single bole tree","multi-bole tree","small tree","sapling"),stemDiameter>15) %>% droplevels() %>% filter(height>3|is.na(height))
field<-field %>% group_by(individualID) %>% arrange(desc(eventID)) %>% slice(1)
# Chunk 5
#field %>% filter(siteID %in% results$Site) %>% filter(!is.na(easting)) %>% filter(stemDiameter < 8) %>% ggplot(.,aes(x=height,fill=siteID)) + geom_density(alpha=0.5)
# Chunk 6
#Scaling factor from a 40m plot to 1km tile
scaling=(1000 * 1000) /((20*20)*2)
#TODO plot type? Individual ID for multi-bole?
# plot_totals<-field %>% filter(siteID %in% results$Site) %>% filter(!is.na(itcEasting)) %>% filter(stemDiameter > 7.5) %>% filter(is.na(height)|height>3) %>% group_by(Site=siteID,plotID,eventID) %>% summarize(n=n()) %>% summarize(n=round(mean(n)))
stan_glm <- stan_glm(n~0 + Site,data = plot_totals,family = poisson,cores=4, iter=20000)
# Chunk 7
newdata <- results %>% group_by(Site,sqkm) %>% distinct() %>% dplyr::select(Site,sqkm) %>% filter(Site %in% plot_totals$Site)
estimated <- fitted_draws(stan_glm, newdata,draws=2000) %>% mutate(total=(sqkm * .value)*scaling)  %>% group_by(Site,sqkm,.draw) %>% summarize(total=sum(total)) %>% summarize(mean=mean(total),lower=quantile(total,0.05),upper=quantile(total,0.95))
ggplot(estimated,aes(x=sqkm,y=mean)) +facet_wrap(~Site,scales="free") + geom_line() + geom_ribbon(aes(ymin=lower,ymax=upper)) + scale_y_continuous(label=comma) + labs(x="Extent (km^2)",y="Tree Count")
#Combined
results$Data<-c("Remote Sensing")
estimated$Data<-c("Field")
combined<-bind_rows(list(results,estimated))
ggplot(combined,aes(x=sqkm,y=mean,fill=Data)) +facet_wrap(~Site,scales="free") + geom_line(col="black") + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.5) + scale_y_continuous(label=comma) + labs(x="Extent (km^2)",y="Tree Count")  + theme_bw()
ggsave("Scaling_all.png",height=10,width=12)
combined %>% filter(Site %in% c("DSNY","TEAK","OSBS","BART","BLAN","SJER","MLBS","HARV","LENO")) %>% ggplot(. ,aes(x=sqkm,y=mean,fill=Data)) +facet_wrap(~Site,scales="free") + geom_line(col="black") + geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.5) + scale_y_continuous(label=comma) + labs(x="Extent (km^2)",y="Tree Count")  + theme_bw()
ggsave("Scaling_subset.png",height=7,width=10)
# Chunk 8
combined %>% group_by(Data,Site) %>% filter(sqkm == max(sqkm)) %>% ungroup() %>% pivot_wider(names_from=Data,values_from=c(mean,lower,upper)) %>% ggplot(., aes(x=mean_Field,y=`mean_Remote Sensing`)) + geom_point()  + labs(x="Field",y="Remote Sensing") + ggtitle("Tree Count") + geom_abline(linetype="dashed") + coord_fixed()    + geom_text(aes(label=Site),size=2,hjust=1.1,vjust=1.2) + theme_bw()  + scale_x_continuous(limits=c(0e7,1.74e7),labels=comma) + scale_y_continuous(limits=c(0e7,1.2e7),labels=comma) + geom_errorbarh(aes(xmin=lower_Field,xmax=upper_Field))
ggsave("FullSiteScale.png",height=6,width=9)
# Chunk 9
#Load data from HPC
f<-list.files(pattern="sampling")
f<-f[str_detect(f,"nlcd")]
fn<-lapply(f,read.csv)
#rename as character
fn<-lapply(fn, function(x){
x$nlcd<-as.character(x$nlcd)
return(x)
})
sampling<-bind_rows(fn)
#remove nlcd classes
to_remove<- sampling %>% filter(nlcd %in% c(11,12,21,22,23,31,32,33,81,82,83,84,85))
ggplot(to_remove,aes(x=nlcd, y=tree_density)) + geom_boxplot()
ggplot(sampling,aes(x=nlcd, y=tree_density)) + geom_boxplot()
ggplot()
sampling<- sampling %>% filter(!nlcd %in% c(11,12,21,22,23,31,32,33,81,82,83,84,85))
#Plot sampling curves
p <- ggplot() + geom_density(data=sampling,aes(x=tree_density,fill=as.factor(year)),alpha=0.4) + facet_wrap(~site,scales="free") + labs(fill="year")
#Get site curve
field_density<-field %>% filter(siteID %in% results$Site) %>% group_by(site=siteID,plotID,eventID) %>% summarize(n=n()) %>% summarize(tree_density=round(mean(n)))
rects<-field_density %>% group_by(site) %>% summarize(mean=mean(tree_density),lower=quantile(tree_density,0.05), upper=quantile(tree_density,0.95))
p +geom_rect(data=rects,aes(xmin=lower,xmax=upper,ymin=0,ymax=Inf),fill="black",alpha=0.2) + geom_vline(data=rects,aes(xintercept=mean),linetype="dashed") + theme_bw() + labs(x="Trees per plot",fill="Year")
ggsave("sampling3.png",height=4,width=7)
rect_subset <- rects %>% filter(site %in% c("DSNY","TEAK","OSBS","BART","DELA","SJER","JERC","HARV","LENO"))
sampling %>% filter(site %in% c("DSNY","TEAK","OSBS","BART","DELA","SJER","JERC","HARV","LENO")) %>% group_by(site) %>% filter(year==max(year)) %>% ggplot(.) +
geom_density(aes(x=tree_density),fill="black",alpha=0.4) + facet_wrap(~site,scales="free") +geom_rect(data=rect_subset,aes(xmin=lower,xmax=upper,ymin=0,ymax=Inf),fill="black",alpha=0.2) + geom_vline(aes(xintercept=mean(tree_density))) + geom_vline(data=rect_subset,aes(xintercept=mean),linetype="dashed") + theme_bw() + labs(x="Trees per plot")
ggsave("Sampling_subset.png",height=4,width=7)
#as a pair of distributions
field_density$data<-c("NEON Field Plots")
sampling$data<-c("Simulated RS Plots")
combined<-bind_rows(field_density,sampling) %>% filter(site %in% c("SOAP","TEAK","SJER","OSBS","JERC","DSNY","LENO","DELA","TALL")) %>% filter(!tree_density==0)
#Level and organize by Domain
combined$site<-factor(combined$site,levels = c("SOAP","TEAK","SJER","OSBS","JERC","DSNY","LENO","DELA","TALL"))
ggplot(combined,aes(x=tree_density,fill=data)) + geom_density(alpha=0.3) + facet_wrap(~site,scales="free") + labs(x="Trees per plot")
ggsave("Sampling_distributions.png",height=4,width=7)
library(NeonTreeEvaluation)
list_annotations
list_rgb()
a<-list_rgb()
list_a
a
lapply(a,xml_parse)
?list_rgb
?list_data
library(NeonTreeEvaluation)
get_data("HARV_026")
get_data("HARV_026","hyperspectral")
stack(get_data("HARV_026","hyperspectral"))
library(raster)
r<-stack(get_data("HARV_026","hyperspectral"))
head(r)
nlayers(r)
plotRGB(r[11,55,113])
plotRGB(r[[11,55,113]])
plotRGB(r[c(11,55,113)])
three_layer<-r[[c(11,55,113)]]
plot(three_layer)
plotRGB(three_layer,stretch="lin")
plotRGB(three_layer)
three_layer/max(three_layer) * 255
plotRGB(three_layer/max(three_layer) * 255
)
plotRGB(three_layer,stretch="lin")
?plotRGB
plotRGB(three_layer,stretch="lin")
?stretch
plotRGB(three_layer/max(three_layer) * 255)
plotRGB(three_layer/max(three_layer))
plot(three_layer)
plotRGB(three_layer/max(three_layer))
plotRGB(three_layer,stretch="lin")
plotRGB(three_layer,stretch="lin",maxq=0.9)
plotRGB(stretch(three_layer))
plotRGB(stretch(three_layer,minq=0.9))
plotRGB(stretch(three_layer,minq=0.99))
plotRGB(stretch(three_layer,maxq=0.99))
plotRGB(stretch(three_layer,maxq=0.98))
plotRGB(stretch(three_layer,maxq=0.95))
plotRGB(stretch(three_layer,maxq=0.98))
plotRGB(stretch(three_layer,maxq=0.98))
plotRGB(stretch(three_layer,minq =0.05, maxq=0.98))
plotRGB(stretch(three_layer,minq =0.02, maxq=0.98))
plotRGB(stretch(three_layer,minq =0.02, maxq=0.90))
plotRGB(stretch(three_layer,minq =0.02, maxq=0.94))
three_layer<-r[[c(55,11,113)]]
plot(three_layer)
plotRGB(three_layer/max(three_layer) * 255)
plotRGB(three_layer,stretch="lin")
three_layer<-r[[c(113,55,11)]]
plot(three_layer)
plotRGB(three_layer,stretch="lin")
?stretch
# Chunk 1: setup
library(raster)
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(stringr)
# Chunk 2
df<-read.csv("averages.csv",row.names =1)
counts<-read.csv("counts.csv")
colnames(counts)<-c("Site","geo_index","Year","n")
counts %>% group_by(Site, Year) %>% filter(!Site %in% c("GUIL","GRSM","PUUM")) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% ungroup() %>% summarize(sum(n))
counts %>% group_by(Site, Year) %>% summarize(n=sum(n)) %>% filter(Year==max(Year)) %>% data.frame()
counts %>% group_by(Site) %>% summarize(n=sum(n)) %>% data.frame()
# Chunk 3
#Add a ecosystem color
envdf<-read.csv("NEON vegetation cover type from steph.csv")
sitedf<-read.csv("field-sites.csv")
merged_df<-df %>% inner_join(envdf) %>% inner_join(sitedf,by=c("Site" ="siteID")) %>% filter(!Site %in% c("PUUM","GUIL","GRSM") )
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Vegetation.Cover.Type)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width", col="Forest Cover Type") + geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8) + scale_color_brewer(palette="Dark2")
ggsave("Attributes.png",height=4,width=7)
ggsave("Attributes.svg", height=4,width=7)
ggplot(merged_df,aes(x=n,y=height_mean/sqrt(area_mean),col=Domain.Name)) + geom_point(alpha=0.5, size=3) + labs(x="Tree Density (trees per km^2)",y="Tree Height / Crown Width") +geom_text(aes(label=Site),size=2,hjust=0.5,vjust=-1) + theme_bw() + scale_y_continuous(n.breaks=8)
ggsave("Attributes_domain.png",height=3.5,width=6)
# Chunk 4
counts %>% spread(Year,n) %>% ggplot(.,aes(x=`2019`,y=`2018`)) + geom_point(aes(col=Site),alpha=0.5) + geom_abline(linetype="dashed") + coord_equal() + stat_smooth(method="lm")  + theme_bw() + theme(legend.position = "none") + scale_x_continuous(labels=comma, n.breaks=7  ) + scale_y_continuous(labels=comma,n.breaks=7 ) + ggtitle("Tree Count Across Years")
ggsave("CrossYears.png",height=4,width=7)
# Chunk 5
field<-read.csv("/Users/Ben/Documents/NeonTreeEvaluation/field_data.csv")
field$area<-field$maxCrownDiameter*field$ninetyCrownDiameter
#mean height from the field
field_means<-field_data %>% group_by(Site) %>% summarize(height=mean(height),area=mean(area))
ggplot(field_data) + geom_density(aes(x=height),fill="blue",alpha=0.5) + facet_wrap(~Site,scales="free") + geom_vline(data=df,aes(xintercept=height_mean),col="red") + geom_vline(data=field_means,aes(xintercept=height),col="blue") + theme_bw()
ggplot(field_data) + geom_density(aes(x=area),fill="blue",alpha=0.7) + facet_wrap(~Site,scales="free") + geom_vline(data=df,aes(xintercept=area_mean),col="red")+ geom_vline(data=field_means,aes(xintercept=area),col="blue") + theme_bw()
# Chunk 6
field_area<-field %>% filter(!is.na(easting)) %>% filter(stemDiameter > 7.5) %>% filter(is.na(height)|height>3) %>% group_by(site=siteID,plotID,eventID) %>% summarize(area=mean(area,na.rm=T)) %>% group_by(site) %>% summarize(field_area=mean(area,na.rm=T)) %>% arrange(desc(field_area))
df %>% dplyr::select(site=Site,Remote_area=area_mean) %>% inner_join(field_area) %>%
ggplot(.,aes(x=field_area,y=Remote_area)) + geom_point()  + geom_abline(linetype="dashed") + xlim(0,125)+ ylim(0,125) + coord_equal() + geom_text(aes(label=site),size=2,vjust=1)
ids<-read.csv("/Users/ben/Downloads/training_data.csv")
all_field <- field %>% filter(individualID %in% ids$individualID)
train_field <- field %>% filter(individualID %in% ids$individualID)
train_shp <- st_as_sf(train_field,coords = c("itcEasting","itcNorthing"))  %>% select(plotID, individualID,taxonID, utmZone)
library(NeonTreeEvaluation)
library(dplyr)
library(sf)
train_shp <- st_as_sf(train_field,coords = c("itcEasting","itcNorthing"))  %>% select(plotID, individualID,taxonID, utmZone)
data("field")
ids<-read.csv("/Users/ben/Downloads/training_data.csv")
train_field <- field %>% filter(individualID %in% ids$individualID)
colname(trin_field)
colname(train_field)
colnames(train_field)
train_shp <- st_as_sf(train_field,coords = c("itcEasting","itcNorthing"))  %>% select(plotID, individualID,taxonID)
st_write(train_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/train_data.shp", delete_dsn = T)
st_write(train_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/train_data.shp")
st_write(train_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/train_data.shp", delete_dsn = T)
ids<-read.csv("/Users/ben/Downloads/testing_data.csv")
test_field <- field %>% filter(individualID %in% ids$individualID)
test_shp <- st_as_sf(test_field,coords = c("itcEasting","itcNorthing"))  %>% select(plotID, individualID,taxonID)
st_write(test_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/test_data.shp", delete_dsn = T)
st_write(test_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/test_data.shp")
st_write(test_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/test_data.shp")
st_write(test_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/test_data.shp", delete_dsn = T)
dim(test_shp)
dim(train_shp)
test_shp %>% group_by(taxonID) %>% summarize(n=n())
test_shp %>% group_by(taxonID) %>% as_data_frame() %summarize(n=n())
test_shp %>% group_by(taxonID) %>% as_data_frame() %>% summarize(n=n())
test_shp %>% as_tibble() %>% group_by(taxonID) %>% summarize(n=n())
test_shp %>% as_tibble() %>% group_by(taxonID) %>% summarize(n=n()) %>% as.data.frme()
test_shp %>% as_tibble() %>% group_by(taxonID) %>% summarize(n=n()) %>% as.data.frame()
#basic stats on training test split
sum(test_field$individualID %in% train_field$individualID)
test_field$split<-"test"
train_field$split<-"train"
bind_rows(list(test_field,train_field))
df<-bind_rows(list(test_field,train_field))
df %>% group_by(split) %>% summarize(n=n())
df %>% group_by(split, taxonID) %>% summarize(n=n())
df %>% group_by(split, taxonID) %>% summarize(n=n()) %>% ggplot(.,aes(x=taxonID, y=n, col=split)) %>% geom_bar(stat="identity")
df %>% group_by(split, taxonID) %>% summarize(n=n()) %>% ggplot(.,aes(x=taxonID, y=n, col=split)) _ geom_bar(stat="identity")
df %>% group_by(split, taxonID) %>% summarize(n=n()) %>% ggplot(.,aes(x=taxonID, y=n, col=split)) + geom_bar(stat="identity")
df %>% group_by(split, taxonID) %>% summarize(n=n()) %>% ggplot(.,aes(x=taxonID, y=n, fill=split)) + geom_bar(stat="identity")
df %>% group_by(split, taxonID) %>% summarize(n=n()) %>% ggplot(.,aes(x=taxonID, y=n, fill=split)) + geom_bar(stat="identity",position = "dodge")
df %>% group_by(split, taxonID) %>% summarize(n=n()) %>% ggplot(.,aes(x=taxonID, y=n, fill=split)) + geom_bar(stat="identity",position = "dodge") + coord_flip()
3339/(2825+3339)
View(ids)
df %>% group_by(split) %>% n_distinct(taxonID)
df %>% group_by(split) %>% n_distinct(.,taxonID)
df %>% group_by(split) %>% summarise(n=n_distinct(taxonID))
data("field")
ids<-read.csv("/Users/ben/Downloads/training_data.csv")
train_field <- field %>% filter(individualID %in% ids$individualID)
train_shp <- st_as_sf(train_field,coords = c("itcEasting","itcNorthing"))  %>% select(plotID, individualID,taxonID)
ids<-read.csv("/Users/ben/Downloads/testing_data.csv")
test_field <- field %>% filter(individualID %in% ids$individualID)
test_shp <- st_as_sf(test_field,coords = c("itcEasting","itcNorthing"))  %>% select(plotID, individualID,taxonID)
train_shp<-train_shp %>% filter(taxonID %in% test_shp$taxonID)
st_write(train_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/train_data.shp", delete_dsn = T)
st_write(test_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/test_data.shp", delete_dsn = T)
length(unique(test_shp$taxonID))
length(unique(train_shp$taxonID))
test_shp$taxonID[!test_shp$taxonID%in% train_shp$taxonID]
library(NeonTreeEvaluation)
library(dplyr)
library(sf)
data("field")
ids<-read.csv("/Users/ben/Downloads/training_data.csv")
train_field <- field %>% filter(individualID %in% ids$individualID)
train_shp <- st_as_sf(train_field,coords = c("itcEasting","itcNorthing"))  %>% select(plotID, individualID,taxonID)
ids<-read.csv("/Users/ben/Downloads/testing_data.csv")
test_field <- field %>% filter(individualID %in% ids$individualID)
test_shp <- st_as_sf(test_field,coords = c("itcEasting","itcNorthing"))  %>% select(plotID, individualID,taxonID)
train_shp<-train_shp %>% filter(taxonID %in% test_shp$taxonID)
test_shp<-test_shp %>% filter(taxonID %in% train_shp$taxonID)
st_write(train_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/train_data.shp", delete_dsn = T)
st_write(test_shp,"/Users/Ben/Documents/DeepTreeAttention/data/processed/test_data.shp", delete_dsn = T)
test_shp$taxonID
unique(test_shp$taxonID)
length(unique(test_shp$taxonID))
2^10
2^6
table(test_shp$taxonID)
dim(train_shp)
dim(test_shp)
te
length(unique(test_shp$taxonID))
length(unique(train_shp$taxonID))
