#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('sampling.py'): {94L: (0,
        None,
        1,
        0)},
                     loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/generic.py'): {5271L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../../../../Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {},
                    loc('shapefile_annotation.py'): {}}
debug.exceptions-ignored = {loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/_code/code.py'): {209: True},
                            loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1130: True},
                            loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'): {495: True},
                            loc('../../miniconda3/envs/test/lib/python3.7/site-packages/_pytest/_code/code.py'): {210: True},
                            loc('../../miniconda3/envs/test/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1131: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'U2xwrLhOT0qENlvgKrJ9PhQLl7'\
        'D86AzX',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(23,)],
                                 'top-node': (4,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'as_completed',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'bounds',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 897L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['u'\
        'njson_dataframe(df, "annotations")\n',
        'df.annotations.iloc[0]\n',
        'a = df.annotations.iloc[300]\n',
        'json.loads(a)[0]\n',
        'json.loads(a)\n',
        'json.loads(a)[1]\n',
        'annotation_dict = json.loads(a)[0]\n',
        'annotation_dict.keys\n',
        'annotation_dict["task"]\n',
        'annotation_dict["task_label"]\n',
        'pd.Dataframe(annotation_dict["value"])\n',
        'pd.DataFrame(annotation_dict["value"])\n',
        'boxes = annotation_dict["value"]\nboxes = pd.DataFrame(boxes)\n\n',
        'boxes.tool_label\n',
        'boxes.rename({"tool_label": "Species"})\n',
        'boxes.rename("columns",{"tool_label": "Species"})\n',
        'boxes.x\n',
        'boxes.y\n',
        'boxes.tool\n',
        'boxes.height\n',
        'boxes.width\n',
        'boxes.details\n',
        'boxes.frame\n',
        'a\n',
        'df.annotations.iloc[200]\n',
        'df.annotations.iloc[380]\n',
        'df.annotations.iloc[355]\n',
        'df.annotations.iloc[300]\n',
        'df.annotations.iloc[350]\n',
        'df.annotations.iloc[360]\n',
        'df.annotations.iloc[370]\n',
        'df.annotations.iloc[371]\n',
        'df.annotations.iloc[372]\n',
        'df.annotations.iloc[373]\n',
        'df.annotations.iloc[374]\n',
        'df.annotations.iloc[375]\n',
        'df.annotations.iloc[376]\n',
        'df.annotations.iloc[377]\n',
        'df.annotations.iloc[378]\n',
        'df.annotations.iloc[100]\n',
        'df.annotations.length\n',
        'df.annotations.iloc[10]\n',
        'df.annotations.iloc[9]\n',
        'df.annotations.apply(len)\n',
        'df.annotations.iloc[11]\n',
        'df.annotations.iloc[20]\n',
        'df[df.annotations == [{"task":"T0","task_label":"Species","value":['\
        ']}]]\n',
        'df[df.annotations == "[{"task":"T0","task_label":"Species","value":'\
        '[]}]"]\n',
        "df[df.annotations == '[{\"task\":\"T0\",\"task_label\":\"Species\""\
        ",\"value\":[]}]']\n",
        "df = df[df.annotations == '[{\"task\":\"T0\",\"task_label\":\"Speci"\
        "es\",\"value\":[]}]']\n",
        'df = load_classifications(classifications_file, version)\n',
        'classifications_file\n',
        'boxes.columns\n',
        'df  = df[df.workflow_version > version]\n',
        'df\n',
        "df = df[~df.annotations == '[{\"task\":\"T0\",\"task_label\":\"Spec"\
        "ies\",\"value\":[]}]']\n",
        "df = df[~(df.annotations == '[{\"task\":\"T0\",\"task_label\":\"Spe"\
        "cies\",\"value\":[]}]')]\n",
        'df.shape\n',
        'df.annotations\n',
        'df.annotations.iloc[1]\n',
        'x = df.annotations.iloc[1]\n',
        'import josn\n',
        'import json\n',
        'annotation_dict = json.loads(x)[0]\n',
        'len(annotation_dict)\n',
        'annotation_dict.keys()\n',
        'annotation_dict["value"]\n',
        'annotation_dict["value"][0]\n',
        'annotation_dict["value"][2]\n',
        'annotation_dict["value"][1]\n',
        '["a"] + ["b"]\n',
        '["a"].append(["b"])\n',
        'g=["a"]\n',
        'g.append(["b"])\n',
        'g\n',
        'df.head()\n',
        'df.classification_id[0]\n',
        'df.classification_idi[0]\n',
        'df.classification_id.iloc[0]\n',
        'df.classification_id.iloc[1]\n',
        'df.classification_id.iloc[10]\n',
        'df.subject_data[0]\n',
        'df.subject_data.iloc[0]\n',
        'df.subject_ids\n',
        'df.columns\n',
        'df.metadata\n',
        'df.metadata.iloc[0]\n',
        'xz\n',
        'z\n',
        'x\n',
        'annotation_dict = json.loads(x.annotations)[0]\n',
        'boxes = annotation_dict["value"]\n',
        'boxes = pd.DataFrame(boxes)\n',
        'boxes.rename(columns = {"tool_label": "Species"})\n',
        'boxes\n',
        'annotation_dict\n',
        'box\n',
        'box_list.append(pd.DataFrame(box))\n',
        'box_df = pd.concat(box_list)\n',
        'box_df\n']},
                       'launch-id': None,
                       'sel-line': 908L,
                       'sel-line-start': 186299L,
                       'selection_end': 186299L,
                       'selection_start': 186299L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 258L,
                       'folded-linenos': [],
                       'history': {None: ['d=a\n',
        'import numpy as np\n',
        'is_white =np.sum(np.all(numpy_image == [255,255,255], axis=-1))/num'\
        'py_image.size\n',
        'is_white = np.sum(np.all(numpy_image == [255,255,255], axis=2))/(nu'\
        'mpy_image.shape[0] * numpy_image.shape[1])\n',
        'is_white = np.sum(np.all(white_pixels,0))/(numpy_image.shape[0] * n'\
        'umpy_image.shape[1])\n',
        'white_pixels = numpy_image == 255\n',
        'np.sum(white_pixels)\n',
        'np.sum(numpy_image == 255)\n',
        'numpy_image.size()\n',
        'numpy_image.size\n',
        'v\n',
        'i\n',
        'a=Image.open("/Users/ben/Downloads/26eb1254-7373-405e-b8df-85f83e72'\
        'f33b.png")\n',
        'a\n',
        ' numpy_image = np.array(a)\n',
        'is_white = white_pixels/(numpy_image.shape[0] * numpy_image.shape[1'\
        '])\n',
        'numpy_image.shape[0]\n',
        'white_pixels = np.sum(numpy_image == 255,0)\n',
        'white_pixels = np.sum(numpy_image == 255,1)\n',
        'white_pixels = np.sum(numpy_image == 255,2)\n',
        'white_pixels = np.all(np.sum(numpy_image == 255,2))\n',
        'np.sum(numpy_image == 255,2)\n',
        'numpy_image == 255\n',
        'white_pixels = np.sum(numpy_image == 255)\n',
        'numpy_image.shape\n',
        '1000 * 1000 * 3\n',
        'white_pixels = np.sum(numpy_image == 255,-1)\n',
        'white_pixels.shape\n',
        'np.sum(numpy_image == 255,-1) == 3\n',
        'white_pixels = np.sum(np.sum(numpy_image == 255,-1) == 3)\n',
        'white_pixels\n',
        'np.unique(img.reshape(-1, 3), axis=0, return_counts=True)\n',
        'np.unique(numpy_image.reshape(-1, 3), axis=0, return_counts=True)\n',
        'numpy_image.reshape(-1, 3)\n',
        'numpy_image.reshape(-1, 3) == [255,255,255]\n',
        'np.sum(numpy_image.reshape(-1, 3) == [255,255,255])\n',
        '(numpy_image.shape[0] * numpy_image.shape[1])\n',
        'img_reshaped = [255,255,255]\n',
        'img_reshaped = np.sum(img_reshaped == [255,255,255])/img_reshaped.s'\
        'hape[0]\n',
        'img_reshaped = numpy_image.reshape(-1, 3)\nimg_reshaped = np.sum(im'\
        'g_reshaped == [255,255,255])/img_reshaped.shape[0]\n\n',
        'img_reshaped\n',
        'd =  Image.open("/Users/ben/Downloads/04b1cf25-321f-4cb8-aba6-039c4'\
        'a8aa6dd.png")\n',
        'd\n',
        'numpy_image = np.array(d)\n',
        'numpy_image\n',
        'img_reshaped = numpy_image.reshape(-1, 3)\n',
        'is_white = np.sum(img_reshaped == [255,255,255])/img_reshaped.shape'\
        '[0]\n',
        'img_reshaped.shape[0]\n',
        'img_reshaped.shape\n',
        'np.sum(img_reshaped == [255,255,255],0)\n',
        'np.sum(img_reshaped == [255,255,255])\n',
        'img_reshaped.size\n',
        'is_white = np.sum(img_reshaped == [255,255,255])/img_reshaped.size'\
        '\n',
        'is_white\n',
        'is_black =np.sum(np.all(numpy_image == [255,255,255], axis=-1))/num'\
        'py_image.size\n',
        'is_black\n',
        'import os\n',
        'os.getcwd()\n',
        'import aggregate\n',
        'df = aggregate.load_classifications("data/species-classifications.c'\
        'sv",CURRENT_VERSION)\n',
        'df = aggregate.load_classifications("tests/data/species-classificat'\
        'ions.csv",CURRENT_VERSION)\n',
        'classifications_file = "tests/data/species-classifications.csv"\n',
        'import pandas as pd\n',
        'df.version\n',
        'df  = df[df.workflow_version == version]\n',
        'df.shape\n',
        'df.head()\n',
        'CURRENT_VERSION = 91.123\n',
        'version = CURRENT_VERSION\n',
        'df = pd.read_csv(classifications_file)\ndf  = df[df.workflow_versio'\
        'n == version]\n\n',
        'df.workflow_version\n',
        'df.workflow_version.unique()\n',
        'version\n',
        'df[df.workflow_version == version] \n',
        'df.workflow_version.iloc[2000]\n',
        'df.workflow_version == version\n',
        'df.workflow_version.iloc[200]\n',
        'min_version = 91.123\n',
        'df  = df[df.workflow_version > min_version]\n',
        'df = pd.read_csv(classifications_file)\n',
        'df\n',
        'df.workflow_version.iloc[300]\n',
        'df.subject_data\n',
        'df.subject_data.iloc[0]\n',
        'x=df.subject_data.iloc[0]\n',
        'import json\n',
        'annotation_dict = json.loads(x)\n',
        'annotation_dict\n',
        'annotation_dict.keys()\n',
        'data = annotation_dict["41202880"]\n',
        'data.keys()\n',
        'pd.DataFrame(data["bounds"])\n',
        'pd.DataFrame(data)\n',
        'data\n',
        'data["bounds"]\n',
        'utm_left, utm_bottom, utm_right, utm_top = data["bounds"]\n',
        'utm_left\n',
        'pd.DataFrame({"utm_left": [utm_left], "utm_bottom":[utm_bottom],"ut'\
        'm_right":[utm_right],"utm_top":[utm_right]})\n',
        'bounds = pd.DataFrame({"utm_left": [utm_left], "utm_bottom":[utm_bo'\
        'ttom],"utm_right":[utm_right],"utm_top":[utm_right]})\n',
        'x\n']},
                       'launch-id': None,
                       'sel-line': 269L,
                       'sel-line-start': 11708L,
                       'selection_end': 11828L,
                       'selection_start': 11828L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../EvergladesWadingBird/Zooniverse/aggregate.py'),
        {'attrib-starts': [],
         'first-line': 0L,
         'folded-linenos': [],
         'sel-line': 8L,
         'sel-line-start': 102L,
         'selection_end': 106L,
         'selection_start': 106L,
         'zoom': 0L},
        1585859566.773382],
        [loc('../EvergladesWadingBird/Zooniverse/aggregate.py'),
         {'attrib-starts': [('parse_annotations',
                             17)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 448L,
          'selection_end': 484L,
          'selection_start': 484L,
          'zoom': 0L},
         1585871510.396],
        [loc('main.py'),
         {'attrib-starts': [],
          'first-line': 183L,
          'folded-linenos': [],
          'sel-line': 201L,
          'sel-line-start': 7307L,
          'selection_end': 7351L,
          'selection_start': 7351L,
          'zoom': 0L},
         1585882087.818906]],
        3),
        'current-loc': loc('../EvergladesWadingBird/Zooniverse/aggregate.py'),
        'editor-state-list': [(loc('../EvergladesWadingBird/Zooniverse/aggregate.py'),
                               {'attrib-starts': [('parse_subject_data',
        36)],
                                'first-line': 25L,
                                'folded-linenos': [],
                                'sel-line': 39L,
                                'sel-line-start': 1024L,
                                'selection_end': 1055L,
                                'selection_start': 1055L,
                                'zoom': 0L}),
                              (loc('main.py'),
                               {'attrib-starts': [],
                                'first-line': 183L,
                                'folded-linenos': [],
                                'sel-line': 201L,
                                'sel-line-start': 7307L,
                                'selection_end': 7351L,
                                'selection_start': 7351L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('../EvergladesWadingBird/Zooniverse/aggregate.py'),
         loc('main.py')]),
                               'open_files': [u'main.py',
        u'../EvergladesWadingBird/Zooniverse/aggregate.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1440,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('../EvergladesWadingBird/Zooniverse/aggregate.py'),
                           loc('main.py')]
guimgr.visual-state = {loc('../DeepForest/.travis.yml'): {'attrib-starts': [],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 186L,
        'selection_end': 233L,
        'selection_start': 233L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/deepforest.py'): {'attr'\
        'ib-starts': [('deepforest',
                       34),
                      ('deepforest.use_release',
                       138)],
        'first-line': 133L,
        'folded-linenos': [],
        'sel-line': 142L,
        'sel-line-start': 5783L,
        'selection_end': 5832L,
        'selection_start': 5832L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/predict.py'): {'attrib-'\
        'starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 228L,
        'selection_end': 293L,
        'selection_start': 228L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/preprocess.py'): {'attr'\
        'ib-starts': [('split_raster',
                       115)],
        'first-line': 150L,
        'folded-linenos': [],
        'sel-line': 161L,
        'sel-line-start': 6779L,
        'selection_end': 6796L,
        'selection_start': 6787L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/retinanet_train.py'): {'a'\
        'ttrib-starts': [('create_generators',
                          179)],
        'first-line': 207L,
        'folded-linenos': [],
        'sel-line': 220L,
        'sel-line-start': 8520L,
        'selection_end': 8544L,
        'selection_start': 8537L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/tfrecords.py'): {'attri'\
        'b-starts': [('_parse_fn',
                      164)],
        'first-line': 162L,
        'folded-linenos': [],
        'sel-line': 167L,
        'sel-line-start': 7432L,
        'selection_end': 7448L,
        'selection_start': 7448L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/utilities.py'): {'attri'\
        'b-starts': [('use_release',
                      58)],
        'first-line': 93L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 1315L,
        'selection_end': 1330L,
        'selection_start': 1319L,
        'zoom': 0L},
                       loc('../DeepForest/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('parse_args',
                          371)],
        'first-line': 406L,
        'folded-linenos': [],
        'sel-line': 406L,
        'sel-line-start': 15687L,
        'selection_end': 15847L,
        'selection_start': 15687L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_preprocess.py'): {'attr'\
        'ib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_utilities.py'): {'attri'\
        'b-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest_Model/SLURM/anchors.sbatch'): {'at'\
        'trib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 760L,
        'selection_end': 760L,
        'selection_start': 760L,
        'zoom': 0L},
                       loc('../DeepForest_Model/SLURM/generate.sbatch'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 509L,
        'selection_end': 509L,
        'selection_start': 509L,
        'zoom': 0L},
                       loc('../DeepForest_Model/SLURM/training.sbatch'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 835L,
        'selection_end': 835L,
        'selection_start': 835L,
        'zoom': 0L},
                       loc('../DeepForest_Model/dask_utility.py'): {'attrib-'\
        'starts': [],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 64L,
        'selection_end': 105L,
        'selection_start': 105L,
        'zoom': 0L},
                       loc('../DeepForest_Model/generate.py'): {'attrib-star'\
        'ts': [('generate_training',
                173)],
        'first-line': 272L,
        'folded-linenos': [],
        'sel-line': 242L,
        'sel-line-start': 9919L,
        'selection_end': 9973L,
        'selection_start': 9973L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0009.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0030.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0048.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0051.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0075.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0115.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0130.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0146.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0149_eval.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0160.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Zooniverse/manifest.py'): {'a'\
        'ttrib-starts': [('main',
                          74)],
        'first-line': 62L,
        'folded-linenos': [],
        'sel-line': 75L,
        'sel-line-start': 2284L,
        'selection_end': 2296L,
        'selection_start': 2296L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Zooniverse/tile_raster.py'): {'a'\
        'ttrib-starts': [('writeImageAsGeoTIFF',
                          39)],
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 1598L,
        'selection_end': 1642L,
        'selection_start': 1642L,
        'zoom': 0L},
                       loc('LIDAR.py'): {'attrib-starts': [('non_zero_99_qua'\
        'ntile',
        68)],
        'first-line': 59L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 1806L,
        'selection_end': 1834L,
        'selection_start': 1834L,
        'zoom': 0L},
                       loc('Profiling.ipynb'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('SLURM/analysis.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 501L,
        'selection_end': 501L,
        'selection_start': 501L,
        'zoom': 0L},
                       loc('SLURM/figures.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 572L,
        'selection_end': 589L,
        'selection_start': 589L,
        'zoom': 0L},
                       loc('SLURM/generate.sbatch'): {'attrib-starts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 693L,
        'selection_end': 780L,
        'selection_start': 780L,
        'zoom': 0L},
                       loc('SLURM/hard_mining.sbatch'): {'attrib-starts': [],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 298L,
        'selection_end': 351L,
        'selection_start': 351L,
        'zoom': 0L},
                       loc('SLURM/predict.sbatch'): {'attrib-starts': [],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 738L,
        'selection_end': 826L,
        'selection_start': 738L,
        'zoom': 0L},
                       loc('SLURM/pytest.sbatch'): {'attrib-starts': [],
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 525L,
        'selection_end': 728L,
        'selection_start': 525L,
        'zoom': 0L},
                       loc('SLURM/test.sbatch'): {'attrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 591L,
        'selection_end': 591L,
        'selection_start': 591L,
        'zoom': 0L},
                       loc('__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('analysis.py'): {'attrib-starts': [('tree_falls',
        100)],
        'first-line': 78L,
        'folded-linenos': [],
        'sel-line': 136L,
        'sel-line-start': 5580L,
        'selection_end': 5638L,
        'selection_start': 5638L,
        'zoom': 0L},
                       loc('check_site.py'): {'attrib-starts': [],
        'first-line': 41L,
        'folded-linenos': [],
        'sel-line': 60L,
        'sel-line-start': 2336L,
        'selection_end': 2435L,
        'selection_start': 2336L,
        'zoom': 0L},
                       loc('dask_analysis.py'): {'attrib-starts': [],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 270L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('dask_example.py'): {'attrib-starts': [],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 1196L,
        'selection_end': 1200L,
        'selection_start': 1200L,
        'zoom': 0L},
                       loc('dask_small.py'): {'attrib-starts': [('load_tenso'\
        'rflow',
        25)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 653L,
        'selection_end': 826L,
        'selection_start': 653L,
        'zoom': 0L},
                       loc('dask_test_persist.py'): {'attrib-starts': [('run'\
        '_test',
        13)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 257L,
        'selection_end': 277L,
        'selection_start': 277L,
        'zoom': 0L},
                       loc('figures.py'): {'attrib-starts': [('treefalls',
        71)],
        'first-line': 73L,
        'folded-linenos': [],
        'sel-line': 86L,
        'sel-line-start': 3368L,
        'selection_end': 3372L,
        'selection_start': 3372L,
        'zoom': 0L},
                       loc('generate.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 159L,
        'selection_end': 205L,
        'selection_start': 205L,
        'zoom': 0L},
                       loc('generate_crops.py'): {'attrib-starts': [('genera'\
        'te_training',
        14)],
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2484L,
        'selection_end': 2559L,
        'selection_start': 2559L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [],
        'first-line': 158L,
        'folded-linenos': [],
        'sel-line': 135L,
        'sel-line-start': 4821L,
        'selection_end': 4825L,
        'selection_start': 4825L,
        'zoom': 0L},
                       loc('predict.py'): {'attrib-starts': [('predict_tiles',
        43)],
        'first-line': 37L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 2537L,
        'selection_end': 2572L,
        'selection_start': 2572L,
        'zoom': 0L},
                       loc('scratch.py'): {'attrib-starts': [],
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 936L,
        'selection_end': 965L,
        'selection_start': 965L,
        'zoom': 0L},
                       loc('start_cluster.py'): {'attrib-starts': [('start',
        35)],
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1141L,
        'selection_end': 1175L,
        'selection_start': 1167L,
        'zoom': 0L},
                       loc('test_dask.py'): {'attrib-starts': [('add',
        23)],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 443L,
        'selection_end': 459L,
        'selection_start': 459L,
        'zoom': 0L},
                       loc('test_start_cluster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 139L,
        'selection_end': 210L,
        'selection_start': 180L,
        'zoom': 0L},
                       loc('tests/__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/analysis.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_LIDAR.py'): {'attrib-starts': [('test'\
        '_postprocess_CHM',
        36)],
        'first-line': 34L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 929L,
        'selection_end': 945L,
        'selection_start': 933L,
        'zoom': 0L},
                       loc('tests/test_analysis.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 22L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_dask.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 47L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_figures.py'): {'attrib-starts': [],
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 13L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_hard_mining.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_predict.py'): {'attrib-starts': [('te'\
        'st_predict_tilelist',
        44)],
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 44L,
        'sel-line-start': 1225L,
        'selection_end': 1269L,
        'selection_start': 1269L,
        'zoom': 0L},
                       loc('tests/test_start_cluster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 85L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_tfrecords.py'): {'attrib-starts': [('t'\
        'est_create_tfrecords',
        19)],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 411L,
        'selection_end': 459L,
        'selection_start': 443L,
        'zoom': 0L},
                       loc('tests/test_tfrecords_yields.py'): {'attrib-start'\
        's': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 38L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tfrecords.py'): {'attrib-starts': [('create_tens'\
        'ors',
        111)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 113L,
        'sel-line-start': 3884L,
        'selection_end': 3888L,
        'selection_start': 3888L,
        'zoom': 0L},
                       loc('utils/tfrecords.py'): {'attrib-starts': [('creat'\
        'e_tfrecords',
        31)],
        'first-line': 57L,
        'folded-linenos': [],
        'sel-line': 69L,
        'sel-line-start': 2491L,
        'selection_end': 2536L,
        'selection_start': 2536L,
        'zoom': 0L},
                       loc('utils/verify.py'): {'attrib-starts': [('check_RG'\
        'B',
        8)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 317L,
        'selection_end': 328L,
        'selection_start': 328L,
        'zoom': 0L},
                       loc('../NeonTreeEvaluation/annotations/2018_OSBS_4_405000_3286000_image.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../TreeDemo/TreeDemo/Predict_Trees.py'): {'attri'\
        'b-starts': [('Tree_Model',
                      6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 134L,
        'selection_end': 151L,
        'selection_start': 151L,
        'zoom': 0L},
                       loc('../TreeDemo/TreeDemo/environment.yml'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 121L,
        'selection_end': 129L,
        'selection_start': 129L,
        'zoom': 0L},
                       loc('../TreeSegmentation/analysis/Hyperspectral.py'): {'a'\
        'ttrib-starts': [('h5refl2array',
                          9)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 129L,
        'selection_end': 167L,
        'selection_start': 167L,
        'zoom': 0L},
                       loc('../TreeSegmentation/analysis/generate_h5_raster.py'): {'a'\
        'ttrib-starts': [('parse_args',
                          6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 77L,
        'selection_end': 578L,
        'selection_start': 77L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('create_models',
                          77)],
        'first-line': 115L,
        'folded-linenos': [],
        'sel-line': 107L,
        'sel-line-start': 4157L,
        'selection_end': 4204L,
        'selection_start': 4189L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/image.py'): {'a'\
        'ttrib-starts': [('preprocess_image',
                          35)],
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 56L,
        'sel-line-start': 1845L,
        'selection_end': 1860L,
        'selection_start': 1860L,
        'zoom': 0L},
                       loc('../../Dropbox/Everglades/imagery/q__delivery_2015_1Metadata_FGDC_2015_Collier.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 237L,
        'selection_end': 263L,
        'selection_start': 259L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/Drone/RP_2015_P1.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/Drone/RP_2015_P6.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 131L,
        'selection_end': 154L,
        'selection_start': 154L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/multiyear/annotations/ABBY_063.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/multiyear/annotations/BONA_018.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/glob.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/random.py'): {'a'\
        'ttrib-starts': [('Random',
                          71),
                         ('Random.randrange',
                          173)],
        'first-line': 160L,
        'folded-linenos': [],
        'sel-line': 183L,
        'sel-line-start': 6417L,
        'selection_end': 6417L,
        'selection_start': 6417L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [('open',
                          2769)],
        'first-line': 2803L,
        'folded-linenos': [],
        'sel-line': 2813L,
        'sel-line-start': 95395L,
        'selection_end': 95448L,
        'selection_start': 95395L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [('Config',
                          694),
                         ('Config.getoption',
                          1094)],
        'first-line': 1105L,
        'folded-linenos': [],
        'sel-line': 1112L,
        'sel-line-start': 39769L,
        'selection_end': 39789L,
        'selection_start': 39789L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/fixtures.py'): {'a'\
        'ttrib-starts': [('FixtureRequest',
                          338),
                         ('FixtureRequest._getnextfixturedef',
                          376)],
        'first-line': 372L,
        'folded-linenos': [],
        'sel-line': 387L,
        'sel-line-start': 14561L,
        'selection_end': 14623L,
        'selection_start': 14561L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module',
                          419),
                         ('Module._importtestmodule',
                          487)],
        'first-line': 513L,
        'folded-linenos': [],
        'sel-line': 523L,
        'sel-line-start': 19438L,
        'selection_end': 19438L,
        'selection_start': 19438L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/dask/dataframe/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/fiona/collection.py'): {'a'\
        'ttrib-starts': [('Collection',
                          25),
                         ('Collection.__init__',
                          34)],
        'first-line': 51L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 2725L,
        'selection_end': 2725L,
        'selection_start': 2725L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/keras/engine/training_utils.py'): {'a'\
        'ttrib-starts': [('check_num_samples',
                          530)],
        'first-line': 559L,
        'folded-linenos': [],
        'sel-line': 570L,
        'sel-line-start': 23889L,
        'selection_end': 23889L,
        'selection_start': 23889L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/matplotlib/collections.py'): {'a'\
        'ttrib-starts': [('_CollectionWithSizes',
                          820),
                         ('_CollectionWithSizes.set_sizes',
                          838)],
        'first-line': 840L,
        'folded-linenos': [],
        'sel-line': 856L,
        'sel-line-start': 29028L,
        'selection_end': 29028L,
        'selection_start': 29028L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          122),
                         ('NDFrame.__getattr__',
                          5161)],
        'first-line': 5167L,
        'folded-linenos': [],
        'sel-line': 5178L,
        'sel-line-start': 171370L,
        'selection_end': 171370L,
        'selection_start': 171370L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/groupby/grouper.py'): {'a'\
        'ttrib-starts': [('get_grouper',
                          425)],
        'first-line': 585L,
        'folded-linenos': [],
        'sel-line': 597L,
        'sel-line-start': 20125L,
        'selection_end': 20125L,
        'selection_start': 20125L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/indexes/base.py'): {'a'\
        'ttrib-starts': [('_make_comparison_op',
                          100),
                         ('_make_comparison_op.cmp_method',
                          101)],
        'first-line': 94L,
        'folded-linenos': [],
        'sel-line': 104L,
        'sel-line-start': 2985L,
        'selection_end': 2985L,
        'selection_start': 2985L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/internals/construction.py'): {'a'\
        'ttrib-starts': [('sanitize_index',
                          600)],
        'first-line': 599L,
        'folded-linenos': [],
        'sel-line': 610L,
        'sel-line-start': 19280L,
        'selection_end': 19280L,
        'selection_start': 19280L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/ops/array_ops.py'): {'a'\
        'ttrib-starts': [('masked_arith_op',
                          60)],
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 93L,
        'sel-line-start': 2791L,
        'selection_end': 2791L,
        'selection_start': 2791L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pdal/pipeline.py'): {'a'\
        'ttrib-starts': [('Pipeline',
                          4),
                         ('Pipeline.get_metadata',
                          15)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 401L,
        'selection_end': 428L,
        'selection_start': 428L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/rtree/index.py'): {'a'\
        'ttrib-starts': [('Index',
                          92),
                         ('Index.get_coordinate_pointers',
                          291)],
        'first-line': 309L,
        'folded-linenos': [],
        'sel-line': 319L,
        'sel-line-start': 10780L,
        'selection_end': 10814L,
        'selection_start': 10814L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/tensorflow/python/client/session.py'): {'a'\
        'ttrib-starts': [('BaseSession',
                          620),
                         ('BaseSession._do_call',
                          1353)],
        'first-line': 1364L,
        'folded-linenos': [],
        'sel-line': 1369L,
        'sel-line-start': 52327L,
        'selection_end': 52327L,
        'selection_start': 52327L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/tensorflow/python/framework/ops.py'): {'a'\
        'ttrib-starts': [('Graph',
                          3001),
                         ('Graph._as_graph_element_locked',
                          3797)],
        'first-line': 3858L,
        'folded-linenos': [],
        'sel-line': 3874L,
        'sel-line-start': 139080L,
        'selection_end': 139080L,
        'selection_start': 139080L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor/lib/python3.6/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor/lib/python3.6/site-packages/fiona/collection.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/laspy/base.py'): {'a'\
        'ttrib-starts': [('DataProvider',
                          93),
                         ('DataProvider.point_map',
                          150)],
        'first-line': 161L,
        'folded-linenos': [],
        'sel-line': 175L,
        'sel-line-start': 6481L,
        'selection_end': 6481L,
        'selection_start': 6481L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          150),
                         ('NDFrame.__getattr__',
                          5256)],
        'first-line': 5261L,
        'folded-linenos': [],
        'sel-line': 5267L,
        'sel-line-start': 176020L,
        'selection_end': 176050L,
        'selection_start': 176050L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/tensorflow/python/client/session.py'): {'a'\
        'ttrib-starts': [('BaseSession',
                          620),
                         ('BaseSession._do_call',
                          1353)],
        'first-line': 1355L,
        'folded-linenos': [],
        'sel-line': 1368L,
        'sel-line-start': 52257L,
        'selection_end': 52326L,
        'selection_start': 52257L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/sre_parse.py'): {'a'\
        'ttrib-starts': [('_parse',
                          468)],
        'first-line': 635L,
        'folded-linenos': [],
        'sel-line': 644L,
        'sel-line-start': 22530L,
        'selection_end': 22530L,
        'selection_start': 22530L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/crowns/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'as_completed',
                         u'ewhite',
                         u'overwrite',
                         u'mem',
                         u'inters',
                         u'within',
                         u'witin',
                         u'contain',
                         u'plt',
                         u'plot',
                         u'select_tile',
                         u'box',
                         u'draped',
                         u'pd',
                         u'random',
                         u'time',
                         u'rgb',
                         u'[x for x in rgb_verified if x]',
                         u'lookup_CHM_path(path, lidar_pool, shp=False)',
                         u'n=10']
testing.stored-results = (1,
                          [(u'/Users/ben/Documents/NEON_crown_maps/tests/test_dask.py',
                            [('test_dask',
                              0,
                              None,
                              None,
                              None,
                              1580170653,
                              25)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_LIDAR.py',
                            [('test_postprocess_CHM',
                              0,
                              None,
                              None,
                              None,
                              1584983146,
                              36)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_figures.py',
                            [('test_site_averages',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              30),
                             ('test_load_predictions',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              26),
                             ('test_counts',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              38),
                             ('test_tile_averages',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo MergeError('No common columns"\
                               " to perform merge on. Merge options: left_on"\
                               "=None, right_on=None, left_index=False, righ"\
                               "t_index=False') tblen=6>",
                               'pandas.errors.MergeError: No common columns '\
                               'to perform merge on. Merge options: left_on='\
                               'None, right_on=None, left_index=False, right'\
                               '_index=False',
                               [(u'/Users/ben/Documents/NEON_crown_maps/tests/test_figures.py',
                                 '/Users/ben/Documents/NEON_crown_maps/tests'\
                                 '/test_figures.py',
                                 35,
                                 'test_tile_averages',
                                 None,
                                 ' results = figures.tile_averages(daskdf)'),
                                (u'/Users/ben/Documents/NEON_crown_maps/figures.py',
                                 '/Users/ben/Documents/NEON_crown_maps/figur'\
                                 'es.py',
                                 50,
                                 'tile_averages',
                                 None,
                                 '    results = average_height_area.merge(nt'\
                                 'rees)'),
                                (u'/Users/ben/miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/frame.py',
                                 '/Users/ben/miniconda3/envs/crowns/lib/pyth'\
                                 'on3.7/site-packages/pandas/core/frame.py',
                                 7296,
                                 'merge',
                                 None,
                                 '        return merge('),
                                (u'/Users/ben/miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/reshape/merge.py',
                                 '/Users/ben/miniconda3/envs/crowns/lib/pyth'\
                                 'on3.7/site-packages/pandas/core/reshape/me'\
                                 'rge.py',
                                 85,
                                 'merge',
                                 None,
                                 '    op = _MergeOperation('),
                                (u'/Users/ben/miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/reshape/merge.py',
                                 '/Users/ben/miniconda3/envs/crowns/lib/pyth'\
                                 'on3.7/site-packages/pandas/core/reshape/me'\
                                 'rge.py',
                                 619,
                                 '__init__',
                                 None,
                                 '        self._validate_specification()'),
                                (u'/Users/ben/miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/reshape/merge.py',
                                 '/Users/ben/miniconda3/envs/crowns/lib/pyth'\
                                 'on3.7/site-packages/pandas/core/reshape/me'\
                                 'rge.py',
                                 1197,
                                 '_validate_specification',
                                 None,
                                 '                    raise MergeError(')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1584997733,
                              34),
                             ('test_treefalls',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              42),
                             ('test_load_shp',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              20),
                             ('test_averages',
                              'running',
                              None,
                              None,
                              None,
                              None,
                              None)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_hard_mining.py',
                            [('test_run',
                              0,
                              None,
                              None,
                              None,
                              1580681251,
                              3)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_predict.py',
                            [('test_predict_tilelist',
                              2,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo IndexError('too many indices "\
                               "for array') tblen=2>",
                               'IndexError: too many indices for array',
                               [(u'/Users/ben/Documents/NEON_crown_maps/tests/test_predict.py',
                                 '/Users/ben/Documents/NEON_crown_maps/tests'\
                                 '/test_predict.py',
                                 34,
                                 'record_list',
                                 None,
                                 '        record = tfrecords.create_tfrecord'\
                                 's(tile_path=tif,patch_size=patch_size, sav'\
                                 'edir="output")'),
                                (u'/Users/ben/Documents/NEON_crown_maps/utils/tfrecords.py',
                                 '/Users/ben/Documents/NEON_crown_maps/utils'\
                                 '/tfrecords.py',
                                 75,
                                 'create_tfrecords',
                                 None,
                                 '        crop = crop[:,:,::-1]')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1583777441,
                              43),
                             ('test_predict_tile',
                              0,
                              None,
                              None,
                              None,
                              1583771701,
                              39)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_sampling.py',
                            [('test_simulate_plot',
                              0,
                              None,
                              None,
                              None,
                              1585693717,
                              11)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_tfrecords.py',
                            [('test_create_tfrecords',
                              0,
                              None,
                              None,
                              None,
                              1585176519,
                              34),
                             ('test_create_dataset',
                              0,
                              None,
                              None,
                              None,
                              1585176519,
                              38)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_analysis.py',
                            [('test_tree_fall',
                              0,
                              None,
                              None,
                              None,
                              1584920826,
                              23),
                             ('test_match_years',
                              0,
                              None,
                              None,
                              None,
                              1584920826,
                              18)])],
                          {u'/Users/ben/Documents/NEON_crown_maps/test_dask.py': (u'Test process aborted: some tests were not run',
        1579123742)})
