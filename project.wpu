#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {loc('../../../../Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {},
                    loc('shapefile_annotation.py'): {}}
debug.exceptions-ignored = {loc('../../miniconda3/envs/test/lib/python3.7/site-packages/_pytest/_code/code.py'): {210: True},
                            loc('../../miniconda3/envs/test/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1131: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'NyVPHO0lKJlWFE6ZB7U3wBBhIF'\
        'xqemTE',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.214845791949817,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (2,),
        (2,
         0)],
                                 'selected-nodes': [(2,
        0)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [2,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.6476997578692494,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'weights',
                                       'fReverse': False,
                                       'fSearchText': u'load_model',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'.tif',
                                       'fReverse': False,
                                       'fSearchText': u'10',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 4L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['c'\
        'rop\n',
        'import matplotlib\n',
        'pyplot.imshow(crop[:,:,::-1])\n',
        'filename\n',
        'pyplot.imshow(numpy_image)\n',
        'from matplotlib import pyplot\n',
        'pyplot.imshow(crop)\n',
        'pyplot.show()\n',
        'filename = os.path.join(savedir,"{}_{}.jpg".format(image_name,index'\
        '))\n',
        'cv2.imwrite(img=crop,filename=filename)\n',
        'iterator\n',
        '729\n',
        '729/20\n',
        '729//2\n',
        '729/4\n',
        '729/8\n',
        '729/9\n',
        '729/15\n',
        '729/16\n',
        '729/14\n',
        '729/13\n',
        '729/12\n',
        '729/11\n',
        '729/10\n',
        '729/32\n',
        '729/31\n',
        'for x in np.arange(32): 729/32\n',
        'for x in np.arange(32): 729/x\n',
        '729/27\n',
        'batch_size\n',
        'record_boxes.shape\n',
        'record_boxes\n',
        'metadata\n',
        'n = record_boxes.shape[0]\n',
        'n\n',
        'counter\n',
        'np.arange(n)\n',
        'image[0,:,:,:].shape\n',
        'tf_image\n',
        '    np.testing.assert_equal(deepforest_image,tf_image)\n',
        'if not np.testing.assert_equal(deepforest_image,tf_image):\n    fig'\
        ',axes = plt.subplots(1,2)\n    axes = axes.flatten()\n    \n    axe'\
        's[0].imshow(deepforest_image)\n    axes[0].set_title("DeepForest")'\
        '\n    \n    axes[1].imshow(tf_image)\n    axes[1].set_tile("Tfrecor'\
        'ds")\n\n',
        'from matplotlib import pyplot as plt\n',
        'if not np.array_equal(deepforest_image,tf_image):\n    fig,axes = p'\
        'lt.subplots(1,2)\n    axes = axes.flatten()\n    \n    axes[0].imsh'\
        'ow(deepforest_image)\n    axes[0].set_title("DeepForest")\n    \n  '\
        '  axes[1].imshow(tf_image)\n    axes[1].set_tile("Tfrecords")\n\n',
        'if not np.array_equal(deepforest_image,tf_image):\n    fig,axes = p'\
        'lt.subplots(1,2)\n    axes = axes.flatten()\n    \n    axes[0].imsh'\
        'ow(deepforest_image)\n    axes[0].set_title("DeepForest")\n    \n  '\
        '  axes[1].imshow(tf_image)\n    axes[1].set_title("Tfrecords")\n\n',
        'plt.show()\n',
        'if not np.array_equal(deepforest_image,tf_image):\n    fig,axes = p'\
        'lt.subplots(1,2)\n    axes = axes.flatten()\n    \n    axes[0].imsh'\
        'ow(deepforest_image)\n    axes[0].set_title("DeepForest")\n    \n  '\
        '  axes[1].imshow(tf_image[:,:,::-1])\n    axes[1].set_title("Tfreco'\
        'rds")\n    plt.show()\n\n',
        'keras_retinanet_image.__path__\n',
        'keras_retinanet_image.__file__\n',
        'plt.imshow(crop)\n',
        'import matplotlib\nmatplotlib.use("MacOSX")\nfrom matplotlib import'\
        ' pyplot as plt\n\n',
        'tile_path\n',
        "tf_image_saved = cv2.imread(\"'output/OSBS_029_0.jpg'\")\n",
        'axes[2].imshow(tf_image_saved)\n',
        'tf_image_saved\n',
        'os.getcwd()\n',
        "tf_image_saved = Image.open(\"'output/OSBS_029_0.jpg'\")\n",
        'np.diff(deepforest_image,tf_image,2)\n',
        'import scipy\n',
        'scikit-image\n',
        'impoirt scikit-image\n',
        'impoirt scikit_image\n',
        'import skimage\n',
        'deepforest_image.dtype\n',
        'tf_image.dtype\n',
        "tf_image.astype('int')\n",
        "score, diff = measure.compare_ssim(deepforest_image.astype('int'),t"\
        "f_image.astype('int'),multichannel=True)\n",
        'deepforest_image.shape\n',
        'tf_image.shape\n',
        'tf_image.astype("int")\n',
        "deepforest_image.astype('int')\n",
        'len(a)\n',
        "a = measure.compare_ssim(deepforest_image.astype('int'),tf_image.as"\
        "type('int'),multichannel=True)\n",
        'a = measure.compare_ssim(deepforest_image,tf_image,multichannel=Tru'\
        'e)\n',
        'a\n',
        'score, diff = measure.compare_ssim(deepforest_image,tf_image,multic'\
        'hannel=True, full=True)\n']},
                       'launch-id': None,
                       'sel-line': 17L,
                       'sel-line-start': 1166L,
                       'selection_end': 1166L,
                       'selection_start': 1166L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['label_to_name\n',
        "lidar_list = ['/orange/ewhite/NeonData/WOOD/DP1.30003.001/2017/Full"\
        "Site/D09/2017_WOOD_2/L1/DiscreteLidar/ClassifiedPointCloud/NEON_D09"\
        "_WOOD_DP1_483000_5220000_classified_point_cloud.laz', '/orange/ewhi"\
        "te/NeonData/WOOD/DP1.30003.001/2017/FullSite/D09/2017_WOOD_2/L1/Dis"\
        "creteLidar/ClassifiedPointCloud/NEON_D09_WOOD_DP1_482000_5219000_cl"\
        "assified_point_cloud.laz', '/orange/ewhite/NeonData/WOOD/DP1.30003."\
        "001/2017/FullSite/D09/2017_WOOD_2/L1/DiscreteLidar/ClassifiedPointC"\
        "loud/NEON_D09_WOOD_DP1_482000_5222000_classified_point_cloud.laz', "\
        "'/orange/ewhite/NeonData/WOOD/DP1.30003.001/2017/FullSite/D09/2017_"\
        "WOOD_2/L1/DiscreteLidar/ClassifiedPointCloud/NEON_D09_WOOD_DP1_4810"\
        "00_5219000_classified_point_cloud.laz']\n",
        'import os\n',
        'import re\n',
        'geo_index = [re.search("(\\d+_\\d+)_image",x).group(1) for x in lid'\
        'ar_name]\n',
        'geo_index = [re.search("(\\d+_\\d+)_classified",x).group(1) for x i'\
        'n lidar_name]\n',
        "shp = '/orange/ewhite/b.weinstein/NEON/predictions/2019_KONZ_5_7030"\
        "00_4329000_image.shp'\n",
        'geo_index = re.search("(\\d+_\\d+)_image",shp).group(1)\n',
        'geo_index\n',
        'geo_index \n',
        "a.append('/orange/ewhite/NeonData/WOOD/DP1.30003.001/2017/FullSite/"\
        "D09/2017_WOOD_2/L1/DiscreteLidar/ClassifiedPointCloud/NEON_D09_WOOD"\
        "_DP1_703000_4329000_classified_point_cloud.laz')\n",
        "lidar_list.append('/orange/ewhite/NeonData/WOOD/DP1.30003.001/2017/"\
        "FullSite/D09/2017_WOOD_2/L1/DiscreteLidar/ClassifiedPointCloud/NEON"\
        "_D09_WOOD_DP1_703000_4329000_classified_point_cloud.laz')\n",
        'lidar_name\n',
        'lidar_name = [os.path.splitext(os.path.basename(x))[0] for x in lid'\
        'ar_list]\n',
        'index = np.where([geo_index in x for x in lidar_name])\n',
        'laz_path = lidar_list[index]\n',
        'len(index)\n',
        'lidar_list[[1,2]]\n',
        'lidar_list[[1]\n[]\n',
        'raise ValueError("SHP file {} matches more than one .laz file".form'\
        'at(shp))\n',
        'index[0]\n',
        'list(index)[0]\n',
        'list(index)\n',
        'index\n',
        'list(index)[0][0]\n',
        'str(2019)\n',
        'from deepforest import deepforest\n',
        'model = deepforest.deepforest',
        'model = deepforest.deepforest()\n',
        'model.use_release()\n',
        'model.training_model\n',
        'model.train_model\n',
        'model.prediction_model\n',
        'model.model\n',
        'model.model.layers\n',
        'len(model.model.layers)\n',
        'len(model.prediction_model.layers)\n',
        'from deepforest import deepforest\noriginal = deepforest.deepforest'\
        '()\noriginal.model\nprint("The current model has {} layers".format('\
        'len(original.model.layers)))\n\n',
        'from deepforest import deepforest\noriginal = deepforest.deepforest'\
        '()\n#Load current weights\noriginal.use_release()\noriginal.model\n'\
        'print("The current model has {} layers".format(len(original.model.l'\
        'ayers)))\n\n',
        'original.model.layers.name\n',
        'original.model.layers\n',
        'x.name for x in original.model.layers\n',
        '[x.name for x in original.model.layers]\n',
        'import keras_resnet\n',
        'import keras_resnet.models\n',
        'import keras\n',
        'inputs = keras.layers.Input(shape=(None, None, 3))\n',
        'resnet = keras_resnet.models.ResNet50(inputs, include_top=False, fr'\
        'eeze_bn=True)\n',
        'backbone_layers=resnet.outputs[1:]\n',
        'backbone_layers\n',
        'resnet.outputs\n',
        'len(resnet.outputs)\n',
        'from keras.utils import plot_model\n',
        "plot_model(resnet, to_file='/Users/Ben/Desktop/resnet.png')\n",
        'np.array([0,1,2]\n()\n',
        'import numpy as np\n',
        'np.array[0,1,2]\n',
        'np.array([0,1,2])\n',
        'a=np.array([0,1,2])\n',
        'a[[1,2,3]]\n',
        'a[[1,3]]\n',
        'a[[1]]\n',
        'a[[1,2]]\n',
        'a[[1,2]][:4]\n',
        "\"'/orange/ewhite/NeonData/CUPE/DP3.30010.001/2018/FullSite/D04/201"\
        "8_CUPE_1/L3/Camera/Mosaic/2018_CUPE_1_713000_2001000_image.tif'\"\n",
        "'/orange/ewhite/NeonData/CUPE/DP3.30010.001/2018/FullSite/D04/2018_"\
        "CUPE_1/L3/Camera/Mosaic/2018_CUPE_1_713000_2001000_image.tif'\n",
        "a-'/orange/ewhite/NeonData/CUPE/DP3.30010.001/2018/FullSite/D04/201"\
        "8_CUPE_1/L3/Camera/Mosaic/2018_CUPE_1_713000_2001000_image.tif'\n",
        "a='/orange/ewhite/NeonData/CUPE/DP3.30010.001/2018/FullSite/D04/201"\
        "8_CUPE_1/L3/Camera/Mosaic/2018_CUPE_1_713000_2001000_image.tif'\n",
        'a.contains("CLBJ")\n',
        '"CUPE" in a\n',
        '[x for x in tile_list if target in x]\n',
        'a=[a]\n',
        'a\n',
        'target=\n',
        'target="CUPE"\n',
        '[x for x in a if target in x]\n',
        'import deepforest\n',
        'from deepforest import keras_retinanet\n',
        'import keras_retinanet\n',
        'import skimage\n',
        'skimage.measure\n',
        'from skimage import measure\n',
        'jon is None\n']},
                       'launch-id': None,
                       'sel-line': 9L,
                       'sel-line-start': 489L,
                       'selection_end': 489L,
                       'selection_start': 489L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('SLURM/pytest.sbatch'),
        {'attrib-starts': [],
         'first-line': 10L,
         'folded-linenos': [],
         'sel-line': 14L,
         'sel-line-start': 525L,
         'selection_end': 728L,
         'selection_start': 525L,
         'zoom': 0L},
        1582306394.678295],
        [loc('SLURM/test.sbatch'),
         {'attrib-starts': [],
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 17L,
          'sel-line-start': 591L,
          'selection_end': 591L,
          'selection_start': 591L,
          'zoom': 0L},
         1582306395.835598],
        [loc('SLURM/hard_mining.sbatch'),
         {'attrib-starts': [],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1582306402.639453],
        [loc('SLURM/generate.sbatch'),
         {'attrib-starts': [],
          'first-line': 8L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 693L,
          'selection_end': 780L,
          'selection_start': 780L,
          'zoom': 0L},
         1582306415.984893],
        [loc('SLURM/hard_mining.sbatch'),
         {'attrib-starts': [],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 298L,
          'selection_end': 351L,
          'selection_start': 351L,
          'zoom': 0L},
         1582306432.167399],
        [loc('Profiling.ipynb'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1582306442.702924],
        [loc('SLURM/test.sbatch'),
         {'attrib-starts': [],
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 17L,
          'sel-line-start': 591L,
          'selection_end': 591L,
          'selection_start': 591L,
          'zoom': 0L},
         1582306445.179807],
        [loc('../../miniconda3/envs/test/lib/python3.7/site-packages/matplotlib/image.py'),
         {'attrib-starts': [('_ImageBase',
                             176),
                            ('_ImageBase.set_data',
                             662)],
          'first-line': 670L,
          'folded-linenos': [],
          'sel-line': 684L,
          'sel-line-start': 25905L,
          'selection_end': 25905L,
          'selection_start': 25905L,
          'zoom': 0L},
         1582306447.442339],
        [loc('Profiling.ipynb'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1582306447.443998],
        [loc('main.py'),
         {'attrib-starts': [],
          'first-line': 112L,
          'folded-linenos': [],
          'sel-line': 122L,
          'sel-line-start': 4098L,
          'selection_end': 4102L,
          'selection_start': 4102L,
          'zoom': 0L},
         1582306447.445665],
        [loc('SLURM/hard_mining.sbatch'),
         {'attrib-starts': [],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 298L,
          'selection_end': 351L,
          'selection_start': 351L,
          'zoom': 0L},
         1582306447.447283],
        [loc('environment.yml'),
         {'attrib-starts': [],
          'first-line': 1L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 107L,
          'selection_end': 124L,
          'selection_start': 124L,
          'zoom': 0L},
         1582306447.448829],
        [loc('SLURM/predict.sbatch'),
         {'attrib-starts': [],
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 570L,
          'selection_end': 825L,
          'selection_start': 570L,
          'zoom': 0L},
         1582306447.451549],
        [loc('main.py'),
         {'attrib-starts': [('run_lidar',
                             82)],
          'first-line': 86L,
          'folded-linenos': [],
          'sel-line': 96L,
          'sel-line-start': 3362L,
          'selection_end': 3384L,
          'selection_start': 3384L,
          'zoom': 0L},
         1582334397.949724],
        [loc('main.py'),
         {'attrib-starts': [('run_lidar',
                             82)],
          'first-line': 89L,
          'folded-linenos': [],
          'sel-line': 97L,
          'sel-line-start': 3385L,
          'selection_end': 3440L,
          'selection_start': 3439L,
          'zoom': 0L},
         1582334398.056712],
        [loc('main.py'),
         {'attrib-starts': [],
          'first-line': 139L,
          'folded-linenos': [],
          'sel-line': 149L,
          'sel-line-start': 5116L,
          'selection_end': 5182L,
          'selection_start': 5181L,
          'zoom': 0L},
         1582334399.192837],
        [loc('main.py'),
         {'attrib-starts': [('find_files',
                             19)],
          'first-line': 14L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 513L,
          'selection_end': 527L,
          'selection_start': 517L,
          'zoom': 0L},
         1582334687.052687],
        [loc('main.py'),
         {'attrib-starts': [('lookup_rgb_path',
                             8)],
          'first-line': 11L,
          'folded-linenos': [],
          'sel-line': 17L,
          'sel-line-start': 488L,
          'selection_end': 507L,
          'selection_start': 507L,
          'zoom': 0L},
         1582334816.869297],
        [loc('main.py'),
         {'attrib-starts': [],
          'first-line': 123L,
          'folded-linenos': [],
          'sel-line': 133L,
          'sel-line-start': 4471L,
          'selection_end': 4491L,
          'selection_start': 4489L,
          'zoom': 0L},
         1582334816.973081],
        [loc('main.py'),
         {'attrib-starts': [],
          'first-line': 160L,
          'folded-linenos': [],
          'sel-line': 142L,
          'sel-line-start': 4807L,
          'selection_end': 4835L,
          'selection_start': 4833L,
          'zoom': 0L},
         1582334830.479154]],
        20),
        'current-loc': loc('utils/tfrecords.py'),
        'editor-state-list': [(loc('main.py'),
                               {'attrib-starts': [],
                                'first-line': 160L,
                                'folded-linenos': [],
                                'sel-line': 142L,
                                'sel-line-start': 4807L,
                                'selection_end': 4835L,
                                'selection_start': 4833L,
                                'zoom': 0L}),
                              (loc('utils/tfrecords.py'),
                               {'attrib-starts': [('create_tfrecords',
        31)],
                                'first-line': 61L,
                                'folded-linenos': [],
                                'sel-line': 59L,
                                'sel-line-start': 2173L,
                                'selection_end': 2177L,
                                'selection_start': 2177L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('main.py'),
         loc('utils/tfrecords.py')]),
                               'open_files': [u'main.py',
        u'utils/tfrecords.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.44682752457551383},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1440,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('utils/tfrecords.py'),
                           loc('main.py')]
guimgr.visual-state = {loc('../DeepForest/.travis.yml'): {'attrib-starts': [],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 186L,
        'selection_end': 233L,
        'selection_start': 233L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/deepforest.py'): {'attr'\
        'ib-starts': [('deepforest',
                       37),
                      ('deepforest.predict_tile',
                       298)],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 312L,
        'sel-line-start': 14907L,
        'selection_end': 15526L,
        'selection_start': 14907L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/predict.py'): {'attrib-'\
        'starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 228L,
        'selection_end': 293L,
        'selection_start': 228L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/preprocess.py'): {'attr'\
        'ib-starts': [('split_raster',
                       115)],
        'first-line': 150L,
        'folded-linenos': [],
        'sel-line': 161L,
        'sel-line-start': 6779L,
        'selection_end': 6796L,
        'selection_start': 6787L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/retinanet_train.py'): {'a'\
        'ttrib-starts': [('create_generators',
                          179)],
        'first-line': 207L,
        'folded-linenos': [],
        'sel-line': 220L,
        'sel-line-start': 8520L,
        'selection_end': 8544L,
        'selection_start': 8537L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/tfrecords.py'): {'attri'\
        'b-starts': [('_parse_fn',
                      164)],
        'first-line': 162L,
        'folded-linenos': [],
        'sel-line': 167L,
        'sel-line-start': 7432L,
        'selection_end': 7448L,
        'selection_start': 7448L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/utilities.py'): {'attri'\
        'b-starts': [('use_release',
                      52)],
        'first-line': 80L,
        'folded-linenos': [],
        'sel-line': 52L,
        'sel-line-start': 1487L,
        'selection_end': 1502L,
        'selection_start': 1491L,
        'zoom': 0L},
                       loc('../DeepForest/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('parse_args',
                          371)],
        'first-line': 406L,
        'folded-linenos': [],
        'sel-line': 406L,
        'sel-line-start': 15687L,
        'selection_end': 15847L,
        'selection_start': 15687L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_preprocess.py'): {'attr'\
        'ib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_utilities.py'): {'attri'\
        'b-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest_Model/GenerateAnchors.py'): {'attr'\
        'ib-starts': [('generate_pretraining',
                       14)],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 484L,
        'selection_end': 525L,
        'selection_start': 518L,
        'zoom': 0L},
                       loc('../DeepForest_Model/dask_utility.py'): {'attrib-'\
        'starts': [],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 64L,
        'selection_end': 105L,
        'selection_start': 105L,
        'zoom': 0L},
                       loc('../DeepForest_Model/generate.py'): {'attrib-star'\
        'ts': [],
        'first-line': 196L,
        'folded-linenos': [],
        'sel-line': 231L,
        'sel-line-start': 9973L,
        'selection_end': 9973L,
        'selection_start': 9973L,
        'zoom': 0L},
                       loc('LIDAR.py'): {'attrib-starts': [('find_lidar_file',
        18)],
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 356L,
        'selection_end': 360L,
        'selection_start': 356L,
        'zoom': 0L},
                       loc('Profiling.ipynb'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('SLURM/generate.sbatch'): {'attrib-starts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 693L,
        'selection_end': 780L,
        'selection_start': 780L,
        'zoom': 0L},
                       loc('SLURM/hard_mining.sbatch'): {'attrib-starts': [],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 298L,
        'selection_end': 351L,
        'selection_start': 351L,
        'zoom': 0L},
                       loc('SLURM/predict.sbatch'): {'attrib-starts': [],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 570L,
        'selection_end': 825L,
        'selection_start': 570L,
        'zoom': 0L},
                       loc('SLURM/pytest.sbatch'): {'attrib-starts': [],
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 525L,
        'selection_end': 728L,
        'selection_start': 525L,
        'zoom': 0L},
                       loc('SLURM/test.sbatch'): {'attrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 591L,
        'selection_end': 591L,
        'selection_start': 591L,
        'zoom': 0L},
                       loc('__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('dask_example.py'): {'attrib-starts': [],
        'first-line': 69L,
        'folded-linenos': [],
        'sel-line': 82L,
        'sel-line-start': 2611L,
        'selection_end': 2645L,
        'selection_start': 2645L,
        'zoom': 0L},
                       loc('dask_small.py'): {'attrib-starts': [('load_tenso'\
        'rflow',
        25)],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 653L,
        'selection_end': 826L,
        'selection_start': 653L,
        'zoom': 0L},
                       loc('generate.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 20L,
        'selection_end': 51L,
        'selection_start': 51L,
        'zoom': 0L},
                       loc('generate_crops.py'): {'attrib-starts': [('genera'\
        'te_training',
        14)],
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2484L,
        'selection_end': 2559L,
        'selection_start': 2559L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [],
        'first-line': 112L,
        'folded-linenos': [],
        'sel-line': 122L,
        'sel-line-start': 4098L,
        'selection_end': 4102L,
        'selection_start': 4102L,
        'zoom': 0L},
                       loc('predict.py'): {'attrib-starts': [('predict_tiles',
        43)],
        'first-line': 58L,
        'folded-linenos': [],
        'sel-line': 70L,
        'sel-line-start': 3056L,
        'selection_end': 3121L,
        'selection_start': 3097L,
        'zoom': 0L},
                       loc('scratch.py'): {'attrib-starts': [],
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 936L,
        'selection_end': 965L,
        'selection_start': 965L,
        'zoom': 0L},
                       loc('start_cluster.py'): {'attrib-starts': [('start_t'\
        'unnel',
        19)],
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 952L,
        'selection_end': 974L,
        'selection_start': 974L,
        'zoom': 0L},
                       loc('test_dask.py'): {'attrib-starts': [('add',
        23)],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 443L,
        'selection_end': 459L,
        'selection_start': 459L,
        'zoom': 0L},
                       loc('test_start_cluster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 139L,
        'selection_end': 210L,
        'selection_start': 180L,
        'zoom': 0L},
                       loc('tests/__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_LIDAR.py'): {'attrib-starts': [('test'\
        '_postprocess',
        41)],
        'first-line': 36L,
        'folded-linenos': [],
        'sel-line': 51L,
        'sel-line-start': 1381L,
        'selection_end': 1407L,
        'selection_start': 1407L,
        'zoom': 0L},
                       loc('tests/test_dask.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 47L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_predict.py'): {'attrib-starts': [('te'\
        'st_predict_tile',
        38)],
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 41L,
        'sel-line-start': 1137L,
        'selection_end': 1141L,
        'selection_start': 1141L,
        'zoom': 0L},
                       loc('tests/test_start_cluster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 85L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_tfrecords.py'): {'attrib-starts': [('t'\
        'est_create_tfrecords',
        19)],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 411L,
        'selection_end': 459L,
        'selection_start': 443L,
        'zoom': 0L},
                       loc('tfrecords.py'): {'attrib-starts': [('create_tens'\
        'ors',
        111)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 113L,
        'sel-line-start': 3884L,
        'selection_end': 3888L,
        'selection_start': 3888L,
        'zoom': 0L},
                       loc('utils/tfrecords.py'): {'attrib-starts': [('creat'\
        'e_tfrecords',
        26)],
        'first-line': 60L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 1324L,
        'selection_end': 1335L,
        'selection_start': 1335L,
        'zoom': 0L},
                       loc('../NeonTreeEvaluation/annotations/2018_OSBS_4_405000_3286000_image.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../TreeDemo/TreeDemo/Predict_Trees.py'): {'attri'\
        'b-starts': [('Tree_Model',
                      6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 134L,
        'selection_end': 151L,
        'selection_start': 151L,
        'zoom': 0L},
                       loc('../TreeDemo/TreeDemo/environment.yml'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 121L,
        'selection_end': 129L,
        'selection_start': 129L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('create_models',
                          77)],
        'first-line': 115L,
        'folded-linenos': [],
        'sel-line': 107L,
        'sel-line-start': 4157L,
        'selection_end': 4204L,
        'selection_start': 4189L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/image.py'): {'a'\
        'ttrib-starts': [('preprocess_image',
                          35)],
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 56L,
        'sel-line-start': 1845L,
        'selection_end': 1860L,
        'selection_start': 1860L,
        'zoom': 0L},
                       loc('../../Dropbox/Everglades/imagery/q__delivery_2015_1Metadata_FGDC_2015_Collier.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 237L,
        'selection_end': 263L,
        'selection_start': 259L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/Drone/RP_2015_P1.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/Drone/RP_2015_P6.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 131L,
        'selection_end': 154L,
        'selection_start': 154L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/multiyear/annotations/ABBY_063.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/multiyear/annotations/BONA_018.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [('open',
                          2769)],
        'first-line': 2803L,
        'folded-linenos': [],
        'sel-line': 2813L,
        'sel-line-start': 95395L,
        'selection_end': 95448L,
        'selection_start': 95395L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module',
                          419),
                         ('Module._importtestmodule',
                          487)],
        'first-line': 513L,
        'folded-linenos': [],
        'sel-line': 526L,
        'sel-line-start': 19577L,
        'selection_end': 19613L,
        'selection_start': 19613L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/fiona/collection.py'): {'a'\
        'ttrib-starts': [('Collection',
                          25),
                         ('Collection.__init__',
                          34)],
        'first-line': 51L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 2725L,
        'selection_end': 2725L,
        'selection_start': 2725L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/keras/engine/training_utils.py'): {'a'\
        'ttrib-starts': [('check_num_samples',
                          530)],
        'first-line': 559L,
        'folded-linenos': [],
        'sel-line': 570L,
        'sel-line-start': 23889L,
        'selection_end': 23889L,
        'selection_start': 23889L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          122),
                         ('NDFrame.__getattr__',
                          5161)],
        'first-line': 5167L,
        'folded-linenos': [],
        'sel-line': 5178L,
        'sel-line-start': 171370L,
        'selection_end': 171370L,
        'selection_start': 171370L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/rtree/index.py'): {'a'\
        'ttrib-starts': [('Index',
                          92),
                         ('Index.get_coordinate_pointers',
                          291)],
        'first-line': 309L,
        'folded-linenos': [],
        'sel-line': 319L,
        'sel-line-start': 10780L,
        'selection_end': 10814L,
        'selection_start': 10814L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/tensorflow/python/client/session.py'): {'a'\
        'ttrib-starts': [('BaseSession',
                          620),
                         ('BaseSession._do_call',
                          1353)],
        'first-line': 1364L,
        'folded-linenos': [],
        'sel-line': 1369L,
        'sel-line-start': 52327L,
        'selection_end': 52327L,
        'selection_start': 52327L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/tensorflow/python/framework/ops.py'): {'a'\
        'ttrib-starts': [('Graph',
                          3001),
                         ('Graph._as_graph_element_locked',
                          3797)],
        'first-line': 3858L,
        'folded-linenos': [],
        'sel-line': 3874L,
        'sel-line-start': 139080L,
        'selection_end': 139080L,
        'selection_start': 139080L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor/lib/python3.6/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor/lib/python3.6/site-packages/fiona/collection.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/laspy/base.py'): {'a'\
        'ttrib-starts': [('DataProvider',
                          93),
                         ('DataProvider.point_map',
                          150)],
        'first-line': 161L,
        'folded-linenos': [],
        'sel-line': 175L,
        'sel-line-start': 6481L,
        'selection_end': 6481L,
        'selection_start': 6481L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          150),
                         ('NDFrame.__getattr__',
                          5256)],
        'first-line': 5261L,
        'folded-linenos': [],
        'sel-line': 5267L,
        'sel-line-start': 176020L,
        'selection_end': 176050L,
        'selection_start': 176050L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/tensorflow/python/client/session.py'): {'a'\
        'ttrib-starts': [('BaseSession',
                          620),
                         ('BaseSession._do_call',
                          1353)],
        'first-line': 1355L,
        'folded-linenos': [],
        'sel-line': 1368L,
        'sel-line-start': 52257L,
        'selection_end': 52326L,
        'selection_start': 52257L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/sre_parse.py'): {'a'\
        'ttrib-starts': [('_parse',
                          468)],
        'first-line': 635L,
        'folded-linenos': [],
        'sel-line': 644L,
        'sel-line-start': 22530L,
        'selection_end': 22530L,
        'selection_start': 22530L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/test/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'10',
                         u'find_files',
                         u'n',
                         u'~/logs/ -lt | head',
                         u'min',
                         u'sample',
                         u're',
                         u'non_max',
                         u'cv2',
                         u'jpg',
                         u'jopg',
                         u'create_tf_example',
                         u'image/width',
                         u'predict_tile',
                         u'while',
                         u'batch_size',
                         u'dataset',
                         u'preproccess',
                         u'patch_overlap',
                         u'image_size']
testing.stored-results = (1,
                          [(u'/Users/ben/Documents/NEON_crown_maps/tests/test_predict.py',
                            [('test_predict_tilelist',
                              0,
                              None,
                              None,
                              None,
                              1582135436,
                              42),
                             ('test_predict_tile',
                              0,
                              None,
                              None,
                              None,
                              1582135436,
                              38)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_tfrecords.py',
                            [('test_create_tfrecords',
                              0,
                              None,
                              None,
                              None,
                              1582135222,
                              34),
                             ('test_create_dataset',
                              0,
                              None,
                              None,
                              None,
                              1582135222,
                              38)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_dask.py',
                            [('test_dask',
                              0,
                              None,
                              None,
                              None,
                              1580170653,
                              25)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_hard_mining.py',
                            [('test_run',
                              0,
                              None,
                              None,
                              None,
                              1580681251,
                              3)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_LIDAR.py',
                            [('test_load_lidar',
                              'running',
                              None,
                              None,
                              None,
                              None,
                              None),
                             ('test_postprocess',
                              'running',
                              None,
                              None,
                              None,
                              None,
                              None)])],
                          {u'/Users/ben/Documents/NEON_crown_maps/test_dask.py': (u'Test process aborted: some tests were not run',
        1579123742),
                           u'/Users/ben/Documents/NEON_crown_maps/tests/test_LIDAR.py': (u'Test process aborted: some tests were not run',
        1582082983)})
