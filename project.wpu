#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {loc('../../../../Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {}}
debug.exceptions-ignored = {loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/_code/code.py'): {209: True},
                            loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1130: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'NyVPHO0lKJlWFE6ZB7U3wBBhIF'\
        'xqemTE',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.04704652378463148,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(1,),
        (2,),
        (2,
         1),
        (3,)],
                                 'selected-nodes': [(3,
        0)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.5,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'weights',
                                       'fReverse': False,
                                       'fSearchText': u'load_model',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(0,),
        (1,),
        (2,)],
                                      'selected-nodes': [(1,
        1)],
                                      'top-node': (0,)}}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'weights',
                                       'fReverse': False,
                                       'fSearchText': u'empty',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 1389L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['b'\
        'oxes = predict.predict_tile(model, record, patch_size, raster_dir="'\
        'data/", batch_size=1)\n',
        'iterator = tfrecords.create_tensors(tfrecord, batch_size=batch_size'\
        ')        \nrecord_results = [ ]        \n\n#predict tensor - throw '\
        'error at end of record\nrecord_boxes = []\nrecord_scores = []\nreco'\
        'rd_labels = []\n\n#Iterate through tfrecord until the end\nwhile Tr'\
        'ue:\n    try:\n        box_array, score_array, label_array = model.'\
        'prediction_model.predict_on_batch(iterator)\n        record_boxes.a'\
        'ppend(box_array)        \n        record_scores.append(score_array)'\
        '\n        record_labels.append(label_array)\n    \n    except tf.er'\
        'rors.OutOfRangeError:\n        break\n\n',
        'record_boxes\n',
        'iterator\n',
        'tfrecord\n',
        'with tf.Session() as sess: a=sess.run(iterator)\n',
        'from .. import tfrecords\n',
        'from .. import predict\n',
        'os.path.dirname(os.path.abspath(__file__))\n',
        'os.path.abspath(__file__)\n',
        'boxes.columns\n',
        'raster_dir\n',
        'raster_path\n',
        'boxes.filename.unique()[0]\n',
        'raster_name = os.path.splitext(os.path.basename(boxes.filename.uniq'\
        'ue()[0]))[0]\n',
        'raster_name\n',
        'imoport os\n',
        'import os\n',
        'os.getcwd()\n',
        'boxes.is_empty\n',
        'boxes.is_empty()\n',
        'box\n',
        'metadata.window\n',
        'meta\n',
        'metadata = pd.read_csv(metadata_filename)\n',
        'df["xmax"]\n',
        'df["xmax"]=xmax\n',
        'xmax\n',
        'df = pd.DataFrame({"window":index,"xmin":xmin,"xmax":xmax,"ymin":ym'\
        'in,"ymax":ymax})\n',
        'df = pd.DataFrame.from_dict({"window":index,"xmin":xmin,"xmax":xmax'\
        ',"ymin":ymin,"ymax":ymax})\n',
        'df = pd.DataFrame.from_dict({"window":index,"xmin":xmin,"xmax":xmax'\
        ',"ymin":ymin,"ymax":ymax},orient="columns")\n',
        'd = {"window":index,"xmin":xmin,"xmax":xmax,"ymin":ymin,"ymax":ymax'\
        '}\n',
        'd\n',
        'df = pd.DataFrame.from_dict(d,orient="index")\n',
        'df = pd.DataFrame.from_dict(d,orient="columns")\n',
        'df = pd.DataFrame.from_dict(d,orient="columns",index=0)\n',
        'df = pd.DataFrame.from_dict(d,index=0)\n',
        'd = {"window":[index],"xmin":[xmin],"xmax":[xmax],"ymin":[ymin],"ym'\
        'ax":[ymax]}\n',
        'df = pd.DataFrame(d)\n',
        'import numpy as np\n',
        "assert boxes.xmin.dtype == np.dtype('float64')\n",
        'xmin, ymin, xmax, ymax = windows[index].getRect()\n',
        'ymin\n',
        'ymax\n',
        'windows[index].getRect()  \n',
        'windows[0].getRect()  \n',
        'windows[1].getRect()  \n',
        'windows[2].getRect()  \n',
        'windows[3].getRect()  \n',
        'windows[index].indices()\n',
        'metadata\n',
        'window_df = metadata[metadata.window == index]\n',
        'window_df\n',
        'window_df.xmin\n',
        'window_df.xmin + 10\n',
        'boxes\n',
        'record_results\n',
        'record_results.iloc[1]\n',
        'record_results[0].iloc[1]\n',
        'record_results[0]\n',
        'record_boxes[0]\n',
        'boxes  = record_boxes[index]\nscores  = record_scores[index]\nlabel'\
        's  = record_labels[index]\n\n',
        'labels\n',
        'df = parse_prediction(boxes, scores, labels, image_size, patch_size'\
        ')\n',
        'return results\n    \nparse_prediction(boxes, scores, labels, image'\
        '_size, patch_size):\n"""Reduce tf prediction into pandas dataframe"'\
        '""\n#for each record\nscale = float(image_size/patch_size)\n# corre'\
        'ct boxes for image scale\nboxes /= scale\n# select indices which ha'\
        've a score above the threshold\nindices = np.where(scores[0, :] > s'\
        'core_threshold)[0]\n# select those scores\nscores = scores[0][indic'\
        'es]\n# find the order with which to sort the scores\nscores_sort = '\
        'np.argsort(-scores)\n# select detections\nimage_boxes      = boxes['\
        '0, indices[scores_sort], :]\nimage_scores     = scores[scores_sort]'\
        '\nimage_labels     = labels[0, indices[scores_sort]]\nimage_detecti'\
        'ons = np.concatenate([image_boxes, np.expand_dims(image_scores, axi'\
        's=1), np.expand_dims(image_labels, axis=1)], axis=1)\ndf = pd.DataF'\
        'rame(image_detections, columns = ["xmin","ymin","xmax","ymax","scor'\
        'e","label"])\n\nreturn df\n\n',
        'boxes  = record_boxes[index]\nscores  = record_scores[index]\nlabel'\
        's  = record_labels[index]\n\ndf = parse_prediction(boxes, scores, l'\
        'abels, image_size, patch_size)\n\n',
        'boxes  = record_boxes[index]\nscores  = record_scores[index]\nlabel'\
        's  = record_labels[index]\n\ndf = parse_prediction(boxes, scores, l'\
        'abels, image_size, patch_size. score_threshold)\n\n',
        'df = parse_prediction(boxes, scores, labels, image_size, patch_size'\
        ', score_threshold)\n\n',
        'df.label = df.label.astype(int)\ndf.label = df.label.apply(lambda x'\
        ': classes[x])\ndf["filename"] = tfrecord\n\n',
        'window_df = metadata[metadata.window == index]\ndf.xmin = df.xmin +'\
        ' window_df.xmin\ndf.xmax = df.xmax + window_df.xmin\ndf.ymin = df.y'\
        'min + window_df.ymin\ndf.ymax = df.ymax + window_df.ymin\n\n',
        'window_df.ymin\n',
        'df = parse_prediction(boxes, scores, labels, image_size, patch_size'\
        ', score_threshold)\n',
        'df\n',
        'df.xmin + window_df.xmin\n',
        'window_df.xmin.values.values\n',
        'window_df.xmin.values.value\n',
        'window_df.xmin.values\n',
        'window_df.xmin.values[0]\n',
        'index\n',
        'index=2\n',
        'metadata[metadata.window == index].values\n',
        'metadata.columns\n',
        'window_df = metadata[metadata.window == index]\nxmin = window_df.xm'\
        'in.values[0]\nymin = window_df.ymin.values[0]\ndf.xmin = df.xmin + '\
        'xmin\ndf.xmax = df.xmax + xmin\ndf.ymin = df.ymin + ymin\ndf.ymax ='\
        ' df.ymax + ymin\n\n',
        'boxes.xmin\n',
        'boxes.head()\n',
        'df.head()\n',
        'record_df = pd.concat(record_results)\n',
        'record_df.head()\n',
        'mosaic_df = run_non_max_suppression(record_df)\n',
        'non_max_idxs = tf.image.non_max_suppression(boxes, scores, max_outp'\
        'ut_size=max_output_size, iou_threshold=iou_threshold)\n',
        'non_max_idxs\n',
        'new_boxes = tf.cast(tf.gather(boxes, non_max_idxs), tf.float32)\n',
        'new_scores = tf.gather(scores, non_max_idxs)\n',
        'new_labels =  tf.gather(labels, non_max_idxs)\n',
        'new_boxes, new_scores, new_labels = sess.run([new_boxes, new_scores'\
        ', new_labels])\n',
        'image_detections = np.concatenate([new_boxes, np.expand_dims(new_sc'\
        'ores, axis=1), np.expand_dims(new_labels, axis=1)], axis=1)\n',
        'mosaic_df = pd.DataFrame(image_detections,columns=["xmin","ymin","x'\
        'max","ymax","score","label"])\n',
        'mosaic_df.label = mosaic_df.label.str.decode("utf-8")\n',
        'print("{} predictions kept after non-max suppression".format(mosaic'\
        '_df.shape[0]))\n',
        'mosaic_df.head()\n'],
                                   u'file:/Users/ben/Documents/NEON_crown_maps/scratch.py': ["t"\
        "f.shape(tf.get_default_graph().get_tensor_by_name('MatchingFiles:0'"\
        "))[0]\n",
        'output\n',
        'output.list_files\n',
        'iterator = tfrecords.create_dataset("tests/output/OSBS_029.tfrecord'\
        '", batch_size=1)\n',
        'iterator\n',
        'dataset.size\n',
        'len(dataset)\n',
        'dataset = tfrecords.create_dataset("tests/output/OSBS_029.tfrecord"'\
        ', batch_size=1)\n',
        'dataset\n',
        'iterator = dataset.make_one_shot_iterator()\n',
        'next(dataset)\n',
        'iterator.get_next()\n',
        'next(iterator)\n',
        'body_op=lambda i: tf.Print(i, [iterator.get_next()], message="This '\
        'is sample: ")\n',
        'body_op\n']},
                       'launch-id': None,
                       'sel-line': 1406L,
                       'sel-line-start': 74717L,
                       'selection_end': 74722L,
                       'selection_start': 74722L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 37L,
                       'folded-linenos': [],
                       'history': {None: ['import tensorflow as tf\n',
        'with tf.Session() as sess: ',
        'import os\n',
        'os.getcwd()\n',
        'from utils import tfrecords\n',
        'output = tfrecords.create_dataset(list_of_tfrecords="/Users/ben/Dow'\
        'nloads/2018_JERC_4_748000_3454000_image.tfrecord", batch_size=1)\n',
        'output = tfrecords.create_dataset("/Users/ben/Downloads/2018_JERC_4'\
        '_748000_3454000_image.tfrecord", batch_size=1)\n',
        'output = tfrecords.create_dataset("tests/output/OSBS_027.tfrecord",'\
        ' batch_size=1)\n',
        'output\n',
        'output = tfrecords.create_dataset("tests/output/OSBS_029.tfrecord",'\
        ' batch_size=1)\n',
        'output.list_files("")\n',
        'output.list_files(*)\n',
        'output.list_files\n',
        'output.list_files()\n',
        'output.list_files("*")\n']},
                       'launch-id': None,
                       'sel-line': 55L,
                       'sel-line-start': 3116L,
                       'selection_end': 3137L,
                       'selection_start': 3137L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('utils/tfrecords.py'),
        {'attrib-starts': [('create_tfrecords',
                            26)],
         'first-line': 65L,
         'folded-linenos': [],
         'sel-line': 76L,
         'sel-line-start': 2660L,
         'selection_end': 2688L,
         'selection_start': 2688L,
         'zoom': 0L},
        1580172141.982537],
        [loc('../DeepForest/deepforest/deepforest.py'),
         {'attrib-starts': [('deepforest',
                             36),
                            ('deepforest.predict_tile',
                             274)],
          'first-line': 298L,
          'folded-linenos': [],
          'sel-line': 311L,
          'sel-line-start': 14563L,
          'selection_end': 14605L,
          'selection_start': 14601L,
          'zoom': 0L},
         1580172179.777269],
        [loc('utils/tfrecords.py'),
         {'attrib-starts': [('create_tfrecords',
                             26)],
          'first-line': 63L,
          'folded-linenos': [],
          'sel-line': 72L,
          'sel-line-start': 2578L,
          'selection_end': 2578L,
          'selection_start': 2578L,
          'zoom': 0L},
         1580172227.229712],
        [loc('predict.py'),
         {'attrib-starts': [('predict_tile',
                             82)],
          'first-line': 178L,
          'folded-linenos': [],
          'sel-line': 165L,
          'sel-line-start': 6701L,
          'selection_end': 6721L,
          'selection_start': 6721L,
          'zoom': 0L},
         1580172390.428197],
        [loc('tests/test_predict.py'),
         {'attrib-starts': [('record_list',
                             27)],
          'first-line': 25L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 812L,
          'selection_end': 820L,
          'selection_start': 820L,
          'zoom': 0L},
         1580172390.727202],
        [loc('tests/test_predict.py'),
         {'attrib-starts': [('test_predict_tile',
                             36)],
          'first-line': 26L,
          'folded-linenos': [],
          'sel-line': 37L,
          'sel-line-start': 895L,
          'selection_end': 927L,
          'selection_start': 915L,
          'zoom': 0L},
         1580172477.805092],
        [loc('predict.py'),
         {'attrib-starts': [('predict_tile',
                             108)],
          'first-line': 149L,
          'folded-linenos': [],
          'sel-line': 165L,
          'sel-line-start': 6664L,
          'selection_end': 6706L,
          'selection_start': 6682L,
          'zoom': 0L},
         1580173212.916253],
        [loc('../DeepForest/deepforest/deepforest.py'),
         {'attrib-starts': [('deepforest',
                             36),
                            ('deepforest.predict_tile',
                             274)],
          'first-line': 299L,
          'folded-linenos': [],
          'sel-line': 312L,
          'sel-line-start': 14606L,
          'selection_end': 14610L,
          'selection_start': 14610L,
          'zoom': 0L},
         1580173239.82441],
        [loc('utils/tfrecords.py'),
         {'attrib-starts': [('create_tfrecords',
                             26)],
          'first-line': 63L,
          'folded-linenos': [],
          'sel-line': 72L,
          'sel-line-start': 2578L,
          'selection_end': 2578L,
          'selection_start': 2578L,
          'zoom': 0L},
         1580173240.956399],
        [loc('tests/test_tfrecords.py'),
         {'attrib-starts': [('test_create_tfrecords',
                             19)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 372L,
          'selection_end': 410L,
          'selection_start': 372L,
          'zoom': 0L},
         1580173241.68405],
        [loc('tests/test_predict.py'),
         {'attrib-starts': [('test_predict_tile',
                             36)],
          'first-line': 26L,
          'folded-linenos': [],
          'sel-line': 37L,
          'sel-line-start': 895L,
          'selection_end': 927L,
          'selection_start': 915L,
          'zoom': 0L},
         1580173242.594525],
        [loc('start_cluster.py'),
         {'attrib-starts': [('start_dask_cluster',
                             30)],
          'first-line': 37L,
          'folded-linenos': [],
          'sel-line': 53L,
          'sel-line-start': 1674L,
          'selection_end': 1674L,
          'selection_start': 1674L,
          'zoom': 0L},
         1580173243.530848],
        [loc('predict.py'),
         {'attrib-starts': [('predict_tile',
                             108)],
          'first-line': 108L,
          'folded-linenos': [],
          'sel-line': 166L,
          'sel-line-start': 6704L,
          'selection_end': 6743L,
          'selection_start': 6743L,
          'zoom': 0L},
         1580173491.735673],
        [loc('tests/test_predict.py'),
         {'attrib-starts': [('record_list',
                             27)],
          'first-line': 8L,
          'folded-linenos': [],
          'sel-line': 29L,
          'sel-line-start': 631L,
          'selection_end': 652L,
          'selection_start': 652L,
          'zoom': 0L},
         1580173572.907554],
        [loc('predict.py'),
         {'attrib-starts': [('predict_tile',
                             108)],
          'first-line': 160L,
          'folded-linenos': [],
          'sel-line': 175L,
          'sel-line-start': 6938L,
          'selection_end': 6980L,
          'selection_start': 6938L,
          'zoom': 0L},
         1580173668.835296],
        [loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/reshape/concat.py'),
         {'attrib-starts': [('_Concatenator',
                             260),
                            ('_Concatenator.__init__',
                             265)],
          'first-line': 283L,
          'folded-linenos': [],
          'sel-line': 303L,
          'sel-line-start': 9203L,
          'selection_end': 9203L,
          'selection_start': 9203L,
          'zoom': 0L},
         1580173673.289211],
        [loc('predict.py'),
         {'attrib-starts': [('run_non_max_suppression',
                             19)],
          'first-line': 24L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1242L,
          'selection_end': 1262L,
          'selection_start': 1262L,
          'zoom': 0L},
         1580174011.515272],
        [loc('../DeepForest/deepforest/deepforest.py'),
         {'attrib-starts': [('deepforest',
                             36),
                            ('deepforest.predict_tile',
                             274)],
          'first-line': 301L,
          'folded-linenos': [],
          'sel-line': 308L,
          'sel-line-start': 14434L,
          'selection_end': 14476L,
          'selection_start': 14476L,
          'zoom': 0L},
         1580174021.632263],
        [loc('../DeepForest/deepforest/predict.py'),
         {'attrib-starts': [('non_max_suppression',
                             84)],
          'first-line': 85L,
          'folded-linenos': [],
          'sel-line': 90L,
          'sel-line-start': 3583L,
          'selection_end': 3590L,
          'selection_start': 3590L,
          'zoom': 0L},
         1580174038.646042],
        [loc('predict.py'),
         {'attrib-starts': [('predict_tiles',
                             48)],
          'first-line': 120L,
          'folded-linenos': [],
          'sel-line': 56L,
          'sel-line-start': 2382L,
          'selection_end': 2390L,
          'selection_start': 2390L,
          'zoom': 0L},
         1580174055.246672]],
        20),
        'current-loc': loc('tests/test_predict.py'),
        'editor-state-list': [(loc('predict.py'),
                               {'attrib-starts': [('predict_tiles',
        48)],
                                'first-line': 120L,
                                'folded-linenos': [],
                                'sel-line': 56L,
                                'sel-line-start': 2382L,
                                'selection_end': 2390L,
                                'selection_start': 2390L,
                                'zoom': 0L}),
                              (loc('start_cluster.py'),
                               {'attrib-starts': [('start_dask_cluster',
        30)],
                                'first-line': 37L,
                                'folded-linenos': [],
                                'sel-line': 53L,
                                'sel-line-start': 1674L,
                                'selection_end': 1674L,
                                'selection_start': 1674L,
                                'zoom': 0L}),
                              (loc('tests/test_predict.py'),
                               {'attrib-starts': [('record_list',
        27)],
                                'first-line': 24L,
                                'folded-linenos': [],
                                'sel-line': 28L,
                                'sel-line-start': 596L,
                                'selection_end': 630L,
                                'selection_start': 630L,
                                'zoom': 0L}),
                              (loc('tests/test_tfrecords.py'),
                               {'attrib-starts': [('test_create_tfrecords',
        19)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 19L,
                                'sel-line-start': 372L,
                                'selection_end': 410L,
                                'selection_start': 372L,
                                'zoom': 0L}),
                              (loc('utils/tfrecords.py'),
                               {'attrib-starts': [('create_tfrecords',
        26)],
                                'first-line': 63L,
                                'folded-linenos': [],
                                'sel-line': 72L,
                                'sel-line-start': 2578L,
                                'selection_end': 2578L,
                                'selection_start': 2578L,
                                'zoom': 0L}),
                              (loc('../DeepForest/deepforest/deepforest.py'),
                               {'attrib-starts': [('deepforest',
        36),
        ('deepforest.predict_tile',
         274)],
                                'first-line': 301L,
                                'folded-linenos': [],
                                'sel-line': 308L,
                                'sel-line-start': 14434L,
                                'selection_end': 14476L,
                                'selection_start': 14476L,
                                'zoom': 0L}),
                              (loc('../DeepForest/deepforest/predict.py'),
                               {'attrib-starts': [('non_max_suppression',
        84)],
                                'first-line': 85L,
                                'folded-linenos': [],
                                'sel-line': 90L,
                                'sel-line-start': 3583L,
                                'selection_end': 3590L,
                                'selection_start': 3590L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('predict.py'),
         loc('start_cluster.py'),
         loc('tests/test_predict.py'),
         loc('tests/test_tfrecords.py'),
         loc('utils/tfrecords.py'),
         loc('../DeepForest/deepforest/deepforest.py'),
         loc('../DeepForest/deepforest/predict.py')]),
                               'open_files': [u'utils/tfrecords.py',
        u'tests/test_tfrecords.py',
        u'start_cluster.py',
        u'../DeepForest/deepforest/deepforest.py',
        u'../DeepForest/deepforest/predict.py',
        u'predict.py',
        u'tests/test_predict.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.2736784140969163},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1440,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('tests/test_predict.py'),
                           loc('predict.py'),
                           loc('../DeepForest/deepforest/predict.py'),
                           loc('../DeepForest/deepforest/deepforest.py'),
                           loc('start_cluster.py'),
                           loc('tests/test_tfrecords.py'),
                           loc('utils/tfrecords.py')]
guimgr.visual-state = {loc('../DeepForest/deepforest/deepforest.py'): {'attr'\
        'ib-starts': [('deepforest',
                       36),
                      ('deepforest.predict_tile',
                       274)],
        'first-line': 298L,
        'folded-linenos': [],
        'sel-line': 306L,
        'sel-line-start': 14318L,
        'selection_end': 14605L,
        'selection_start': 14318L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/predict.py'): {'attrib-'\
        'starts': [('non_max_suppression',
                    84)],
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 90L,
        'sel-line-start': 3583L,
        'selection_end': 3590L,
        'selection_start': 3590L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/preprocess.py'): {'attr'\
        'ib-starts': [('split_raster',
                       115)],
        'first-line': 150L,
        'folded-linenos': [],
        'sel-line': 161L,
        'sel-line-start': 6779L,
        'selection_end': 6796L,
        'selection_start': 6787L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/retinanet_train.py'): {'a'\
        'ttrib-starts': [('create_generators',
                          179)],
        'first-line': 207L,
        'folded-linenos': [],
        'sel-line': 220L,
        'sel-line-start': 8520L,
        'selection_end': 8544L,
        'selection_start': 8537L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/tfrecords.py'): {'attri'\
        'b-starts': [('_parse_fn',
                      164)],
        'first-line': 162L,
        'folded-linenos': [],
        'sel-line': 167L,
        'sel-line-start': 7432L,
        'selection_end': 7448L,
        'selection_start': 7448L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/utilities.py'): {'attri'\
        'b-starts': [('create_classes',
                      153)],
        'first-line': 161L,
        'folded-linenos': [],
        'sel-line': 153L,
        'sel-line-start': 5938L,
        'selection_end': 5956L,
        'selection_start': 5949L,
        'zoom': 0L},
                       loc('../DeepForest/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('parse_args',
                          371)],
        'first-line': 406L,
        'folded-linenos': [],
        'sel-line': 406L,
        'sel-line-start': 15687L,
        'selection_end': 15847L,
        'selection_start': 15687L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_preprocess.py'): {'attr'\
        'ib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_utilities.py'): {'attri'\
        'b-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest_Model/GenerateAnchors.py'): {'attr'\
        'ib-starts': [('generate_pretraining',
                       14)],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 484L,
        'selection_end': 525L,
        'selection_start': 518L,
        'zoom': 0L},
                       loc('../DeepForest_Model/dask_utility.py'): {'attrib-'\
        'starts': [],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 64L,
        'selection_end': 105L,
        'selection_start': 105L,
        'zoom': 0L},
                       loc('../DeepForest_Model/generate.py'): {'attrib-star'\
        'ts': [],
        'first-line': 196L,
        'folded-linenos': [],
        'sel-line': 231L,
        'sel-line-start': 9973L,
        'selection_end': 9973L,
        'selection_start': 9973L,
        'zoom': 0L},
                       loc('SLURM/generate.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 493L,
        'selection_end': 493L,
        'selection_start': 493L,
        'zoom': 0L},
                       loc('SLURM/pytest.sbatch'): {'attrib-starts': [],
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 590L,
        'selection_end': 622L,
        'selection_start': 622L,
        'zoom': 0L},
                       loc('__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('dask_example.py'): {'attrib-starts': [],
        'first-line': 83L,
        'folded-linenos': [],
        'sel-line': 104L,
        'sel-line-start': 3202L,
        'selection_end': 3202L,
        'selection_start': 3202L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 94L,
        'selection_end': 108L,
        'selection_start': 108L,
        'zoom': 0L},
                       loc('generate.py'): {'attrib-starts': [('find_files',
        6)],
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 129L,
        'selection_end': 296L,
        'selection_start': 129L,
        'zoom': 0L},
                       loc('generate_crops.py'): {'attrib-starts': [('genera'\
        'te_training',
        14)],
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2484L,
        'selection_end': 2559L,
        'selection_start': 2559L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 400L,
        'selection_end': 400L,
        'selection_start': 400L,
        'zoom': 0L},
                       loc('predict.py'): {'attrib-starts': [('predict_tiles',
        48)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 64L,
        'sel-line-start': 2834L,
        'selection_end': 2857L,
        'selection_start': 2857L,
        'zoom': 0L},
                       loc('scratch.py'): {'attrib-starts': [],
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 936L,
        'selection_end': 965L,
        'selection_start': 965L,
        'zoom': 0L},
                       loc('start_cluster.py'): {'attrib-starts': [('start_d'\
        'ask_cluster',
        30)],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 1766L,
        'selection_end': 1788L,
        'selection_start': 1788L,
        'zoom': 0L},
                       loc('test_dask.py'): {'attrib-starts': [('add',
        23)],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 443L,
        'selection_end': 459L,
        'selection_start': 459L,
        'zoom': 0L},
                       loc('test_start_cluster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 139L,
        'selection_end': 210L,
        'selection_start': 180L,
        'zoom': 0L},
                       loc('tests/__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_dask.py'): {'attrib-starts': [('test_'\
        'dask',
        25)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 824L,
        'selection_end': 824L,
        'selection_start': 824L,
        'zoom': 0L},
                       loc('tests/test_predict.py'): {'attrib-starts': [('te'\
        'st_predict_tilelist',
        39)],
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 1097L,
        'selection_end': 1149L,
        'selection_start': 1149L,
        'zoom': 0L},
                       loc('tests/test_start_cluster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 85L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_tfrecords.py'): {'attrib-starts': [('t'\
        'est_create_dataset',
        23)],
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 712L,
        'selection_end': 734L,
        'selection_start': 734L,
        'zoom': 0L},
                       loc('tfrecords.py'): {'attrib-starts': [('create_tens'\
        'ors',
        111)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 113L,
        'sel-line-start': 3884L,
        'selection_end': 3888L,
        'selection_start': 3888L,
        'zoom': 0L},
                       loc('utils/tfrecords.py'): {'attrib-starts': [('creat'\
        'e_tfrecords',
        25)],
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 831L,
        'selection_end': 897L,
        'selection_start': 893L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/image.py'): {'a'\
        'ttrib-starts': [('preprocess_image',
                          35)],
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 56L,
        'sel-line-start': 1845L,
        'selection_end': 1860L,
        'selection_start': 1860L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/Drone/RP_2015_P1.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/Drone/RP_2015_P6.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 131L,
        'selection_end': 154L,
        'selection_start': 154L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [('open',
                          2769)],
        'first-line': 2803L,
        'folded-linenos': [],
        'sel-line': 2813L,
        'sel-line-start': 95395L,
        'selection_end': 95448L,
        'selection_start': 95395L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module',
                          419),
                         ('Module._importtestmodule',
                          487)],
        'first-line': 513L,
        'folded-linenos': [],
        'sel-line': 526L,
        'sel-line-start': 19577L,
        'selection_end': 19613L,
        'selection_start': 19613L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/fiona/collection.py'): {'a'\
        'ttrib-starts': [('Collection',
                          25),
                         ('Collection.__init__',
                          34)],
        'first-line': 51L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 2725L,
        'selection_end': 2725L,
        'selection_start': 2725L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          122),
                         ('NDFrame.__getattr__',
                          5161)],
        'first-line': 5168L,
        'folded-linenos': [],
        'sel-line': 5178L,
        'sel-line-start': 171370L,
        'selection_end': 171370L,
        'selection_start': 171370L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/tensorflow/python/client/session.py'): {'a'\
        'ttrib-starts': [('BaseSession',
                          620),
                         ('BaseSession._do_call',
                          1353)],
        'first-line': 1364L,
        'folded-linenos': [],
        'sel-line': 1369L,
        'sel-line-start': 52327L,
        'selection_end': 52327L,
        'selection_start': 52327L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/tensorflow/python/framework/ops.py'): {'a'\
        'ttrib-starts': [('Graph',
                          3001),
                         ('Graph._as_graph_element_locked',
                          3797)],
        'first-line': 3858L,
        'folded-linenos': [],
        'sel-line': 3874L,
        'sel-line-start': 139080L,
        'selection_end': 139080L,
        'selection_start': 139080L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/crowns/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'empty',
                         u'emoty',
                         u'allow',
                         u'get',
                         u'preprocess',
                         u'windows',
                         u'predict_tile',
                         u'run_',
                         u'tfrecord',
                         u'classes',
                         u'map',
                         u'savedir',
                         u'writer',
                         u'writer.',
                         u'split_raster',
                         u'NEON_crown_maps',
                         u'compute_windows']
testing.stored-results = (1,
                          [(u'/Users/ben/Documents/NEON_crown_maps/tests/test_predict.py',
                            [('test_predict_tilelist',
                              0,
                              None,
                              None,
                              None,
                              1580170653,
                              39),
                             ('test_predict_tile',
                              0,
                              None,
                              None,
                              None,
                              1580170653,
                              35)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_tfrecords.py',
                            [('test_create_tfrecords',
                              0,
                              None,
                              None,
                              None,
                              1580170653,
                              19),
                             ('test_create_dataset',
                              0,
                              None,
                              None,
                              None,
                              1580170653,
                              23)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_dask.py',
                            [('test_dask',
                              0,
                              None,
                              None,
                              None,
                              1580170653,
                              25)])],
                          {u'/Users/ben/Documents/NEON_crown_maps/test_dask.py': (u'Test process aborted: some tests were not run',
        1579123742)})
