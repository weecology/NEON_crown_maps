#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('allometry.py'): {51L: (0,
        None,
        1,
        0)},
                     loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/generic.py'): {5271L: (0,
        None,
        1,
        0)},
                     loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/reshape/merge.py'): {2025: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../../../../Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py'): {},
                    loc('shapefile_annotation.py'): {}}
debug.exceptions-ignored = {loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/_code/code.py'): {209: True},
                            loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1130: True},
                            loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'): {495: True,
        524: True},
                            loc('../../miniconda3/envs/test/lib/python3.7/site-packages/_pytest/_code/code.py'): {210: True},
                            loc('../../miniconda3/envs/test/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1131: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'U2xwrLhOT0qENlvgKrJ9PhQLl7'\
        'D86AzX',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.26238660153524074,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(4,),
        (7,)],
                                 'selected-nodes': [(27,)],
                                 'top-node': (11,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.07021791767554475,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'as_completed',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'predict_generator',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('tests/test_create_submission.py'),
                                       loc('tests/test_rasterize.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(10,),
        (15,),
        (15,
         0)],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingIDE.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['n'\
        'years.reset_index()\n',
        'ntiles = daskdf.groupby(["Site","geo_index","Year"]).count().comput'\
        'e().reset_index()\n',
        'ntiles = daskdf.groupby(["Site","geo_index","Year"]).value_count()'\
        '\n',
        'ntiles = daskdf.groupby(["Site","geo_index","Year"]).value_counts()'\
        '\n',
        'ntiles = daskdf.value_counts(["Site","geo_index","Year"])\n',
        'ntiles = daskdf["Site","geo_index","Year"].value_counts()\n',
        'ntiles = daskdf[["Site","geo_index","Year"]].value_counts()\n',
        'ntiles = daskdf.groupby(["Site","geo_index","Year"]).Site.counts()'\
        '\n',
        'ntiles = daskdf.groupby(["Site","geo_index","Year"]).Site.count()\n',
        'ntiles\n',
        'ntiles.compute()\n',
        'nyears\n',
        ' total_trees = daskdf.shape[0].compute()\n',
        'total_trees\n',
        'total_sites = daskdf.Site.nunique().compute()\n',
        'total_sites\n',
        'print("There are {} tree predictions from {} sites".format(total_tr'\
        'ees, total_sites))\n',
        'average_height_area.reset_index()\n',
        "sumstats = {\"height\":[\"mean\",\"count\",\"std\"], \"area\":[\"me"\
        "an\",\"count\",\"std\"]}    \naverage_height_area = daskdf.groupby("\
        "['Site']).agg(sumstats).compute().reset_index()\n\n#Number of trees"\
        "\naverage_density = daskdf.groupby([\"Site\",\"geo_index\",\"Year\""\
        "]).count().groupby(\"Site\").left.mean().compute().reset_index()\n"\
        "average_density = average_density.rename(columns = {\"left\":\"n\""\
        "})\n\n",
        'average_density.columns\n',
        'average_height_area.columns()\n',
        'average_height_area.columns\n',
        "average_height_area.columns = average_height_area.columns.map('_'.j"\
        "oin).reset_index()\n",
        "sumstats = {\"height\":[\"mean\",\"count\",\"std\"], \"area\":[\"me"\
        "an\",\"count\",\"std\"]}    \naverage_height_area = daskdf.groupby("\
        "['Site']).agg(sumstats).compute().reset_index()\naverage_height_are"\
        "a.columns = average_height_area.columns.map('_'.join)\naverage_heig"\
        "ht_area = average_height_area.reset_index()\n\n",
        'results = average_height_area.merge(average_density)\n',
        'average_density\n',
        'average_height_area\n',
        'average_height_area.columns \n',
        'average_height_area.columns[0]\n',
        'average_height_area.columns[1]\n',
        'average_height_area.columns[1] = "Site"\n',
        'average_height_area.rename(columns={"Site_":"Site"})\n',
        "sumstats = {\"height\":[\"mean\",\"count\",\"std\"], \"area\":[\"me"\
        "an\",\"count\",\"std\"]}    \naverage_height_area = daskdf.groupby("\
        "['Site']).agg(sumstats).compute().reset_index()\naverage_height_are"\
        "a.columns = average_height_area.columns.map('_'.join)\naverage_heig"\
        "ht_area = average_height_area.rename(columns={\"Site_\":\"Site\"})"\
        "\n\naverage_height_area = average_height_area.reset_index()\n\n#Num"\
        "ber of trees\naverage_density = daskdf.groupby([\"Site\",\"geo_inde"\
        "x\",\"Year\"]).count().groupby(\"Site\").left.mean().compute().rese"\
        "t_index()\naverage_density = average_density.rename(columns = {\"le"\
        "ft\":\"n\"})\n    \n#Combine \nresults = average_height_area.merge("\
        "average_density)\n\n",
        'sumstats = {"height":["mean","count","std"], "area":["mean",upper,"'\
        'count","std"]}\n',
        'upper\n',
        "average_height_area = daskdf.groupby(['Site']).agg(sumstats).comput"\
        "e().reset_index()\n",
        "daskdf.groupby(['Site']).height.quantile(0.05)\n",
        "daskdf.groupby(['Site']).quantile(0.05)\n",
        "daskdf.groupby(['Site']).height.quantile()\n",
        "daskdf.groupby(['Site']).quantile(q=0.05,axis=1)\n",
        "daskdf.groupby(['Site']).quantile(q=0.05,axis=1).\n",
        'results\n',
        'daskdf.groupby(["Site","geo_index","Year"]).size()\n',
        'daskdf.groupby(["Site","geo_index","Year"]).size().compute()\n',
        'a = treedf.groupby(["Site","geo_index"]).size().reset_index().compu'\
        'te()\n',
        'a\n',
        'a.columns\n',
        'treedf.groupby(["Site","geo_index"]).size().to_frame("size")\n',
        'treedf.groupby(["Site","geo_index"]).size().to_frame("size").comput'\
        'e()\n',
        'fall_var = treedf.groupby(["Site","geo_index"]).size().to_frame("si'\
        'ze").reset_index().compute().groupby("Site").quantile([0.05,0.95]).'\
        'reset_index()\n',
        'fall_var = treedf.groupby(["Site","geo_index"]).size().to_frame("si'\
        'ze").reset_index().compute().groupby("Site").size.quantile([0.05,0.'\
        '95]).reset_index()\n',
        'fall_var = treedf.groupby(["Site","geo_index"]).size().to_frame("n"'\
        ').reset_index().compute().groupby("Site").n.quantile([0.05,0.95]).r'\
        'eset_index()\n',
        'fall_var.unstack()\n',
        'fall_var.level_1.unstack()\n',
        'fall_var.reset_index()\n',
        'fall_var.pivot("level_1")\n',
        'fall_var.pivot("level_1","n")\n',
        'fall_var.pivot("level_1","n").reset_index()\n',
        'fall_var.rename(columns={"level_1":"quantile"})\n',
        'fall_var = fall_var.rename(columns={"level_1":"quantile"})\n',
        'result = fall_mean.merge(fall_var)\n',
        'result\n',
        'fall_var.set_index("Site")\n',
        'fall_var.set_index("Site").quantile.unstack()\n',
        'fall_var.set_index("Site")["quantile"].unstack()\n',
        'fall_var.set_index("Site")["quantile"].unstack("n")\n',
        'fall_var.set_index("Site").unstack("n")\n',
        'fall_var.set_index("Site").unstack("quantile")\n',
        'fall_var.set_index(["Site","quantile"]).unstack("n")\n',
        'fall_var.set_index(["Site","quantile"]).unstack()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().reset_index()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None,'\
        '1).reset_index()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None,'\
        '0).reset_index()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None)'\
        '.reset_index().to_frame()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None)'\
        '.reset_index().merge(fall_mean)\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None)'\
        '.reset_index()\n',
        'fall_var.set_index(["Site","quantile"]).unstack().rename_axis(None)'\
        '.reset_index().    \n',
        'fall_var.cast("quantile")\n',
        'pd.cat\n',
        'pd.cast\n',
        'fall_var.pivot_table(index="Site",columns="quantile",values="n",fil'\
        'l_value=None).reset_index()\n',
        'fall_var = fall_var.pivot_table(index="Site",columns="quantile",val'\
        'ues="n",fill_value=None).reset_index()\n',
        'fall_mean= treedf.groupby(["Site","geo_index"]).size().reset_index('\
        ').compute().groupby("Site").mean().reset_index()\nfall_var = treedf'\
        '.groupby(["Site","geo_index"]).size().to_frame("n").reset_index().c'\
        'ompute().groupby("Site").n.quantile([0.05,0.95]).reset_index()\nfal'\
        'l_var = fall_var.rename(columns={"level_1":"quantile"})\nfall_var ='\
        ' fall_var.pivot_table(index="Site",columns="quantile",values="n",fi'\
        'll_value=None).reset_index()\nfall_var.rename(columns={"0.05":"lowe'\
        'r"})\n\n',
        'fall_var\n',
        'fall_var.rename(columns={"0.05":"lower"})\n',
        'fall_var.rename(columns={0.05:"lower"})\n',
        'fall_mean= treedf.groupby(["Site","geo_index"]).size().reset_index('\
        ').compute().groupby("Site").mean().reset_index()\n',
        'fall_mean = fall_mean.rename(columns={0:"mean"})\n',
        'fall_mean\n',
        'window.indices\n',
        'window.indices()\n',
        'window\n',
        'annotations_files\n',
        'crop_annotations\n',
        'os.getcwd()\n',
        'os.path.exists("tests/data/output/OSBS_029_1.png")\n',
        'glob.glob("tests/output/*)\n',
        'glob.glob("tests/output/*")\n',
        'tf_filenames\n',
        'f\n']},
                       'launch-id': None,
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ["#Load modules\nfrom __future__ im"\
        "port print_function\nimport keras\nimport sys\nfrom keras.datasets "\
        "import mnist\nfrom keras.models import Sequential\nfrom keras.layer"\
        "s import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, "\
        "MaxPooling2D\nfrom keras import backend as K\nimport platform\nimpo"\
        "rt numpy as np\nimport glob\nimport dask\nimport distributed\n\npri"\
        "nt(\"dask version is {}\".format(dask.__version__))\nprint(\"distri"\
        "buted version is {}\".format(distributed.__version__))\nprint(\"ker"\
        "as version is {}\".format(keras.__version__))\nprint(sys.version)\n"\
        "\n# Define a trained and saved model\ndef train_model():\n    batch"\
        "_size = 128\n    num_classes = 10\n    epochs = 1\n    \n    # inpu"\
        "t image dimensions\n    img_rows, img_cols = 28, 28\n    \n    # th"\
        "e data, split between train and test sets\n    (x_train, y_train), "\
        "(x_test, y_test) = mnist.load_data()\n    \n    if K.image_data_for"\
        "mat() == 'channels_first':\n        x_train = x_train.reshape(x_tra"\
        "in.shape[0], 1, img_rows, img_cols)\n        x_test = x_test.reshap"\
        "e(x_test.shape[0], 1, img_rows, img_cols)\n        input_shape = (1"\
        ", img_rows, img_cols)\n    else:\n        x_train = x_train.reshape"\
        "(x_train.shape[0], img_rows, img_cols, 1)\n        x_test = x_test."\
        "reshape(x_test.shape[0], img_rows, img_cols, 1)\n        input_shap"\
        "e = (img_rows, img_cols, 1)\n    \n    x_train = x_train.astype('fl"\
        "oat32')\n    x_test = x_test.astype('float32')\n    x_train /= 255"\
        "\n    x_test /= 255\n    \n    # convert class vectors to binary cl"\
        "ass matrices\n    y_train = keras.utils.to_categorical(y_train, num"\
        "_classes)\n    y_test = keras.utils.to_categorical(y_test, num_clas"\
        "ses)\n    \n    model = Sequential()\n    model.add(Conv2D(32, kern"\
        "el_size=(3, 3),\n                     activation='relu',\n         "\
        "            input_shape=input_shape))\n    model.add(Conv2D(64, (3,"\
        " 3), activation='relu'))\n    model.add(MaxPooling2D(pool_size=(2, "\
        "2)))\n    model.add(Flatten())\n    model.add(Dense(128, activation"\
        "='relu'))\n    model.add(Dense(num_classes, activation='softmax'))"\
        "\n    \n    model.compile(loss=keras.losses.categorical_crossentrop"\
        "y,\n                  optimizer=keras.optimizers.Adadelta(),\n     "\
        "             metrics=['accuracy'])\n    \n    model.fit(x_train, y_"\
        "train,\n              batch_size=batch_size,\n              epochs="\
        "epochs,\n              verbose=1,\n              validation_data=(x"\
        "_test, y_test))\n    score = model.evaluate(x_test, y_test, verbose"\
        "=0)\n    print('Test loss:', score[0])\n    print('Test accuracy:',"\
        " score[1])\n    \n    return model\n```\n\n```\ndef load_data():\n"\
        "    (x_train, y_train), (x_test, y_test) = mnist.load_data()\n    x"\
        "_test = x_test.reshape(x_test.shape[0], 28, 28, 1)\n    return x_te"\
        "st\n```\n\n#This fails:\n\n\nclient=distributed.Client()\nmodel = k"\
        "eras.models.load_model(\"MNIST.h5\")\nx_test = load_data()\nresults"\
        " = []\nfor batch in batch_array:\n    prediction = dask.delayed(mod"\
        "el.predict_on_batch)(batch)\n    results.append(prediction)\n#Gathe"\
        "r\nresults = dask.compute(*results)\n\n#this succeeds\n\n#Example 2"\
        " LocalCluster - load data and model on each worker\nmodel = dask.de"\
        "layed(keras.models.load_model)(\"MNIST.h5\")\nx_test = dask.delayed"\
        "(load_data)()\nresults = []\nfor batch in batch_array:\n    predict"\
        "ion = dask.delayed(model.predict_on_batch)(batch)\n    results.appe"\
        "nd(prediction)\n\n#Gather\nresults = dask.compute(*results)\nresult"\
        "s[0].shape\n\n\n",
        "#Load modules\nfrom __future__ import print_function\nimport keras"\
        "\nimport sys\nfrom keras.datasets import mnist\nfrom keras.models i"\
        "mport Sequential\nfrom keras.layers import Dense, Dropout, Flatten"\
        "\nfrom keras.layers import Conv2D, MaxPooling2D\nfrom keras import "\
        "backend as K\nimport platform\nimport numpy as np\nimport glob\nimp"\
        "ort dask\nimport distributed\n\nprint(\"dask version is {}\".format"\
        "(dask.__version__))\nprint(\"distributed version is {}\".format(dis"\
        "tributed.__version__))\nprint(\"keras version is {}\".format(keras."\
        "__version__))\nprint(sys.version)\n\n# Define a trained and saved m"\
        "odel\ndef train_model():\n    batch_size = 128\n    num_classes = 1"\
        "0\n    epochs = 1\n    \n    # input image dimensions\n    img_rows"\
        ", img_cols = 28, 28\n    \n    # the data, split between train and "\
        "test sets\n    (x_train, y_train), (x_test, y_test) = mnist.load_da"\
        "ta()\n    \n    if K.image_data_format() == 'channels_first':\n    "\
        "    x_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_co"\
        "ls)\n        x_test = x_test.reshape(x_test.shape[0], 1, img_rows, "\
        "img_cols)\n        input_shape = (1, img_rows, img_cols)\n    else:"\
        "\n        x_train = x_train.reshape(x_train.shape[0], img_rows, img"\
        "_cols, 1)\n        x_test = x_test.reshape(x_test.shape[0], img_row"\
        "s, img_cols, 1)\n        input_shape = (img_rows, img_cols, 1)\n   "\
        " \n    x_train = x_train.astype('float32')\n    x_test = x_test.ast"\
        "ype('float32')\n    x_train /= 255\n    x_test /= 255\n    \n    # "\
        "convert class vectors to binary class matrices\n    y_train = keras"\
        ".utils.to_categorical(y_train, num_classes)\n    y_test = keras.uti"\
        "ls.to_categorical(y_test, num_classes)\n    \n    model = Sequentia"\
        "l()\n    model.add(Conv2D(32, kernel_size=(3, 3),\n                "\
        "     activation='relu',\n                     input_shape=input_sha"\
        "pe))\n    model.add(Conv2D(64, (3, 3), activation='relu'))\n    mod"\
        "el.add(MaxPooling2D(pool_size=(2, 2)))\n    model.add(Flatten())\n"\
        "    model.add(Dense(128, activation='relu'))\n    model.add(Dense(n"\
        "um_classes, activation='softmax'))\n    \n    model.compile(loss=ke"\
        "ras.losses.categorical_crossentropy,\n                  optimizer=k"\
        "eras.optimizers.Adadelta(),\n                  metrics=['accuracy']"\
        ")\n    \n    model.fit(x_train, y_train,\n              batch_size="\
        "batch_size,\n              epochs=epochs,\n              verbose=1,"\
        "\n              validation_data=(x_test, y_test))\n    score = mode"\
        "l.evaluate(x_test, y_test, verbose=0)\n    print('Test loss:', scor"\
        "e[0])\n    print('Test accuracy:', score[1])\n    \n    return mode"\
        "l\n\n\ndef load_data():\n    (x_train, y_train), (x_test, y_test) ="\
        " mnist.load_data()\n    x_test = x_test.reshape(x_test.shape[0], 28"\
        ", 28, 1)\n    return x_test\n\n#This fails:\n\n\nclient=distributed"\
        ".Client()\nmodel = keras.models.load_model(\"MNIST.h5\")\nx_test = "\
        "load_data()\nresults = []\nfor batch in batch_array:\n    predictio"\
        "n = dask.delayed(model.predict_on_batch)(batch)\n    results.append"\
        "(prediction)\n#Gather\nresults = dask.compute(*results)\n\n#this su"\
        "cceeds\n\n#Example 2 LocalCluster - load data and model on each wor"\
        "ker\nmodel = dask.delayed(keras.models.load_model)(\"MNIST.h5\")\n"\
        "x_test = dask.delayed(load_data)()\nresults = []\nfor batch in batc"\
        "h_array:\n    prediction = dask.delayed(model.predict_on_batch)(bat"\
        "ch)\n    results.append(prediction)\n\n#Gather\nresults = dask.comp"\
        "ute(*results)\nresults[0].shape\n\n\n"]},
                       'launch-id': None,
                       'sel-line': 5L,
                       'sel-line-start': 363L,
                       'selection_end': 363L,
                       'selection_start': 363L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('create_submission.py'),
        {'attrib-starts': [('submission',
                            19)],
         'first-line': 17L,
         'folded-linenos': [],
         'sel-line': 29L,
         'sel-line-start': 798L,
         'selection_end': 842L,
         'selection_start': 842L,
         'zoom': 0L},
        1589204532.661831],
        [loc('tests/test_create_submission.py'),
         {'attrib-starts': [('test_submission',
                             6)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 16L,
          'sel-line-start': 788L,
          'selection_end': 826L,
          'selection_start': 826L,
          'zoom': 0L},
         1589213565.528931],
        [loc('tests/test_tfrecords.py'),
         {'attrib-starts': [('test_create_tfrecords',
                             34)],
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 35L,
          'sel-line-start': 772L,
          'selection_end': 820L,
          'selection_start': 804L,
          'zoom': 0L},
         1589213567.582401],
        [loc('tests/test_tfrecords_yields.py'),
         {'attrib-starts': [],
          'first-line': 1L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 38L,
          'selection_start': 0L,
          'zoom': 0L},
         1589213572.002128],
        [loc('tests/test_tfrecords.py'),
         {'attrib-starts': [('test_create_tfrecords',
                             34)],
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 35L,
          'sel-line-start': 772L,
          'selection_end': 833L,
          'selection_start': 833L,
          'zoom': 0L},
         1589213693.620262],
        [loc('create_submission.py'),
         {'attrib-starts': [('submission',
                             19)],
          'first-line': 17L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 627L,
          'selection_end': 636L,
          'selection_start': 636L,
          'zoom': 0L},
         1589213706.678679],
        [loc('tests/test_rasterize.py'),
         {'attrib-starts': [('test_run',
                             4)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 163L,
          'selection_end': 197L,
          'selection_start': 197L,
          'zoom': 0L},
         1589304771.51724],
        [loc('create_submission.py'),
         {'attrib-starts': [('submission',
                             19)],
          'first-line': 17L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 627L,
          'selection_end': 636L,
          'selection_start': 636L,
          'zoom': 0L},
         1589304771.716791],
        [loc('tests/test_create_submission.py'),
         {'attrib-starts': [('test_submission',
                             6)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 9L,
          'sel-line-start': 321L,
          'selection_end': 360L,
          'selection_start': 360L,
          'zoom': 0L},
         1589305319.255673],
        [loc('tests/test_create_submission.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 25L,
          'selection_start': 0L,
          'zoom': 0L},
         1589305320.352848],
        [loc('tests/test_create_submission.py'),
         {'attrib-starts': [('test_submission',
                             6)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 127L,
          'selection_end': 149L,
          'selection_start': 127L,
          'zoom': 0L},
         1589305332.377362],
        [loc('tests/test_create_submission.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 25L,
          'selection_start': 0L,
          'zoom': 0L},
         1589305342.498593],
        [loc('tests/test_create_submission.py'),
         {'attrib-starts': [('test_submission',
                             6)],
          'first-line': 11L,
          'folded-linenos': [],
          'sel-line': 12L,
          'sel-line-start': 532L,
          'selection_end': 536L,
          'selection_start': 536L,
          'zoom': 0L},
         1589305360.711981],
        [loc('create_submission.py'),
         {'attrib-starts': [('submission',
                             19)],
          'first-line': 41L,
          'folded-linenos': [],
          'sel-line': 30L,
          'sel-line-start': 843L,
          'selection_end': 936L,
          'selection_start': 936L,
          'zoom': 0L},
         1589315404.09258],
        [loc('tests/test_create_submission.py'),
         {'attrib-starts': [('test_submission',
                             6)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 9L,
          'sel-line-start': 321L,
          'selection_end': 340L,
          'selection_start': 340L,
          'zoom': 0L},
         1589321871.872529],
        [loc('tests/test_rasterize.py'),
         {'attrib-starts': [('test_run',
                             4)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 163L,
          'selection_end': 197L,
          'selection_start': 197L,
          'zoom': 0L},
         1589321871.994994],
        [loc('tests/test_rasterize.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 15L,
          'selection_start': 0L,
          'zoom': 0L},
         1589321876.816266],
        [loc('rasterize.py'),
         {'attrib-starts': [('rasterize_shapefile',
                             20)],
          'first-line': 19L,
          'folded-linenos': [],
          'sel-line': 27L,
          'sel-line-start': 653L,
          'selection_end': 673L,
          'selection_start': 673L,
          'zoom': 0L},
         1589322073.431786],
        [loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'),
         {'attrib-starts': [('Module',
                             419),
                            ('Module._importtestmodule',
                             487)],
          'first-line': 513L,
          'folded-linenos': [],
          'sel-line': 522L,
          'sel-line-start': 19407L,
          'selection_end': 19437L,
          'selection_start': 19407L,
          'zoom': 0L},
         1589322075.500695],
        [loc('rasterize.py'),
         {'attrib-starts': [('rasterize_shapefile',
                             20)],
          'first-line': 23L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 814L,
          'selection_end': 818L,
          'selection_start': 818L,
          'zoom': 0L},
         1590375762.187826]],
        20),
        'current-loc': loc('predict.py'),
        'editor-state-list': [(loc('rasterize.py'),
                               {'attrib-starts': [('rasterize_shapefile',
        20)],
                                'first-line': 23L,
                                'folded-linenos': [],
                                'sel-line': 33L,
                                'sel-line-start': 814L,
                                'selection_end': 818L,
                                'selection_start': 818L,
                                'zoom': 0L}),
                              (loc('tests/test_rasterize.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 15L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'),
                               {'attrib-starts': [('Module',
        419),
        ('Module._importtestmodule',
         487)],
                                'first-line': 513L,
                                'folded-linenos': [],
                                'sel-line': 522L,
                                'sel-line-start': 19407L,
                                'selection_end': 19437L,
                                'selection_start': 19407L,
                                'zoom': 0L}),
                              (loc('tests/test_create_submission.py'),
                               {'attrib-starts': [('test_submission',
        6)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 9L,
                                'sel-line-start': 321L,
                                'selection_end': 340L,
                                'selection_start': 340L,
                                'zoom': 0L}),
                              (loc('create_submission.py'),
                               {'attrib-starts': [('submission',
        19)],
                                'first-line': 41L,
                                'folded-linenos': [],
                                'sel-line': 30L,
                                'sel-line-start': 843L,
                                'selection_end': 936L,
                                'selection_start': 936L,
                                'zoom': 0L}),
                              (loc('tests/test_tfrecords.py'),
                               {'attrib-starts': [('test_create_tfrecords',
        34)],
                                'first-line': 18L,
                                'folded-linenos': [],
                                'sel-line': 35L,
                                'sel-line-start': 772L,
                                'selection_end': 833L,
                                'selection_start': 833L,
                                'zoom': 0L}),
                              (loc('tests/test_tfrecords_yields.py'),
                               {'attrib-starts': [],
                                'first-line': 1L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 38L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('predict.py'),
                               {'attrib-starts': [('project',
        198)],
                                'first-line': 162L,
                                'folded-linenos': [],
                                'sel-line': 199L,
                                'sel-line-start': 7719L,
                                'selection_end': 7733L,
                                'selection_start': 7726L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('rasterize.py'),
         loc('tests/test_rasterize.py'),
         loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'),
         loc('tests/test_create_submission.py'),
         loc('create_submission.py'),
         loc('tests/test_tfrecords.py'),
         loc('tests/test_tfrecords_yields.py'),
         loc('predict.py')]),
                               'open_files': [u'create_submission.py',
        u'tests/test_create_submission.py',
        u'tests/test_rasterize.py',
        u'tests/test_tfrecords.py',
        u'tests/test_tfrecords_yields.py',
        u'../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py',
        u'rasterize.py',
        u'predict.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.4695238095238095},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1440,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('predict.py'),
                           loc('rasterize.py'),
                           loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py')]
guimgr.visual-state = {loc('../DeepForest/.travis.yml'): {'attrib-starts': [],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 186L,
        'selection_end': 233L,
        'selection_start': 233L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/deepforest.py'): {'attr'\
        'ib-starts': [('deepforest',
                       34),
                      ('deepforest.predict_generator',
                       173)],
        'first-line': 171L,
        'folded-linenos': [],
        'sel-line': 187L,
        'sel-line-start': 7911L,
        'selection_end': 7911L,
        'selection_start': 7911L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/predict.py'): {'attrib-'\
        'starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 228L,
        'selection_end': 293L,
        'selection_start': 228L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/preprocess.py'): {'attr'\
        'ib-starts': [('split_raster',
                       115)],
        'first-line': 150L,
        'folded-linenos': [],
        'sel-line': 161L,
        'sel-line-start': 6779L,
        'selection_end': 6796L,
        'selection_start': 6787L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/retinanet_train.py'): {'a'\
        'ttrib-starts': [('create_generators',
                          179)],
        'first-line': 207L,
        'folded-linenos': [],
        'sel-line': 220L,
        'sel-line-start': 8520L,
        'selection_end': 8544L,
        'selection_start': 8537L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/tfrecords.py'): {'attri'\
        'b-starts': [('_parse_fn',
                      164)],
        'first-line': 162L,
        'folded-linenos': [],
        'sel-line': 167L,
        'sel-line-start': 7432L,
        'selection_end': 7448L,
        'selection_start': 7448L,
        'zoom': 0L},
                       loc('../DeepForest/deepforest/utilities.py'): {'attri'\
        'b-starts': [('use_release',
                      58)],
        'first-line': 93L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 1315L,
        'selection_end': 1330L,
        'selection_start': 1319L,
        'zoom': 0L},
                       loc('../DeepForest/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('parse_args',
                          371)],
        'first-line': 406L,
        'folded-linenos': [],
        'sel-line': 406L,
        'sel-line-start': 15687L,
        'selection_end': 15847L,
        'selection_start': 15687L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_preprocess.py'): {'attr'\
        'ib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest/tests/test_utilities.py'): {'attri'\
        'b-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest_Model/SLURM/anchors.sbatch'): {'at'\
        'trib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 760L,
        'selection_end': 760L,
        'selection_start': 760L,
        'zoom': 0L},
                       loc('../DeepForest_Model/SLURM/generate.sbatch'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 509L,
        'selection_end': 509L,
        'selection_start': 509L,
        'zoom': 0L},
                       loc('../DeepForest_Model/SLURM/training.sbatch'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 835L,
        'selection_end': 835L,
        'selection_start': 835L,
        'zoom': 0L},
                       loc('../DeepForest_Model/dask_utility.py'): {'attrib-'\
        'starts': [],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 64L,
        'selection_end': 105L,
        'selection_start': 105L,
        'zoom': 0L},
                       loc('../DeepForest_Model/generate.py'): {'attrib-star'\
        'ts': [],
        'first-line': 283L,
        'folded-linenos': [],
        'sel-line': 292L,
        'sel-line-start': 11902L,
        'selection_end': 11962L,
        'selection_start': 11962L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0009.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0030.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0048.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0051.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0075.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0115.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0130.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0146.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0149_eval.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Model_Exploration/drone/DJI_0160.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Zooniverse/aggregate.py'): {'a'\
        'ttrib-starts': [('parse_subject_data',
                          36)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 1025L,
        'selection_end': 1056L,
        'selection_start': 1056L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Zooniverse/manifest.py'): {'a'\
        'ttrib-starts': [('main',
                          74)],
        'first-line': 62L,
        'folded-linenos': [],
        'sel-line': 75L,
        'sel-line-start': 2284L,
        'selection_end': 2296L,
        'selection_start': 2296L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Zooniverse/mapbox_upload.sbatch'): {'a'\
        'ttrib-starts': [],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 590L,
        'selection_end': 647L,
        'selection_start': 647L,
        'zoom': 0L},
                       loc('../EvergladesWadingBird/Zooniverse/tile_raster.py'): {'a'\
        'ttrib-starts': [('writeImageAsGeoTIFF',
                          39)],
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 1598L,
        'selection_end': 1642L,
        'selection_start': 1642L,
        'zoom': 0L},
                       loc('Figures/predict_field_data.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('LIDAR.py'): {'attrib-starts': [('postprocess_CHM',
        75)],
        'first-line': 73L,
        'folded-linenos': [],
        'sel-line': 80L,
        'sel-line-start': 2268L,
        'selection_end': 2272L,
        'selection_start': 2272L,
        'zoom': 0L},
                       loc('Profiling.ipynb'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('SLURM/allometry.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 691L,
        'selection_end': 776L,
        'selection_start': 776L,
        'zoom': 0L},
                       loc('SLURM/analysis.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 501L,
        'selection_end': 501L,
        'selection_start': 501L,
        'zoom': 0L},
                       loc('SLURM/figures.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 572L,
        'selection_end': 589L,
        'selection_start': 589L,
        'zoom': 0L},
                       loc('SLURM/generate.sbatch'): {'attrib-starts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 693L,
        'selection_end': 780L,
        'selection_start': 780L,
        'zoom': 0L},
                       loc('SLURM/hard_mining.sbatch'): {'attrib-starts': [],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 298L,
        'selection_end': 351L,
        'selection_start': 351L,
        'zoom': 0L},
                       loc('SLURM/predict.sbatch'): {'attrib-starts': [],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 539L,
        'selection_end': 984L,
        'selection_start': 539L,
        'zoom': 0L},
                       loc('SLURM/pytest.sbatch'): {'attrib-starts': [],
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 525L,
        'selection_end': 728L,
        'selection_start': 525L,
        'zoom': 0L},
                       loc('SLURM/sampling.sbatch'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 622L,
        'selection_end': 653L,
        'selection_start': 653L,
        'zoom': 0L},
                       loc('SLURM/test.sbatch'): {'attrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 591L,
        'selection_end': 591L,
        'selection_start': 591L,
        'zoom': 0L},
                       loc('SLURM/upload.sbatch'): {'attrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 493L,
        'selection_end': 493L,
        'selection_start': 493L,
        'zoom': 0L},
                       loc('__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('allometry.py'): {'attrib-starts': [('run',
        49)],
        'first-line': 37L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 1830L,
        'selection_end': 1845L,
        'selection_start': 1845L,
        'zoom': 0L},
                       loc('analysis.py'): {'attrib-starts': [('tree_falls',
        100)],
        'first-line': 78L,
        'folded-linenos': [],
        'sel-line': 136L,
        'sel-line-start': 5580L,
        'selection_end': 5638L,
        'selection_start': 5638L,
        'zoom': 0L},
                       loc('check_site.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 51L,
        'sel-line-start': 2309L,
        'selection_end': 2435L,
        'selection_start': 2336L,
        'zoom': 0L},
                       loc('create_submission.py'): {'attrib-starts': [('sub'\
        'mission',
        19)],
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 724L,
        'selection_end': 806L,
        'selection_start': 806L,
        'zoom': 0L},
                       loc('dask_analysis.py'): {'attrib-starts': [],
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 270L,
        'selection_end': 318L,
        'selection_start': 318L,
        'zoom': 0L},
                       loc('dask_example.py'): {'attrib-starts': [],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 1196L,
        'selection_end': 1200L,
        'selection_start': 1200L,
        'zoom': 0L},
                       loc('dask_small.py'): {'attrib-starts': [('load_tenso'\
        'rflow',
        25)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 653L,
        'selection_end': 826L,
        'selection_start': 653L,
        'zoom': 0L},
                       loc('dask_test_persist.py'): {'attrib-starts': [('run'\
        '_test',
        13)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 257L,
        'selection_end': 277L,
        'selection_start': 277L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 180L,
        'selection_end': 191L,
        'selection_start': 191L,
        'zoom': 0L},
                       loc('figures.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 148L,
        'selection_end': 176L,
        'selection_start': 148L,
        'zoom': 0L},
                       loc('generate.py'): {'attrib-starts': [],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 331L,
        'selection_end': 370L,
        'selection_start': 370L,
        'zoom': 0L},
                       loc('generate_crops.py'): {'attrib-starts': [('genera'\
        'te_training',
        14)],
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2484L,
        'selection_end': 2559L,
        'selection_start': 2559L,
        'zoom': 0L},
                       loc('interactive.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 436L,
        'selection_end': 436L,
        'selection_start': 436L,
        'zoom': 0L},
                       loc('main.py'): {'attrib-starts': [('run_rgb',
        134)],
        'first-line': 137L,
        'folded-linenos': [],
        'sel-line': 146L,
        'sel-line-start': 5308L,
        'selection_end': 5319L,
        'selection_start': 5318L,
        'zoom': 0L},
                       loc('predict.py'): {'attrib-starts': [('project',
        198)],
        'first-line': 196L,
        'folded-linenos': [],
        'sel-line': 199L,
        'sel-line-start': 7719L,
        'selection_end': 7733L,
        'selection_start': 7726L,
        'zoom': 0L},
                       loc('predict_field_data.py'): {'attrib-starts': [],
        'first-line': 128L,
        'folded-linenos': [],
        'sel-line': 139L,
        'sel-line-start': 4862L,
        'selection_end': 4936L,
        'selection_start': 4936L,
        'zoom': 0L},
                       loc('sampling.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 211L,
        'selection_end': 253L,
        'selection_start': 211L,
        'zoom': 0L},
                       loc('scratch.py'): {'attrib-starts': [],
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 936L,
        'selection_end': 965L,
        'selection_start': 965L,
        'zoom': 0L},
                       loc('shapefile_annotation.py'): {'attrib-starts': [('s'\
        'hapefile_to_annotations',
        4)],
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 2067L,
        'selection_end': 2067L,
        'selection_start': 2067L,
        'zoom': 0L},
                       loc('start_cluster.py'): {'attrib-starts': [('start',
        35)],
        'first-line': 56L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 1871L,
        'selection_end': 1906L,
        'selection_start': 1906L,
        'zoom': 0L},
                       loc('test_dask.py'): {'attrib-starts': [('add',
        23)],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 443L,
        'selection_end': 459L,
        'selection_start': 459L,
        'zoom': 0L},
                       loc('test_start_cluster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 139L,
        'selection_end': 210L,
        'selection_start': 180L,
        'zoom': 0L},
                       loc('tests/__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/analysis.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_LIDAR.py'): {'attrib-starts': [('test'\
        '_postprocess_CHM',
        36)],
        'first-line': 34L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 929L,
        'selection_end': 945L,
        'selection_start': 933L,
        'zoom': 0L},
                       loc('tests/test_allometry.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 16L,
        'selection_end': 82L,
        'selection_start': 16L,
        'zoom': 0L},
                       loc('tests/test_analysis.py'): {'attrib-starts': [('g'\
        'eo_indexes',
        8)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 140L,
        'selection_end': 175L,
        'selection_start': 140L,
        'zoom': 0L},
                       loc('tests/test_create_submission.py'): {'attrib-star'\
        'ts': [('test_submission',
                6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 675L,
        'selection_end': 747L,
        'selection_start': 747L,
        'zoom': 0L},
                       loc('tests/test_dask.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 47L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_figures.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 50L,
        'selection_end': 128L,
        'selection_start': 50L,
        'zoom': 0L},
                       loc('tests/test_hard_mining.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_predict.py'): {'attrib-starts': [('te'\
        'st_predict_tilelist',
        44)],
        'first-line': 41L,
        'folded-linenos': [],
        'sel-line': 55L,
        'sel-line-start': 1770L,
        'selection_end': 1770L,
        'selection_start': 1770L,
        'zoom': 0L},
                       loc('tests/test_sampling.py'): {'attrib-starts': [],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 14L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_start_cluster.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 85L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_tfrecords.py'): {'attrib-starts': [('t'\
        'est_create_tfrecords',
        19)],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 411L,
        'selection_end': 459L,
        'selection_start': 443L,
        'zoom': 0L},
                       loc('tests/test_tfrecords_yields.py'): {'attrib-start'\
        's': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 38L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tfrecords.py'): {'attrib-starts': [('create_tens'\
        'ors',
        111)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 113L,
        'sel-line-start': 3884L,
        'selection_end': 3888L,
        'selection_start': 3888L,
        'zoom': 0L},
                       loc('utils/verify.py'): {'attrib-starts': [('check_RG'\
        'B',
        8)],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 317L,
        'selection_end': 328L,
        'selection_start': 328L,
        'zoom': 0L},
                       loc('../NeonTreeEvaluation/annotations/2018_OSBS_4_405000_3286000_image.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../TreeDemo/TreeDemo/Predict_Trees.py'): {'attri'\
        'b-starts': [('Tree_Model',
                      6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 134L,
        'selection_end': 151L,
        'selection_start': 151L,
        'zoom': 0L},
                       loc('../TreeDemo/TreeDemo/environment.yml'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 121L,
        'selection_end': 129L,
        'selection_start': 129L,
        'zoom': 0L},
                       loc('../TreeSegmentation/analysis/Hyperspectral.py'): {'a'\
        'ttrib-starts': [('h5refl2array',
                          9)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 129L,
        'selection_end': 167L,
        'selection_start': 167L,
        'zoom': 0L},
                       loc('../TreeSegmentation/analysis/generate_h5_raster.py'): {'a'\
        'ttrib-starts': [('parse_args',
                          6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 77L,
        'selection_end': 578L,
        'selection_start': 77L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('create_models',
                          77)],
        'first-line': 115L,
        'folded-linenos': [],
        'sel-line': 107L,
        'sel-line-start': 4157L,
        'selection_end': 4204L,
        'selection_start': 4189L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/image.py'): {'a'\
        'ttrib-starts': [('preprocess_image',
                          35)],
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 56L,
        'sel-line-start': 1845L,
        'selection_end': 1860L,
        'selection_start': 1860L,
        'zoom': 0L},
                       loc('../../Dropbox/Everglades/imagery/q__delivery_2015_1Metadata_FGDC_2015_Collier.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 237L,
        'selection_end': 263L,
        'selection_start': 259L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/Drone/RP_2015_P1.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/Drone/RP_2015_P6.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 131L,
        'selection_end': 154L,
        'selection_start': 154L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/multiyear/annotations/ABBY_063.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Dropbox/Weecology/multiyear/annotations/BONA_018.xml'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/glob.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/random.py'): {'a'\
        'ttrib-starts': [('Random',
                          71),
                         ('Random.randrange',
                          173)],
        'first-line': 160L,
        'folded-linenos': [],
        'sel-line': 183L,
        'sel-line-start': 6417L,
        'selection_end': 6417L,
        'selection_start': 6417L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [('open',
                          2769)],
        'first-line': 2803L,
        'folded-linenos': [],
        'sel-line': 2808L,
        'sel-line-start': 95295L,
        'selection_end': 95295L,
        'selection_start': 95295L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/config/__init__.py'): {'a'\
        'ttrib-starts': [('Config',
                          694),
                         ('Config.getoption',
                          1094)],
        'first-line': 1105L,
        'folded-linenos': [],
        'sel-line': 1112L,
        'sel-line-start': 39769L,
        'selection_end': 39789L,
        'selection_start': 39789L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/fixtures.py'): {'a'\
        'ttrib-starts': [('FixtureRequest',
                          338),
                         ('FixtureRequest._getnextfixturedef',
                          376)],
        'first-line': 372L,
        'folded-linenos': [],
        'sel-line': 387L,
        'sel-line-start': 14561L,
        'selection_end': 14623L,
        'selection_start': 14561L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module',
                          419),
                         ('Module._importtestmodule',
                          487)],
        'first-line': 513L,
        'folded-linenos': [],
        'sel-line': 523L,
        'sel-line-start': 19438L,
        'selection_end': 19438L,
        'selection_start': 19438L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/dask/dataframe/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/deepforest/predict.py'): {'a'\
        'ttrib-starts': [('predict_image',
                          16)],
        'first-line': 38L,
        'folded-linenos': [],
        'sel-line': 50L,
        'sel-line-start': 1819L,
        'selection_end': 1841L,
        'selection_start': 1819L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/fiona/collection.py'): {'a'\
        'ttrib-starts': [('Collection',
                          25),
                         ('Collection.__init__',
                          34)],
        'first-line': 51L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 2725L,
        'selection_end': 2725L,
        'selection_start': 2725L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/geopandas/io/file.py'): {'a'\
        'ttrib-starts': [('infer_schema',
                          195)],
        'first-line': 221L,
        'folded-linenos': [],
        'sel-line': 230L,
        'sel-line-start': 8148L,
        'selection_end': 8148L,
        'selection_start': 8148L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/keras/engine/training_utils.py'): {'a'\
        'ttrib-starts': [('check_num_samples',
                          530)],
        'first-line': 559L,
        'folded-linenos': [],
        'sel-line': 570L,
        'sel-line-start': 23889L,
        'selection_end': 23889L,
        'selection_start': 23889L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/matplotlib/collections.py'): {'a'\
        'ttrib-starts': [('_CollectionWithSizes',
                          820),
                         ('_CollectionWithSizes.set_sizes',
                          838)],
        'first-line': 840L,
        'folded-linenos': [],
        'sel-line': 856L,
        'sel-line-start': 29028L,
        'selection_end': 29028L,
        'selection_start': 29028L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/numpy/__init__.py'): {'a'\
        'ttrib-starts': [('__getattr__',
                          210)],
        'first-line': 201L,
        'folded-linenos': [],
        'sel-line': 213L,
        'sel-line-start': 7084L,
        'selection_end': 7114L,
        'selection_start': 7114L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          150),
                         ('NDFrame.__getattr__',
                          5256)],
        'first-line': 5247L,
        'folded-linenos': [],
        'sel-line': 5273L,
        'sel-line-start': 176248L,
        'selection_end': 176248L,
        'selection_start': 176248L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/groupby/grouper.py'): {'a'\
        'ttrib-starts': [('get_grouper',
                          425)],
        'first-line': 585L,
        'folded-linenos': [],
        'sel-line': 597L,
        'sel-line-start': 20125L,
        'selection_end': 20125L,
        'selection_start': 20125L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/indexes/base.py'): {'a'\
        'ttrib-starts': [('_make_comparison_op',
                          100),
                         ('_make_comparison_op.cmp_method',
                          101)],
        'first-line': 94L,
        'folded-linenos': [],
        'sel-line': 104L,
        'sel-line-start': 2985L,
        'selection_end': 2985L,
        'selection_start': 2985L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/ops/array_ops.py'): {'a'\
        'ttrib-starts': [('masked_arith_op',
                          60)],
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 93L,
        'sel-line-start': 2791L,
        'selection_end': 2791L,
        'selection_start': 2791L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/pdal/pipeline.py'): {'a'\
        'ttrib-starts': [('Pipeline',
                          4),
                         ('Pipeline.get_metadata',
                          15)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 401L,
        'selection_end': 428L,
        'selection_start': 428L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/rtree/index.py'): {'a'\
        'ttrib-starts': [('Index',
                          92),
                         ('Index.get_coordinate_pointers',
                          291)],
        'first-line': 309L,
        'folded-linenos': [],
        'sel-line': 319L,
        'sel-line-start': 10780L,
        'selection_end': 10814L,
        'selection_start': 10814L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/scipy/optimize/minpack.py'): {'a'\
        'ttrib-starts': [('leastsq',
                          265)],
        'first-line': 382L,
        'folded-linenos': [],
        'sel-line': 400L,
        'sel-line-start': 15074L,
        'selection_end': 15074L,
        'selection_start': 15074L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/tensorflow/python/client/session.py'): {'a'\
        'ttrib-starts': [('BaseSession',
                          620),
                         ('BaseSession._do_call',
                          1353)],
        'first-line': 1364L,
        'folded-linenos': [],
        'sel-line': 1369L,
        'sel-line-start': 52327L,
        'selection_end': 52327L,
        'selection_start': 52327L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/crowns/lib/python3.7/site-packages/tensorflow/python/framework/ops.py'): {'a'\
        'ttrib-starts': [('Graph',
                          3001),
                         ('Graph._as_graph_element_locked',
                          3797)],
        'first-line': 3858L,
        'folded-linenos': [],
        'sel-line': 3874L,
        'sel-line-start': 139080L,
        'selection_end': 139080L,
        'selection_start': 139080L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor/lib/python3.6/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor/lib/python3.6/site-packages/fiona/collection.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/laspy/base.py'): {'a'\
        'ttrib-starts': [('DataProvider',
                          93),
                         ('DataProvider.point_map',
                          150)],
        'first-line': 161L,
        'folded-linenos': [],
        'sel-line': 175L,
        'sel-line-start': 6481L,
        'selection_end': 6481L,
        'selection_start': 6481L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          150),
                         ('NDFrame.__getattr__',
                          5256)],
        'first-line': 5261L,
        'folded-linenos': [],
        'sel-line': 5267L,
        'sel-line-start': 176020L,
        'selection_end': 176050L,
        'selection_start': 176050L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/site-packages/tensorflow/python/client/session.py'): {'a'\
        'ttrib-starts': [('BaseSession',
                          620),
                         ('BaseSession._do_call',
                          1353)],
        'first-line': 1355L,
        'folded-linenos': [],
        'sel-line': 1368L,
        'sel-line-start': 52257L,
        'selection_end': 52326L,
        'selection_start': 52257L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/test/lib/python3.7/sre_parse.py'): {'a'\
        'ttrib-starts': [('_parse',
                          468)],
        'first-line': 635L,
        'folded-linenos': [],
        'sel-line': 644L,
        'sel-line-start': 22530L,
        'selection_end': 22530L,
        'selection_start': 22530L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/crowns/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'predict_generator',
                         u'predict_gen',
                         u'predict',
                         u'plot_',
                         u'field_data',
                         u'predicxr',
                         u'project',
                         u'gp',
                         u'area',
                         u'predict_tiles',
                         u'overwrite',
                         u'load',
                         u'csv',
                         u'save_dir',
                         u'read_',
                         u'total_bounds',
                         u'barr',
                         u'run',
                         u'client',
                         u'as_completed']
testing.stored-results = (1,
                          [(u'/Users/ben/Documents/NEON_crown_maps/tests/test_sampling.py',
                            [('test_simulate_plot',
                              0,
                              None,
                              None,
                              None,
                              1585693717,
                              11)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_analysis.py',
                            [('test_match_years',
                              0,
                              None,
                              None,
                              None,
                              1584920826,
                              18),
                             ('test_tree_fall',
                              0,
                              None,
                              None,
                              None,
                              1584920826,
                              23)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_LIDAR.py',
                            [('test_postprocess_CHM',
                              0,
                              None,
                              None,
                              None,
                              1586364508,
                              36),
                             ('test_extraction_error',
                              0,
                              None,
                              None,
                              None,
                              1586365132,
                              40)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_allometry.py',
                            [('test_run',
                              0,
                              None,
                              None,
                              None,
                              1586275325,
                              9)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_hard_mining.py',
                            [('test_run',
                              0,
                              None,
                              None,
                              None,
                              1580681251,
                              3)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_predict.py',
                            [('test_predict_tile',
                              0,
                              None,
                              None,
                              None,
                              1583771701,
                              39),
                             ('test_predict_tilelist',
                              2,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo IndexError('too many indices "\
                               "for array') tblen=2>",
                               'IndexError: too many indices for array',
                               [(u'/Users/ben/Documents/NEON_crown_maps/tests/test_predict.py',
                                 '/Users/ben/Documents/NEON_crown_maps/tests'\
                                 '/test_predict.py',
                                 34,
                                 'record_list',
                                 None,
                                 '        record = tfrecords.create_tfrecord'\
                                 's(tile_path=tif,patch_size=patch_size, sav'\
                                 'edir="output")'),
                                (u'/Users/ben/Documents/NEON_crown_maps/utils/tfrecords.py',
                                 '/Users/ben/Documents/NEON_crown_maps/utils'\
                                 '/tfrecords.py',
                                 75,
                                 'create_tfrecords',
                                 None,
                                 '        crop = crop[:,:,::-1]')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1583777441,
                              43)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_tfrecords.py',
                            [('test_yields_all_pngs',
                              0,
                              None,
                              None,
                              None,
                              1586037862,
                              83),
                             ('test_create_dataset',
                              0,
                              None,
                              None,
                              None,
                              1586034868,
                              38),
                             ('test_create_tfrecords',
                              0,
                              None,
                              None,
                              None,
                              1586034868,
                              34)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_rasterize.py',
                            [('test_run',
                              0,
                              None,
                              None,
                              None,
                              1589323112,
                              4)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_figures.py',
                            [('test_treefalls',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              42),
                             ('test_averages',
                              'running',
                              None,
                              None,
                              None,
                              None,
                              None),
                             ('test_load_shp',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              20),
                             ('test_load_predictions',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              26),
                             ('test_counts',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              38),
                             ('test_tile_averages',
                              1,
                              None,
                              None,
                              ('',
                               "<ExceptionInfo MergeError('No common columns"\
                               " to perform merge on. Merge options: left_on"\
                               "=None, right_on=None, left_index=False, righ"\
                               "t_index=False') tblen=6>",
                               'pandas.errors.MergeError: No common columns '\
                               'to perform merge on. Merge options: left_on='\
                               'None, right_on=None, left_index=False, right'\
                               '_index=False',
                               [(u'/Users/ben/Documents/NEON_crown_maps/tests/test_figures.py',
                                 '/Users/ben/Documents/NEON_crown_maps/tests'\
                                 '/test_figures.py',
                                 35,
                                 'test_tile_averages',
                                 None,
                                 ' results = figures.tile_averages(daskdf)'),
                                (u'/Users/ben/Documents/NEON_crown_maps/figures.py',
                                 '/Users/ben/Documents/NEON_crown_maps/figur'\
                                 'es.py',
                                 50,
                                 'tile_averages',
                                 None,
                                 '    results = average_height_area.merge(nt'\
                                 'rees)'),
                                (u'/Users/ben/miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/frame.py',
                                 '/Users/ben/miniconda3/envs/crowns/lib/pyth'\
                                 'on3.7/site-packages/pandas/core/frame.py',
                                 7296,
                                 'merge',
                                 None,
                                 '        return merge('),
                                (u'/Users/ben/miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/reshape/merge.py',
                                 '/Users/ben/miniconda3/envs/crowns/lib/pyth'\
                                 'on3.7/site-packages/pandas/core/reshape/me'\
                                 'rge.py',
                                 85,
                                 'merge',
                                 None,
                                 '    op = _MergeOperation('),
                                (u'/Users/ben/miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/reshape/merge.py',
                                 '/Users/ben/miniconda3/envs/crowns/lib/pyth'\
                                 'on3.7/site-packages/pandas/core/reshape/me'\
                                 'rge.py',
                                 619,
                                 '__init__',
                                 None,
                                 '        self._validate_specification()'),
                                (u'/Users/ben/miniconda3/envs/crowns/lib/python3.7/site-packages/pandas/core/reshape/merge.py',
                                 '/Users/ben/miniconda3/envs/crowns/lib/pyth'\
                                 'on3.7/site-packages/pandas/core/reshape/me'\
                                 'rge.py',
                                 1197,
                                 '_validate_specification',
                                 None,
                                 '                    raise MergeError(')],
                               0,
                               None,
                               None,
                               None,
                               None),
                              1584997733,
                              34),
                             ('test_site_averages',
                              0,
                              None,
                              None,
                              None,
                              1584997733,
                              30)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_create_submission.py',
                            [('test_submission',
                              0,
                              None,
                              None,
                              None,
                              1589315441,
                              6)]),
                           (u'/Users/ben/Documents/NEON_crown_maps/tests/test_dask.py',
                            [('test_dask',
                              0,
                              None,
                              None,
                              None,
                              1580170653,
                              25)])],
                          {u'/Users/ben/Documents/NEON_crown_maps/test_dask.py': (u'Test process aborted: some tests were not run',
        1579123742)})
